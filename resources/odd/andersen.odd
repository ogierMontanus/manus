<?xml-model href="teipublisher_odds.xsd"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Andersen</title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl>
                <rendition source="andersen.css"/>
            </tagsDecl>
        </encodingDesc>
        <revisionDesc>
            <change when="2021-05-11+02:00">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="andersen" source="teipublisher.odd"> <elementSpec ident="pb" mode="change">
                    <modelSequence>
            <model predicate="$parameters?mode='facsimile'" behaviour="pass-through">
                 <param name="facs" value="'https://img.andersen.sdu.dk/iiif/2/'|| @facs ||'/full/1050,/0/default.jpg'"/><!--full/1200,/0/default.jpg'"/>-->
                <param name="label" value="@n"/>
                <param name="pos" value="'left-top'"/>
                <pb:template xmlns="" xml:space="preserve">     <jinn-window name="[[facs]]" headercontrols="close" position="[[pos]]" title="[[label]]">
    <span slot="icon"><button><iron-icon icon="icons:perm-media"/><span>[[label]]</span></button></span>
        <template>              
          <pb-facs-link label="[[label]]" facs="[[facs]]" emit="[[facs]]"/>
          <pb-facsimile type="image" subscribe="[[facs]]" default-zoom-level="1" show-navigation-control="" show-home-control=""/>               
        </template>
  </jinn-window></pb:template>
            </model>
            <model predicate="@facs" behaviour="webcomponent">
                <param name="name" value="'pb-facs-link'"/>
                <param name="facs" value="'https://img.andersen.sdu.dk/iiif/2/'|| @facs ||'/full/1050,/0/default.jpg'"/><!--full/1200,/0/default.jpg'"/>-->
                <param name="emit" value="'transcription'"/>
            </model>
        </modelSequence>
                    <model behaviour="break" useSourceRendition="true">
            <param name="type" value="'page'"/>
            <param name="label" value="(concat(if(@n) then concat(@n,' ') else '',if(@facs) then                   concat('@',@facs) else ''))"/>
            <outputRendition xml:space="preserve">
            display: block; margin-left: 4pt; color: grey; float: right;
            </outputRendition>
            <outputRendition xml:space="preserve" scope="before">
            content: '[Page ';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: ']';
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="floatingText" mode="change">
                    <modelSequence>
            <model behaviour="link" cssClass="layer-link">
                <param name="alternate" value="'l' || translate(util:node-id(.), '.', '_')"/>
                <param name="uri" value="'#l' || translate(util:node-id(.), '.', '_')"/>
                <pb:template xmlns="" xml:space="preserve"><pb-highlight key="[[alternate]]" highlight-self="highlight-self" emit="transcription" subscribe="transcription"><pb-popover><paper-icon-button icon="icons:chrome-reader-mode"/><span slot="alternate">[[alternate]]</span></pb-popover></pb-highlight></pb:template>
            </model>
            <model behaviour="inline">
                <param name="body" value="body"/>
                <param name="alternate" value="'l' || translate(util:node-id(.), '.', '_')"/>
                <param name="id" value="'l' || translate(util:node-id(.), '.', '_')"/>
                <pb:template xmlns="" xml:space="preserve"><div class="layer" id="[[id]]"><pb-highlight key="[[alternate]]" highlight-self="highlight-self" emit="transcription" subscribe="transcription">[[body]]</pb-highlight></div></pb:template>
            </model>
        </modelSequence>
                </elementSpec>
            <elementSpec ident="milestone" mode="change">
                    <model predicate="$parameters?mode='facsimile' and @unit = &#34;layer&#34;" behaviour="inline">
            <param name="label" value="@n"/>
            <param name="facs" value="'https://img.andersen.sdu.dk/iiif/2/'|| @facs ||'/full/1050,/0/default.jpg'"/><!--full/1200,/0/default.jpg'"/>-->
            <param name="file" value="@facs"/>
            <param name="pos" value="let $layer := ($get(.)/ancestor::floatingText/@type)[1] return switch($layer)  case &#34;secondLayer&#34; return 'center-top' default return 'right-top'"/>
            <pb:template xmlns="" xml:space="preserve"><span>
  <pb-facs-link label="[[label]]" facs="[[facs]]" emit="transcription"/>
  <jinn-window name="[[facs]]" headercontrols="close" position="[[pos]]" title="[[label]]">
    <span slot="icon"><button><iron-icon icon="icons:perm-media"/><span>[[label]]</span></button></span>
        <template>              
          <pb-facs-link label="[[label]]" facs="[[facs]]" emit="[[facs]]"/>
          <pb-facsimile type="image" subscribe="[[facs]]" default-zoom-level="1" show-navigation-control="" show-home-control=""/>               
        </template>
  </jinn-window>
</span></pb:template>
        </model>
                    <model behaviour="inline">
            <param name="label" value="@n"/>
            <param name="facs" value="@facs"/>
            <pb:template xmlns="" xml:space="preserve"><pb-popover>
  <paper-icon-button icon="icons:perm-media"/>
  <span slot="alternate">
    <b>[[label]]</b>
    <br/>
     Filename: [[facs]]
  </span>
</pb-popover></pb:template>
        </model>
                </elementSpec>
            <elementSpec ident="supplied" mode="change">
                    <model predicate="@reason='omitted'" behaviour="inline" cssClass="supplied">
            <outputRendition xml:space="preserve" scope="before">
            content:"(";
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content:")";
            </outputRendition>
        </model>
                    <model predicate="@reason" behaviour="inline" cssClass="app editorial supplied">
            <param name="content" value="."/>
            <param name="alternate" value="@reason"/>
            <pb:template xmlns="" xml:space="preserve"><pb-popover theme="material"><span slot="default">[[content]]</span><span slot="alternate">[[content]] supplied ([[alternate]])</span></pb-popover></pb:template>
            <outputRendition xml:space="preserve" scope="before">
            content:"[";
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content:"]";
            </outputRendition>
        </model>
                    <model behaviour="inline" cssClass="supplied">
            <outputRendition xml:space="preserve" scope="before">
            content:"{";
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content:"}";
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="app" mode="add">
                    <model predicate="@type=&#34;var&#34;" behaviour="inline" cssClass="app var">
            <param name="content" value="lem"/>
            <param name="alt" value="rdg"/>
            <pb:template xmlns="" xml:space="preserve"><span slot="default"><span class="genetic when">[[alt]]</span> [[content]]</span></pb:template>
            <outputRendition xml:space="preserve" scope="before">
            content: "| ";
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="add" mode="change">
                    <model behaviour="inline" cssClass="app author add how"/>
                </elementSpec>
                <elementSpec ident="del" mode="change">
                    <model behaviour="inline" cssClass="app author del how">
            <param name="content" value="."/>
            <param name="when" value="if (@instant=&#34;false&#34;) then '(later)' else '(instant)'"/>
            <pb:template xmlns="" xml:space="preserve"><pb-popover theme="material"><span slot="default">[[content]]</span><span slot="alternate">[[content]] deleted [[when]]</span></pb-popover></pb:template>
        </model>
                    <model predicate="ancestor::app and $parameters?pmode='inner'" behaviour="inline" cssClass="app author del">
            <desc>special processing for handling deletions within popover apparatus entries</desc>
        </model>
                    <model predicate="ancestor::app" behaviour="inline" cssClass="app author del how">
            <param name="content" value="."/>
            <param name="when" value="if (@instant=&#34;false&#34;) then ' (later) ' else ' (instant)'"/>
            <pb:template xmlns="" xml:space="preserve"><span><span class="del">[[content]]</span> [[when]]</span></pb:template>
        </model>
                </elementSpec>
                <elementSpec ident="unclear" mode="change">
                    <model behaviour="inline" cssClass="app editorial unclear">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve"><pb-popover theme="material"><span slot="default">[[content]]</span><span slot="alternate"><i>[[content]]</i> unclear</span></pb-popover></pb:template>
            <outputRendition xml:space="preserve" scope="before">
            content: '〈';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '〉';
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="lb" mode="change">
                    <model behaviour="break" cssClass="lines" useSourceRendition="true">
            <param name="type" value="'line'"/>
            <param name="label" value="@n"/>
        </model>
                </elementSpec>
            <elementSpec ident="rdg" mode="add">
                    <model predicate="../@type=&#34;var&#34;" behaviour="inline" cssClass="rdg">
            <param name="time" value="let $in := (@instant, child::*/@instant)[1] let $i := switch($in) case 'false' return 'later' case 'true' return 'instant' case 'unknown' return 'unknown' default return ()  return $i"/>
            <param name="rdg" value="."/>
            <pb:template xmlns="" xml:space="preserve"><span><span>[[rdg]]</span><pb-i18n key="genetic.[[time]]" class="gen"/></span></pb:template>
        </model>
                </elementSpec>
            <elementSpec ident="lem" mode="add">
                    <model behaviour="inline" cssClass="lem"/>
                </elementSpec>
            <elementSpec ident="retrace" mode="add">
                    <model behaviour="inline" cssClass="retrace"/>
                </elementSpec>
                <elementSpec ident="hi" mode="change">
                    <model predicate="@rend" behaviour="inline" useSourceRendition="true">
            <param name="content" value="."/>
            <param name="rend" value="@rend"/>
            <pb:template xmlns="" xml:space="preserve"><span class="[[rend]]">[[content]]</span></pb:template>
        </model>
                    <model predicate="not(@rendition)" behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="note" mode="change">
                    <model behaviour="inline">
            <param name="content" value="."/>
            <param name="label" value="let $label := @n let $c := . let $count := root(.)//note return 1 + count( $count[. &lt;&lt; $c])"/>
            <pb:template xmlns="" xml:space="preserve"><pb-popover theme="material">
            <span slot="default" class="note-label">[[label]]</span>
            <span slot="alternate">[[content]]
            </span>
</pb-popover></pb:template>
        </model>
                </elementSpec>
                <elementSpec ident="delSpan" mode="add">
                    <model behaviour="inline">
            <param name="target" value="@spanTo"/>
            <pb:template xmlns="" xml:space="preserve"><a name="del" class="delSpan" href="#[[target]]"/></pb:template>
        </model>
                </elementSpec>
                <elementSpec ident="anchor" mode="change">
                    <model behaviour="inline">
            <param name="id" value="@xml:id"/>
            <pb:template xmlns="" xml:space="preserve"><span id="[[id]]"/></pb:template>
        </model>
                </elementSpec>
            <elementSpec ident="addSpan" mode="add">
                    <model behaviour="inline">
            <param name="target" value="@spanTo"/>
            <pb:template xmlns="" xml:space="preserve"><a name="del" class="addSpan" href="#[[target]]"/></pb:template>
        </model>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>
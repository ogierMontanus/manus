{"version":3,"file":"jinn-window.js","sources":["../node_modules/jspanel4/es6module/jspanel.js","../src/JinnWindow.js"],"sourcesContent":["/**\n * jsPanel - A JavaScript library to create highly configurable multifunctional floating panels that can also be used as modal, tooltip, hint or contextmenu\n * @version v4.14.0\n * @homepage https://jspanel.de/\n * @license MIT\n * @author Stefan Sträßer - info@jspanel.de\n * @github https://github.com/Flyer53/jsPanel4.git\n */\n\nexport // eslint-disable-next-line no-redeclare\r\n// noinspection JSVoidFunctionReturnValueUsed\r\n// eslint-disable-next-line no-redeclare\r\nlet jsPanel = {\r\n    version: '4.14.0',\r\n    date: '2022-04-20 15:57',\r\n    ajaxAlwaysCallbacks: [],\r\n    autopositionSpacing: 4,\r\n    closeOnEscape: (() => {\r\n        document.addEventListener(\r\n            'keydown',\r\n            (e) => {\r\n                if (e.key === 'Escape' || e.code === 'Escape' || e.key === 'Esc') {\r\n                    jsPanel\r\n                        .getPanels((panel) => {\r\n                            return panel.classList.contains('jsPanel'); // Array is sorted by z-index (the highest first)\r\n                        })\r\n                        .some((item) => {\r\n                            if (item.options.closeOnEscape) {\r\n                                if (typeof item.options.closeOnEscape === 'function') {\r\n                                    return item.options.closeOnEscape.call(item, item);\r\n                                    // if return value is falsy next panel in sequence will close, otherwise processing of Array.prototype.some() stops\r\n                                } else {\r\n                                    item.close(null, true);\r\n                                    return true;\r\n                                }\r\n                            }\r\n                            return false;\r\n                        });\r\n                }\r\n            },\r\n            false\r\n        );\r\n    })(),\r\n    defaults: {\r\n        boxShadow: 3,\r\n        container: 'window',\r\n        contentSize: { width: '400px', height: '200px' }, // must be an object\r\n        dragit: {\r\n            cursor: 'move',\r\n            handles: '.jsPanel-headerlogo, .jsPanel-titlebar, .jsPanel-ftr', // do not use .jsPanel-headerbar\r\n            opacity: 0.8,\r\n            disableOnMaximized: true,\r\n        },\r\n        header: true,\r\n        headerTitle: 'jsPanel',\r\n        headerControls: { size: 'md' }, // must be an object\r\n        iconfont: undefined,\r\n        maximizedMargin: 0,\r\n        minimizeTo: 'default',\r\n        paneltype: 'standard',\r\n        position: { my: 'center', at: 'center' }, // default position.of MUST NOT be set with new positioning engine\r\n        resizeit: {\r\n            handles: 'n, e, s, w, ne, se, sw, nw',\r\n            minWidth: 128,\r\n            minHeight: 38,\r\n        },\r\n        theme: 'default',\r\n    },\r\n    defaultAutocloseConfig: { time: '8s', progressbar: true },\r\n    defaultSnapConfig: {\r\n        sensitivity: 70,\r\n        trigger: 'panel',\r\n        active: 'both',\r\n    },\r\n    extensions: {},\r\n    globalCallbacks: false,\r\n    icons: {\r\n        close: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M13.7,11l6.1-6.1c0.4-0.4,0.4-0.9,0-1.3l-1.4-1.4c-0.4-0.4-0.9-0.4-1.3,0L11,8.3L4.9,2.3C4.6,1.9,4,1.9,3.7,2.3L2.3,3.7 C1.9,4,1.9,4.6,2.3,4.9L8.3,11l-6.1,6.1c-0.4,0.4-0.4,0.9,0,1.3l1.4,1.4c0.4,0.4,0.9,0.4,1.3,0l6.1-6.1l6.1,6.1 c0.4,0.4,0.9,0.4,1.3,0l1.4-1.4c0.4-0.4,0.4-0.9,0-1.3L13.7,11z\"/></svg>`,\r\n        maximize: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M18.3,2H3.7C2.8,2,2,2.9,2,3.9v14.1C2,19.1,2.8,20,3.7,20h14.6c0.9,0,1.7-0.9,1.7-1.9V3.9C20,2.9,19.2,2,18.3,2z M18.3,17.8 c0,0.1-0.1,0.2-0.2,0.2H3.9c-0.1,0-0.2-0.1-0.2-0.2V8.4h14.6V17.8z\"/></svg>`,\r\n        normalize: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M18.3,2H7.1C6.1,2,5.4,2.8,5.4,3.7v1.7H3.7C2.8,5.4,2,6.1,2,7.1v11.3C2,19.2,2.8,20,3.7,20h11.3c0.9,0,1.7-0.8,1.7-1.7v-1.7 h1.7c0.9,0,1.7-0.8,1.7-1.7V3.7C20,2.8,19.2,2,18.3,2z M14.9,18.3H3.7V11h11.3V18.3z M18.3,14.9h-1.7V7.1c0-0.9-0.8-1.7-1.7-1.7H7.1 V3.7h11.3V14.9z\"/></svg>`,\r\n        minimize: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M18.9,19.8H3.1c-0.6,0-1.1-0.5-1.1-1.1s0.5-1.1,1.1-1.1h15.8c0.6,0,1.1,0.5,1.1,1.1S19.5,19.8,18.9,19.8z\"/></svg>`,\r\n        smallify: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M2.1,15.2L2.9,16c0.2,0.2,0.5,0.2,0.7,0L11,8.7l7.4,7.3c0.2,0.2,0.5,0.2,0.7,0l0.8-0.8c0.2-0.2,0.2-0.5,0-0.7L11.3,6 c-0.2-0.2-0.5-0.2-0.7,0l-8.5,8.5C2,14.7,2,15,2.1,15.2z\"/></svg>`,\r\n    },\r\n    idCounter: 0,\r\n    isIE: (() => {\r\n        return navigator.appVersion.match(/Trident/);\r\n    })(),\r\n    pointerdown: 'onpointerdown' in window ? ['pointerdown'] : 'ontouchend' in window ? ['touchstart', 'mousedown'] : ['mousedown'],\r\n    pointermove: 'onpointermove' in window ? ['pointermove'] : 'ontouchend' in window ? ['touchmove', 'mousemove'] : ['mousemove'],\r\n    pointerup: 'onpointerup' in window ? ['pointerup'] : 'ontouchend' in window ? ['touchend', 'mouseup'] : ['mouseup'],\r\n    polyfills: (() => {\r\n        // Polyfills for IE11 only\r\n        // Object.assign polyfill - https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n        if (!Object.assign) {\r\n            Object.defineProperty(Object, 'assign', {\r\n                enumerable: false,\r\n                configurable: true,\r\n                writable: true,\r\n                value: function (target) {\r\n                    if (target === undefined || target === null) {\r\n                        throw new TypeError('Cannot convert first argument to object');\r\n                    }\r\n                    let to = Object(target);\r\n                    for (let i = 1; i < arguments.length; i++) {\r\n                        let nextSource = arguments[i];\r\n                        if (nextSource === undefined || nextSource === null) {\r\n                            continue;\r\n                        }\r\n                        nextSource = Object(nextSource);\r\n                        let keysArray = Object.keys(Object(nextSource));\r\n                        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\r\n                            let nextKey = keysArray[nextIndex];\r\n                            let desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\r\n                            if (desc !== undefined && desc.enumerable) {\r\n                                to[nextKey] = nextSource[nextKey];\r\n                            }\r\n                        }\r\n                    }\r\n                    return to;\r\n                },\r\n            });\r\n        }\r\n        // NodeList.prototype.forEach() polyfill - https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\r\n        if (window.NodeList && !NodeList.prototype.forEach) {\r\n            NodeList.prototype.forEach = function (callback, thisArg) {\r\n                thisArg = thisArg || window;\r\n                for (let i = 0; i < this.length; i++) {\r\n                    callback.call(thisArg, this[i], i, this);\r\n                }\r\n            };\r\n        }\r\n        // .append() polyfill - https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/append\r\n        (function (arr) {\r\n            arr.forEach(function (item) {\r\n                item.append =\r\n                    item.append ||\r\n                    function () {\r\n                        let argArr = Array.prototype.slice.call(arguments),\r\n                            docFrag = document.createDocumentFragment();\r\n                        argArr.forEach(function (argItem) {\r\n                            let isNode = argItem instanceof Node;\r\n                            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\r\n                        });\r\n                        this.appendChild(docFrag);\r\n                    };\r\n            });\r\n        })([Element.prototype, Document.prototype, DocumentFragment.prototype]);\r\n        // Element.closest() polyfill - https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\r\n        if (window.Element && !Element.prototype.closest) {\r\n            // noinspection JSValidateTypes\r\n            Element.prototype.closest = function (s) {\r\n                // noinspection JSUnresolvedVariable\r\n                let matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n                    i,\r\n                    el = this;\r\n                do {\r\n                    i = matches.length;\r\n                    // eslint-disable-next-line no-empty\r\n                    while (--i >= 0 && matches.item(i) !== el) {}\r\n                } while (i < 0 && (el = el.parentElement));\r\n                return el;\r\n            };\r\n        }\r\n        // CustomEvent - https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n        (function () {\r\n            if (typeof window.CustomEvent === 'function') return false;\r\n            function CustomEvent(event, params) {\r\n                params = params || {\r\n                    bubbles: false,\r\n                    cancelable: false,\r\n                    detail: undefined,\r\n                };\r\n                let evt = document.createEvent('CustomEvent');\r\n                evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n                return evt;\r\n            }\r\n            // noinspection JSValidateTypes\r\n            CustomEvent.prototype = window.Event.prototype;\r\n            // noinspection JSValidateTypes\r\n            window.CustomEvent = CustomEvent;\r\n        })();\r\n        // String.prototype.endsWith() - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\r\n        if (!String.prototype.endsWith) {\r\n            String.prototype.endsWith = function (searchStr, Position) {\r\n                // This works much better than >= because\r\n                // it compensates for NaN:\r\n                if (!(Position < this.length)) Position = this.length;\r\n                else Position |= 0; // round position\r\n                return this.substr(Position - searchStr.length, searchStr.length) === searchStr;\r\n            };\r\n        }\r\n        // String.prototype.startsWith() - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\r\n        if (!String.prototype.startsWith) {\r\n            String.prototype.startsWith = function (searchString, position) {\r\n                return this.substr(position || 0, searchString.length) === searchString;\r\n            };\r\n        }\r\n        // String.prototype.includes() - https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/String/includes\r\n        if (!String.prototype.includes) {\r\n            String.prototype.includes = function (search, start) {\r\n                if (typeof start !== 'number') {\r\n                    start = 0;\r\n                }\r\n                if (start + search.length > this.length) {\r\n                    return false;\r\n                } else {\r\n                    return this.indexOf(search, start) !== -1;\r\n                }\r\n            };\r\n        }\r\n        // Number.isInteger() - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\r\n        Number.isInteger =\r\n            Number.isInteger ||\r\n            function (value) {\r\n                return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n            };\r\n        // Array.prototype.includes() - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\r\n        if (!Array.prototype.includes) {\r\n            Object.defineProperty(Array.prototype, 'includes', {\r\n                value: function (searchElement, fromIndex) {\r\n                    if (this == null) {\r\n                        throw new TypeError('\"this\" is null or not defined');\r\n                    }\r\n                    // 1. Let O be ? ToObject(this value).\r\n                    let o = Object(this);\r\n                    // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n                    let len = o.length >>> 0;\r\n                    // 3. If len is 0, return false.\r\n                    if (len === 0) {\r\n                        return false;\r\n                    }\r\n                    // 4. Let n be ? ToInteger(fromIndex).\r\n                    //    (If fromIndex is undefined, this step produces the value 0.)\r\n                    let n = fromIndex | 0;\r\n                    // 5. If n ≥ 0, then\r\n                    //  a. Let k be n.\r\n                    // 6. Else n < 0,\r\n                    //  a. Let k be len + n.\r\n                    //  b. If k < 0, let k be 0.\r\n                    let k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n                    function sameValueZero(x, y) {\r\n                        return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\r\n                    }\r\n                    // 7. Repeat, while k < len\r\n                    while (k < len) {\r\n                        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n                        // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n                        if (sameValueZero(o[k], searchElement)) {\r\n                            return true;\r\n                        }\r\n                        // c. Increase k by 1.\r\n                        k++;\r\n                    }\r\n                    // 8. Return false\r\n                    return false;\r\n                },\r\n            });\r\n        }\r\n    })(),\r\n    themes: ['default', 'primary', 'secondary', 'info', 'success', 'warning', 'danger', 'light', 'dark'],\r\n    ziBase: 100,\r\n    colorFilledLight: 0.81,\r\n    colorFilledDark: 0.08,\r\n    colorFilled: 0,\r\n    colorBrightnessThreshold: 0.55,\r\n    colorNames: {\r\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords\r\n        aliceblue: 'f0f8ff',\r\n        antiquewhite: 'faebd7',\r\n        aqua: '0ff',\r\n        aquamarine: '7fffd4',\r\n        azure: 'f0ffff',\r\n        beige: 'f5f5dc',\r\n        bisque: 'ffe4c4',\r\n        black: '000',\r\n        blanchedalmond: 'ffebcd',\r\n        blue: '00f',\r\n        blueviolet: '8a2be2',\r\n        brown: 'a52a2a',\r\n        burlywood: 'deb887',\r\n        cadetblue: '5f9ea0',\r\n        chartreuse: '7fff00',\r\n        chocolate: 'd2691e',\r\n        coral: 'ff7f50',\r\n        cornflowerblue: '6495ed',\r\n        cornsilk: 'fff8dc',\r\n        crimson: 'dc143c',\r\n        cyan: '0ff',\r\n        darkblue: '00008b',\r\n        darkcyan: '008b8b',\r\n        darkgoldenrod: 'b8860b',\r\n        darkgray: 'a9a9a9',\r\n        darkgrey: 'a9a9a9',\r\n        darkgreen: '006400',\r\n        darkkhaki: 'bdb76b',\r\n        darkmagenta: '8b008b',\r\n        darkolivegreen: '556b2f',\r\n        darkorange: 'ff8c00',\r\n        darkorchid: '9932cc',\r\n        darkred: '8b0000',\r\n        darksalmon: 'e9967a',\r\n        darkseagreen: '8fbc8f',\r\n        darkslateblue: '483d8b',\r\n        darkslategray: '2f4f4f',\r\n        darkslategrey: '2f4f4f',\r\n        darkturquoise: '00ced1',\r\n        darkviolet: '9400d3',\r\n        deeppink: 'ff1493',\r\n        deepskyblue: '00bfff',\r\n        dimgray: '696969',\r\n        dimgrey: '696969',\r\n        dodgerblue: '1e90ff',\r\n        firebrick: 'b22222',\r\n        floralwhite: 'fffaf0',\r\n        forestgreen: '228b22',\r\n        fuchsia: 'f0f',\r\n        gainsboro: 'dcdcdc',\r\n        ghostwhite: 'f8f8ff',\r\n        gold: 'ffd700',\r\n        goldenrod: 'daa520',\r\n        gray: '808080',\r\n        grey: '808080',\r\n        green: '008000',\r\n        greenyellow: 'adff2f',\r\n        honeydew: 'f0fff0',\r\n        hotpink: 'ff69b4',\r\n        indianred: 'cd5c5c',\r\n        indigo: '4b0082',\r\n        ivory: 'fffff0',\r\n        khaki: 'f0e68c',\r\n        lavender: 'e6e6fa',\r\n        lavenderblush: 'fff0f5',\r\n        lawngreen: '7cfc00',\r\n        lemonchiffon: 'fffacd',\r\n        lightblue: 'add8e6',\r\n        lightcoral: 'f08080',\r\n        lightcyan: 'e0ffff',\r\n        lightgoldenrodyellow: 'fafad2',\r\n        lightgray: 'd3d3d3',\r\n        lightgrey: 'd3d3d3',\r\n        lightgreen: '90ee90',\r\n        lightpink: 'ffb6c1',\r\n        lightsalmon: 'ffa07a',\r\n        lightseagreen: '20b2aa',\r\n        lightskyblue: '87cefa',\r\n        lightslategray: '789',\r\n        lightslategrey: '789',\r\n        lightsteelblue: 'b0c4de',\r\n        lightyellow: 'ffffe0',\r\n        lime: '0f0',\r\n        limegreen: '32cd32',\r\n        linen: 'faf0e6',\r\n        magenta: 'f0f',\r\n        maroon: '800000',\r\n        mediumaquamarine: '66cdaa',\r\n        mediumblue: '0000cd',\r\n        mediumorchid: 'ba55d3',\r\n        mediumpurple: '9370d8',\r\n        mediumseagreen: '3cb371',\r\n        mediumslateblue: '7b68ee',\r\n        mediumspringgreen: '00fa9a',\r\n        mediumturquoise: '48d1cc',\r\n        mediumvioletred: 'c71585',\r\n        midnightblue: '191970',\r\n        mintcream: 'f5fffa',\r\n        mistyrose: 'ffe4e1',\r\n        moccasin: 'ffe4b5',\r\n        navajowhite: 'ffdead',\r\n        navy: '000080',\r\n        oldlace: 'fdf5e6',\r\n        olive: '808000',\r\n        olivedrab: '6b8e23',\r\n        orange: 'ffa500',\r\n        orangered: 'ff4500',\r\n        orchid: 'da70d6',\r\n        palegoldenrod: 'eee8aa',\r\n        palegreen: '98fb98',\r\n        paleturquoise: 'afeeee',\r\n        palevioletred: 'd87093',\r\n        papayawhip: 'ffefd5',\r\n        peachpuff: 'ffdab9',\r\n        peru: 'cd853f',\r\n        pink: 'ffc0cb',\r\n        plum: 'dda0dd',\r\n        powderblue: 'b0e0e6',\r\n        purple: '800080',\r\n        rebeccapurple: '639',\r\n        red: 'f00',\r\n        rosybrown: 'bc8f8f',\r\n        royalblue: '4169e1',\r\n        saddlebrown: '8b4513',\r\n        salmon: 'fa8072',\r\n        sandybrown: 'f4a460',\r\n        seagreen: '2e8b57',\r\n        seashell: 'fff5ee',\r\n        sienna: 'a0522d',\r\n        silver: 'c0c0c0',\r\n        skyblue: '87ceeb',\r\n        slateblue: '6a5acd',\r\n        slategray: '708090',\r\n        slategrey: '708090',\r\n        snow: 'fffafa',\r\n        springgreen: '00ff7f',\r\n        steelblue: '4682b4',\r\n        tan: 'd2b48c',\r\n        teal: '008080',\r\n        thistle: 'd8bfd8',\r\n        tomato: 'ff6347',\r\n        turquoise: '40e0d0',\r\n        violet: 'ee82ee',\r\n        wheat: 'f5deb3',\r\n        white: 'fff',\r\n        whitesmoke: 'f5f5f5',\r\n        yellow: 'ff0',\r\n        yellowgreen: '9acd32',\r\n        /* Material Design Colors https://material.io/design/color/the-color-system.html#tools-for-picking-colors */\r\n        grey50: 'fafafa',\r\n        grey100: 'f5f5f5',\r\n        grey200: 'eee',\r\n        grey300: 'e0e0e0',\r\n        grey400: 'bdbdbd',\r\n        grey500: '9e9e9e',\r\n        grey600: '757575',\r\n        grey700: '616161',\r\n        grey800: '424242',\r\n        grey900: '212121',\r\n        gray50: 'fafafa',\r\n        gray100: 'f5f5f5',\r\n        gray200: 'eee',\r\n        gray300: 'e0e0e0',\r\n        gray400: 'bdbdbd',\r\n        gray500: '9e9e9e',\r\n        gray600: '757575',\r\n        gray700: '616161',\r\n        gray800: '424242',\r\n        gray900: '212121',\r\n        bluegrey50: 'eceff1',\r\n        bluegrey100: 'CFD8DC',\r\n        bluegrey200: 'B0BEC5',\r\n        bluegrey300: '90A4AE',\r\n        bluegrey400: '78909C',\r\n        bluegrey500: '607D8B',\r\n        bluegrey600: '546E7A',\r\n        bluegrey700: '455A64',\r\n        bluegrey800: '37474F',\r\n        bluegrey900: '263238',\r\n        bluegray50: 'eceff1',\r\n        bluegray100: 'CFD8DC',\r\n        bluegray200: 'B0BEC5',\r\n        bluegray300: '90A4AE',\r\n        bluegray400: '78909C',\r\n        bluegray500: '607D8B',\r\n        bluegray600: '546E7A',\r\n        bluegray700: '455A64',\r\n        bluegray800: '37474F',\r\n        bluegray900: '263238',\r\n        red50: 'FFEBEE',\r\n        red100: 'FFCDD2',\r\n        red200: 'EF9A9A',\r\n        red300: 'E57373',\r\n        red400: 'EF5350',\r\n        red500: 'F44336',\r\n        red600: 'E53935',\r\n        red700: 'D32F2F',\r\n        red800: 'C62828',\r\n        red900: 'B71C1C',\r\n        reda100: 'FF8A80',\r\n        reda200: 'FF5252',\r\n        reda400: 'FF1744',\r\n        reda700: 'D50000',\r\n        pink50: 'FCE4EC',\r\n        pink100: 'F8BBD0',\r\n        pink200: 'F48FB1',\r\n        pink300: 'F06292',\r\n        pink400: 'EC407A',\r\n        pink500: 'E91E63',\r\n        pink600: 'D81B60',\r\n        pink700: 'C2185B',\r\n        pink800: 'AD1457',\r\n        pink900: '880E4F',\r\n        pinka100: 'FF80AB',\r\n        pinka200: 'FF4081',\r\n        pinka400: 'F50057',\r\n        pinka700: 'C51162',\r\n        purple50: 'F3E5F5',\r\n        purple100: 'E1BEE7',\r\n        purple200: 'CE93D8',\r\n        purple300: 'BA68C8',\r\n        purple400: 'AB47BC',\r\n        purple500: '9C27B0',\r\n        purple600: '8E24AA',\r\n        purple700: '7B1FA2',\r\n        purple800: '6A1B9A',\r\n        purple900: '4A148C',\r\n        purplea100: 'EA80FC',\r\n        purplea200: 'E040FB',\r\n        purplea400: 'D500F9',\r\n        purplea700: 'AA00FF',\r\n        deeppurple50: 'EDE7F6',\r\n        deeppurple100: 'D1C4E9',\r\n        deeppurple200: 'B39DDB',\r\n        deeppurple300: '9575CD',\r\n        deeppurple400: '7E57C2',\r\n        deeppurple500: '673AB7',\r\n        deeppurple600: '5E35B1',\r\n        deeppurple700: '512DA8',\r\n        deeppurple800: '4527A0',\r\n        deeppurple900: '311B92',\r\n        deeppurplea100: 'B388FF',\r\n        deeppurplea200: '7C4DFF',\r\n        deeppurplea400: '651FFF',\r\n        deeppurplea700: '6200EA',\r\n        indigo50: 'E8EAF6',\r\n        indigo100: 'C5CAE9',\r\n        indigo200: '9FA8DA',\r\n        indigo300: '7986CB',\r\n        indigo400: '5C6BC0',\r\n        indigo500: '3F51B5',\r\n        indigo600: '3949AB',\r\n        indigo700: '303F9F',\r\n        indigo800: '283593',\r\n        indigo900: '1A237E',\r\n        indigoa100: '8C9EFF',\r\n        indigoa200: '536DFE',\r\n        indigoa400: '3D5AFE',\r\n        indigoa700: '304FFE',\r\n        blue50: 'E3F2FD',\r\n        blue100: 'BBDEFB',\r\n        blue200: '90CAF9',\r\n        blue300: '64B5F6',\r\n        blue400: '42A5F5',\r\n        blue500: '2196F3',\r\n        blue600: '1E88E5',\r\n        blue700: '1976D2',\r\n        blue800: '1565C0',\r\n        blue900: '0D47A1',\r\n        bluea100: '82B1FF',\r\n        bluea200: '448AFF',\r\n        bluea400: '2979FF',\r\n        bluea700: '2962FF',\r\n        lightblue50: 'E1F5FE',\r\n        lightblue100: 'B3E5FC',\r\n        lightblue200: '81D4FA',\r\n        lightblue300: '4FC3F7',\r\n        lightblue400: '29B6F6',\r\n        lightblue500: '03A9F4',\r\n        lightblue600: '039BE5',\r\n        lightblue700: '0288D1',\r\n        lightblue800: '0277BD',\r\n        lightblue900: '01579B',\r\n        lightbluea100: '80D8FF',\r\n        lightbluea200: '40C4FF',\r\n        lightbluea400: '00B0FF',\r\n        lightbluea700: '0091EA',\r\n        cyan50: 'E0F7FA',\r\n        cyan100: 'B2EBF2',\r\n        cyan200: '80DEEA',\r\n        cyan300: '4DD0E1',\r\n        cyan400: '26C6DA',\r\n        cyan500: '00BCD4',\r\n        cyan600: '00ACC1',\r\n        cyan700: '0097A7',\r\n        cyan800: '00838F',\r\n        cyan900: '006064',\r\n        cyana100: '84FFFF',\r\n        cyana200: '18FFFF',\r\n        cyana400: '00E5FF',\r\n        cyana700: '00B8D4',\r\n        teal50: 'E0F2F1',\r\n        teal100: 'B2DFDB',\r\n        teal200: '80CBC4',\r\n        teal300: '4DB6AC',\r\n        teal400: '26A69A',\r\n        teal500: '009688',\r\n        teal600: '00897B',\r\n        teal700: '00796B',\r\n        teal800: '00695C',\r\n        teal900: '004D40',\r\n        teala100: 'A7FFEB',\r\n        teala200: '64FFDA',\r\n        teala400: '1DE9B6',\r\n        teala700: '00BFA5',\r\n        green50: 'E8F5E9',\r\n        green100: 'C8E6C9',\r\n        green200: 'A5D6A7',\r\n        green300: '81C784',\r\n        green400: '66BB6A',\r\n        green500: '4CAF50',\r\n        green600: '43A047',\r\n        green700: '388E3C',\r\n        green800: '2E7D32',\r\n        green900: '1B5E20',\r\n        greena100: 'B9F6CA',\r\n        greena200: '69F0AE',\r\n        greena400: '00E676',\r\n        greena700: '00C853',\r\n        lightgreen50: 'F1F8E9',\r\n        lightgreen100: 'DCEDC8',\r\n        lightgreen200: 'C5E1A5',\r\n        lightgreen300: 'AED581',\r\n        lightgreen400: '9CCC65',\r\n        lightgreen500: '8BC34A',\r\n        lightgreen600: '7CB342',\r\n        lightgreen700: '689F38',\r\n        lightgreen800: '558B2F',\r\n        lightgreen900: '33691E',\r\n        lightgreena100: 'CCFF90',\r\n        lightgreena200: 'B2FF59',\r\n        lightgreena400: '76FF03',\r\n        lightgreena700: '64DD17',\r\n        lime50: 'F9FBE7',\r\n        lime100: 'F0F4C3',\r\n        lime200: 'E6EE9C',\r\n        lime300: 'DCE775',\r\n        lime400: 'D4E157',\r\n        lime500: 'CDDC39',\r\n        lime600: 'C0CA33',\r\n        lime700: 'AFB42B',\r\n        lime800: '9E9D24',\r\n        lime900: '827717',\r\n        limea100: 'F4FF81',\r\n        limea200: 'EEFF41',\r\n        limea400: 'C6FF00',\r\n        limea700: 'AEEA00',\r\n        yellow50: 'FFFDE7',\r\n        yellow100: 'FFF9C4',\r\n        yellow200: 'FFF59D',\r\n        yellow300: 'FFF176',\r\n        yellow400: 'FFEE58',\r\n        yellow500: 'FFEB3B',\r\n        yellow600: 'FDD835',\r\n        yellow700: 'FBC02D',\r\n        yellow800: 'F9A825',\r\n        yellow900: 'F57F17',\r\n        yellowa100: 'FFFF8D',\r\n        yellowa200: 'FFFF00',\r\n        yellowa400: 'FFEA00',\r\n        yellowa700: 'FFD600',\r\n        amber50: 'FFF8E1',\r\n        amber100: 'FFECB3',\r\n        amber200: 'FFE082',\r\n        amber300: 'FFD54F',\r\n        amber400: 'FFCA28',\r\n        amber500: 'FFC107',\r\n        amber600: 'FFB300',\r\n        amber700: 'FFA000',\r\n        amber800: 'FF8F00',\r\n        amber900: 'FF6F00',\r\n        ambera100: 'FFE57F',\r\n        ambera200: 'FFD740',\r\n        ambera400: 'FFC400',\r\n        ambera700: 'FFAB00',\r\n        orange50: 'FFF3E0',\r\n        orange100: 'FFE0B2',\r\n        orange200: 'FFCC80',\r\n        orange300: 'FFB74D',\r\n        orange400: 'FFA726',\r\n        orange500: 'FF9800',\r\n        orange600: 'FB8C00',\r\n        orange700: 'F57C00',\r\n        orange800: 'EF6C00',\r\n        orange900: 'E65100',\r\n        orangea100: 'FFD180',\r\n        orangea200: 'FFAB40',\r\n        orangea400: 'FF9100',\r\n        orangea700: 'FF6D00',\r\n        deeporange50: 'FBE9E7',\r\n        deeporange100: 'FFCCBC',\r\n        deeporange200: 'FFAB91',\r\n        deeporange300: 'FF8A65',\r\n        deeporange400: 'FF7043',\r\n        deeporange500: 'FF5722',\r\n        deeporange600: 'F4511E',\r\n        deeporange700: 'E64A19',\r\n        deeporange800: 'D84315',\r\n        deeporange900: 'BF360C',\r\n        deeporangea100: 'FF9E80',\r\n        deeporangea200: 'FF6E40',\r\n        deeporangea400: 'FF3D00',\r\n        deeporangea700: 'DD2C00',\r\n        brown50: 'EFEBE9',\r\n        brown100: 'D7CCC8',\r\n        brown200: 'BCAAA4',\r\n        brown300: 'A1887F',\r\n        brown400: '8D6E63',\r\n        brown500: '795548',\r\n        brown600: '6D4C41',\r\n        brown700: '5D4037',\r\n        brown800: '4E342E',\r\n        brown900: '3E2723',\r\n    },\r\n    errorReporting: 1,\r\n    modifier: false,\r\n    helper: (() => {\r\n        document.addEventListener('keydown', (e) => {\r\n            jsPanel.modifier = e;\r\n        });\r\n        document.addEventListener('keyup', () => {\r\n            jsPanel.modifier = false;\r\n        });\r\n    })(),\r\n\r\n    usePointerEvents(use = true) {\r\n        if (!use) {\r\n            this.pointerdown = 'ontouchend' in window ? ['touchstart', 'mousedown'] : ['mousedown'];\r\n            this.pointermove = 'ontouchend' in window ? ['touchmove', 'mousemove'] : ['mousemove'];\r\n            this.pointerup = 'ontouchend' in window ? ['touchend', 'mouseup'] : ['mouseup'];\r\n        } else {\r\n            this.pointerdown = 'onpointerdown' in window ? ['pointerdown'] : 'ontouchend' in window ? ['touchstart', 'mousedown'] : ['mousedown'];\r\n            this.pointermove = 'onpointermove' in window ? ['pointermove'] : 'ontouchend' in window ? ['touchmove', 'mousemove'] : ['mousemove'];\r\n            this.pointerup = 'onpointerup' in window ? ['pointerup'] : 'ontouchend' in window ? ['touchend', 'mouseup'] : ['mouseup'];\r\n        }\r\n    },\r\n\r\n    // color methods ---------------\r\n    color(val) {\r\n        let color = val.toLowerCase(),\r\n            r,\r\n            g,\r\n            b,\r\n            h,\r\n            s,\r\n            l,\r\n            match,\r\n            channels,\r\n            hsl,\r\n            result = {};\r\n        const hexPattern = /^#?([0-9a-f]{3}|[0-9a-f]{6})$/gi, // matches \"#123\" or \"#f05a78\" with or without \"#\"\r\n            RGBAPattern = /^rgba?\\(([0-9]{1,3}),([0-9]{1,3}),([0-9]{1,3}),?(0|1|0\\.[0-9]{1,2}|\\.[0-9]{1,2})?\\)$/gi, // matches rgb/rgba color values, whitespace allowed\r\n            HSLAPattern = /^hsla?\\(([0-9]{1,3}),([0-9]{1,3}%),([0-9]{1,3}%),?(0|1|0\\.[0-9]{1,2}|\\.[0-9]{1,2})?\\)$/gi,\r\n            namedColors = this.colorNames;\r\n\r\n        // change named color to corresponding hex value\r\n        if (namedColors[color]) {\r\n            color = namedColors[color];\r\n        }\r\n\r\n        // check val for hex color\r\n        if (color.match(hexPattern) !== null) {\r\n            // '#' remove\r\n            color = color.replace('#', '');\r\n            // color has either 3 or 6 characters\r\n            if (color.length % 2 === 1) {\r\n                // color has 3 char -> convert to 6 char\r\n                // r = color.substr(0,1).repeat(2);\r\n                // g = color.substr(1,1).repeat(2); // String.prototype.repeat() doesn't work in IE11\r\n                // b = color.substr(2,1).repeat(2);\r\n                r = String(color.substr(0, 1)) + color.substr(0, 1);\r\n                g = String(color.substr(1, 1)) + color.substr(1, 1);\r\n                b = String(color.substr(2, 1)) + color.substr(2, 1);\r\n\r\n                result.rgb = {\r\n                    r: parseInt(r, 16),\r\n                    g: parseInt(g, 16),\r\n                    b: parseInt(b, 16),\r\n                };\r\n\r\n                result.hex = `#${r}${g}${b}`;\r\n            } else {\r\n                // color has 6 char\r\n                result.rgb = {\r\n                    r: parseInt(color.substr(0, 2), 16),\r\n                    g: parseInt(color.substr(2, 2), 16),\r\n                    b: parseInt(color.substr(4, 2), 16),\r\n                };\r\n\r\n                result.hex = `#${color}`;\r\n            }\r\n\r\n            hsl = this.rgbToHsl(result.rgb.r, result.rgb.g, result.rgb.b);\r\n            result.hsl = hsl;\r\n            result.rgb.css = `rgb(${result.rgb.r},${result.rgb.g},${result.rgb.b})`;\r\n        }\r\n        // check val for rgb/rgba color\r\n        else if (color.match(RGBAPattern)) {\r\n            match = RGBAPattern.exec(color);\r\n            result.rgb = { css: color, r: match[1], g: match[2], b: match[3] };\r\n            result.hex = this.rgbToHex(match[1], match[2], match[3]);\r\n            hsl = this.rgbToHsl(match[1], match[2], match[3]);\r\n            result.hsl = hsl;\r\n        }\r\n        // check val for hsl/hsla color\r\n        else if (color.match(HSLAPattern)) {\r\n            match = HSLAPattern.exec(color);\r\n\r\n            h = match[1] / 360;\r\n            s = match[2].substr(0, match[2].length - 1) / 100;\r\n            l = match[3].substr(0, match[3].length - 1) / 100;\r\n\r\n            channels = this.hslToRgb(h, s, l);\r\n\r\n            result.rgb = {\r\n                css: `rgb(${channels[0]},${channels[1]},${channels[2]})`,\r\n                r: channels[0],\r\n                g: channels[1],\r\n                b: channels[2],\r\n            };\r\n            result.hex = this.rgbToHex(result.rgb.r, result.rgb.g, result.rgb.b);\r\n            result.hsl = {\r\n                css: `hsl(${match[1]},${match[2]},${match[3]})`,\r\n                h: match[1],\r\n                s: match[2],\r\n                l: match[3],\r\n            };\r\n        }\r\n\r\n        // or return #f5f5f5\r\n        else {\r\n            result.hex = '#f5f5f5';\r\n            result.rgb = { css: 'rgb(245,245,245)', r: 245, g: 245, b: 245 };\r\n            result.hsl = { css: 'hsl(0,0%,96%)', h: 0, s: '0%', l: '96%' };\r\n        }\r\n\r\n        return result;\r\n    },\r\n    calcColors(primaryColor) {\r\n        const threshold = this.colorBrightnessThreshold,\r\n            primeColor = this.color(primaryColor),\r\n            filledlightColor = this.lighten(primaryColor, this.colorFilledLight),\r\n            filledColor = this.darken(primaryColor, this.colorFilled),\r\n            fontColorForPrimary = this.perceivedBrightness(primaryColor) <= threshold ? '#ffffff' : '#000000',\r\n            fontColorFilledlight = this.perceivedBrightness(filledlightColor) <= threshold ? '#ffffff' : '#000000',\r\n            fontColorFilled = this.perceivedBrightness(filledColor) <= threshold ? '#ffffff' : '#000000',\r\n            filleddarkColor = this.lighten(primaryColor, this.colorFilledDark),\r\n            fontColorFilleddark = this.perceivedBrightness(filleddarkColor) <= threshold ? '#ffffff' : '#000000';\r\n        return [\r\n            primeColor.hsl.css,\r\n            filledlightColor,\r\n            filledColor,\r\n            fontColorForPrimary,\r\n            fontColorFilledlight,\r\n            fontColorFilled,\r\n            filleddarkColor,\r\n            fontColorFilleddark,\r\n        ];\r\n    },\r\n    darken(val, amount) {\r\n        // amount is value between 0 and 1\r\n        const hsl = this.color(val).hsl,\r\n            l = parseFloat(hsl.l),\r\n            lnew = Math.round(l - l * amount) + '%';\r\n        return `hsl(${hsl.h},${hsl.s},${lnew})`;\r\n    },\r\n    lighten(val, amount) {\r\n        // amount is value between 0 and 1\r\n        const hsl = this.color(val).hsl,\r\n            l = parseFloat(hsl.l),\r\n            lnew = Math.round(l + (100 - l) * amount) + '%';\r\n        return `hsl(${hsl.h},${hsl.s},${lnew})`;\r\n    },\r\n    hslToRgb(h, s, l) {\r\n        // h, s and l must be values between 0 and 1\r\n        let r, g, b;\r\n        if (s === 0) {\r\n            r = g = b = l; // achromatic\r\n        } else {\r\n            let hue2rgb = (p, q, t) => {\r\n                if (t < 0) {\r\n                    t += 1;\r\n                }\r\n                if (t > 1) {\r\n                    t -= 1;\r\n                }\r\n                if (t < 1 / 6) {\r\n                    return p + (q - p) * 6 * t;\r\n                }\r\n                if (t < 1 / 2) {\r\n                    return q;\r\n                }\r\n                if (t < 2 / 3) {\r\n                    return p + (q - p) * (2 / 3 - t) * 6;\r\n                }\r\n                return p;\r\n            };\r\n            let q = l < 0.5 ? l * (1 + s) : l + s - l * s,\r\n                p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1 / 3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1 / 3);\r\n        }\r\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\r\n    },\r\n    rgbToHsl(r, g, b) {\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n        let max = Math.max(r, g, b),\r\n            min = Math.min(r, g, b),\r\n            h,\r\n            s,\r\n            l = (max + min) / 2;\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            let d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n            switch (max) {\r\n                case r:\r\n                    h = (g - b) / d + (g < b ? 6 : 0);\r\n                    break;\r\n                case g:\r\n                    h = (b - r) / d + 2;\r\n                    break;\r\n                case b:\r\n                    h = (r - g) / d + 4;\r\n                    break;\r\n            }\r\n            h /= 6;\r\n        }\r\n        //return [ h, s, l ];\r\n        h = Math.round(h * 360);\r\n        s = Math.round(s * 100) + '%';\r\n        l = Math.round(l * 100) + '%';\r\n        return { css: 'hsl(' + h + ',' + s + ',' + l + ')', h: h, s: s, l: l };\r\n    },\r\n    rgbToHex(r, g, b) {\r\n        let red = Number(r).toString(16),\r\n            green = Number(g).toString(16),\r\n            blue = Number(b).toString(16);\r\n        if (red.length === 1) {\r\n            red = `0${red}`;\r\n        }\r\n        if (green.length === 1) {\r\n            green = `0${green}`;\r\n        }\r\n        if (blue.length === 1) {\r\n            blue = `0${blue}`;\r\n        }\r\n        return `#${red}${green}${blue}`;\r\n    },\r\n    perceivedBrightness(val) {\r\n        const rgb = this.color(val).rgb;\r\n        // return value is in the range 0 - 1 and input rgb values must also be in the range 0 - 1\r\n        // https://www.w3.org/TR/WCAG20-TECHS/G18.html\r\n        return (rgb.r / 255) * 0.2126 + (rgb.g / 255) * 0.7152 + (rgb.b / 255) * 0.0722;\r\n    },\r\n\r\n    // positioning methods ---------------\r\n    pOposition(positionshorthand) {\r\n        let result = {};\r\n        // remove leading and trailing whitespace and split position shorthand string into array\r\n        let pos = positionshorthand.trim().split(/\\s+/);\r\n\r\n        // find autoposition value and assign to result, must be the first item to find and remove\r\n        let auto = pos.filter((item) => {\r\n            return item.match(/^(down|right|up|left)$/i);\r\n        });\r\n        if (auto.length) {\r\n            result.autoposition = auto[0];\r\n            pos.splice(pos.indexOf(auto[0]), 1);\r\n        }\r\n\r\n        // find my and at values and assign to result\r\n        let my_at = pos.filter((item) => {\r\n            return item.match(/^(left-|right-)(top|center|bottom)$|(^center-)(top|bottom)$|(^center$)/i);\r\n        });\r\n        if (my_at.length) {\r\n            result.my = my_at[0];\r\n            result.at = my_at[1] || my_at[0];\r\n            pos.splice(pos.indexOf(my_at[0]), 1);\r\n            if (my_at[1]) {\r\n                pos.splice(pos.indexOf(my_at[1]), 1);\r\n            }\r\n        } else {\r\n            result.my = 'center';\r\n            result.at = 'center';\r\n        }\r\n\r\n        // find offset and assign to result\r\n        let offsets = pos.filter((item) => {\r\n            return item.match(/^[+-]?\\d*\\.?\\d+[a-z%]*$/i);\r\n        });\r\n        if (offsets.length) {\r\n            result.offsetX = offsets[0].match(/^[+-]?\\d*\\.?\\d+$/i) ? `${offsets[0]}px` : offsets[0];\r\n            if (offsets[1]) {\r\n                result.offsetY = offsets[1].match(/^[+-]?\\d*\\.?\\d+$/i) ? `${offsets[1]}px` : offsets[1];\r\n            } else {\r\n                // noinspection JSSuspiciousNameCombination\r\n                result.offsetY = result.offsetX;\r\n            }\r\n            pos.splice(pos.indexOf(offsets[0]), 1);\r\n            if (offsets[1]) {\r\n                pos.splice(pos.indexOf(offsets[1]), 1);\r\n            }\r\n        }\r\n\r\n        // last to find and assign is of value and must be all the rest (if there is a rest)\r\n        if (pos.length) {\r\n            result.of = pos.join(' ');\r\n        }\r\n\r\n        return result;\r\n    },\r\n    position(panel, position) {\r\n        // @panel:     selector string | Element | jQuery object\r\n        //                - usually the jsPanel to position\r\n        // @position:  object\r\n        //                - positioning configuration\r\n        //                - if panel config uses a position shorthand string it must be converted to object before it's passed to this function\r\n\r\n        // if @position is not set return panel\r\n        if (!position) {\r\n            panel.style.opacity = 1;\r\n            return panel;\r\n        }\r\n\r\n        // merge position defaults with @position\r\n        if (typeof position === 'string') {\r\n            position = Object.assign({}, this.defaults.position, this.pOposition(position));\r\n        } else {\r\n            position = Object.assign({}, this.defaults.position, position);\r\n        }\r\n\r\n        // process parameter functions for 'my', 'at', 'of'\r\n        // 'offsetX', 'offsetY', 'minLeft', 'maxLeft', 'minTop', 'maxTop' are processed when params are applied\r\n        ['my', 'at', 'of'].forEach((item) => {\r\n            if (typeof position[item] === 'function') {\r\n                position[item] = position[item].call(panel, panel);\r\n            }\r\n        });\r\n\r\n        // panel uses option.container: 'window' position is always fixed\r\n        if (panel.options.container === 'window') {\r\n            panel.style.position = 'fixed';\r\n        }\r\n\r\n        // normalize param @panel to ensure it's an Element object\r\n        if (typeof panel === 'string') {\r\n            panel = document.querySelector(panel);\r\n        } else if (Object.getPrototypeOf(panel).jquery) {\r\n            panel = panel[0];\r\n        } // else panel is assumed to be element object\r\n\r\n        // container is either 'window' or the panel's parent element\r\n        const container = panel.options.container === 'window' ? 'window' : panel.parentElement;\r\n\r\n        // get base values in order to calculate position deltas\r\n        // since getBoundingClientRect() calculates values relative to the viewport the parentElement of panel/elmtToPositionAgainst is irrelevant\r\n        const panelRect = panel.getBoundingClientRect(),\r\n            containerDomRect = panel.parentElement.getBoundingClientRect(),\r\n            containerRect =\r\n                container === 'window'\r\n                    ? {\r\n                          left: 0,\r\n                          top: 0,\r\n                          width: document.documentElement.clientWidth,\r\n                          height: window.innerHeight,\r\n                      } // fake window.getBoundingClientRect() return value\r\n                    : //: panel.parentElement.getBoundingClientRect(); // using 'container' instead of 'panel.parentElement' produces an error\r\n                      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\r\n                      // due to the infos from above link IE and EDGE (old version not based on Chromium) report an error in strict mode -> line of code above replaced with line below\r\n                      {\r\n                          width: containerDomRect.width,\r\n                          height: containerDomRect.height,\r\n                          left: containerDomRect.left,\r\n                          top: containerDomRect.top,\r\n                      };\r\n\r\n        // calculate scale factors, needed for correct positioning if container is scaled - transform: scale()\r\n        // window is never scaled --> scale factors default to 1\r\n        const scaleFactor =\r\n            container === 'window'\r\n                ? { x: 1, y: 1 }\r\n                : {\r\n                      x: containerRect.width / container.offsetWidth,\r\n                      y: containerRect.height / container.offsetHeight,\r\n                  };\r\n\r\n        // get and apply border width values of container - needed for positioning corrections due to positioning with %-values\r\n        const containerStyle =\r\n            container === 'window'\r\n                ? {\r\n                      borderTopWidth: '0px',\r\n                      borderRightWidth: '0px',\r\n                      borderBottomWidth: '0px',\r\n                      borderLeftWidth: '0px',\r\n                  } // fake getComputedStyle(window) return value\r\n                : window.getComputedStyle(container);\r\n\r\n        containerRect.width -= (parseFloat(containerStyle.borderLeftWidth) + parseFloat(containerStyle.borderRightWidth)) * scaleFactor.x;\r\n        containerRect.height -= (parseFloat(containerStyle.borderTopWidth) + parseFloat(containerStyle.borderBottomWidth)) * scaleFactor.y;\r\n\r\n        // calculate @position.of rect if @position.of is set\r\n        let positionOfRect;\r\n        if (!position.of) {\r\n            positionOfRect = containerRect;\r\n        } else {\r\n            if (typeof position.of === 'string') {\r\n                positionOfRect =\r\n                    position.of === 'window'\r\n                        ? {\r\n                              borderTopWidth: '0px',\r\n                              borderRightWidth: '0px',\r\n                              borderBottomWidth: '0px',\r\n                              borderLeftWidth: '0px',\r\n                          } // fake getComputedStyle(window) return value\r\n                        : document.querySelector(position.of).getBoundingClientRect();\r\n            } else if (Object.getPrototypeOf(position.of).jquery) {\r\n                positionOfRect = position.of[0].getBoundingClientRect();\r\n            } else {\r\n                positionOfRect = position.of.getBoundingClientRect();\r\n            }\r\n        }\r\n\r\n        // check for scrollbar width values\r\n        let scrollbarwidthsWindow = this.getScrollbarWidth(document.body),\r\n            scrollbarwidthsContainer = this.getScrollbarWidth(panel.parentElement);\r\n\r\n        // calc css left for @panel in regard of @position.my and @position.at\r\n        let left = '0px';\r\n        if (position.my.startsWith('left-')) {\r\n            if (position.at.startsWith('left-')) {\r\n                if (position.of) {\r\n                    left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) + 'px';\r\n                } else {\r\n                    left = '0px';\r\n                }\r\n            } else if (position.at.startsWith('center')) {\r\n                if (position.of) {\r\n                    left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) + positionOfRect.width / 2 + 'px';\r\n                } else {\r\n                    left = containerRect.width / 2 + 'px';\r\n                }\r\n            } else if (position.at.startsWith('right-')) {\r\n                if (position.of) {\r\n                    left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) + positionOfRect.width + 'px';\r\n                } else {\r\n                    left = containerRect.width + 'px';\r\n                }\r\n            }\r\n        } else if (position.my.startsWith('center')) {\r\n            if (position.at.startsWith('left-')) {\r\n                if (position.of) {\r\n                    left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) - panelRect.width / 2 + 'px';\r\n                } else {\r\n                    left = -panelRect.width / 2 + 'px';\r\n                }\r\n            } else if (position.at.startsWith('center')) {\r\n                if (position.of) {\r\n                    left =\r\n                        positionOfRect.left -\r\n                        containerRect.left -\r\n                        parseFloat(containerStyle.borderLeftWidth) -\r\n                        (panelRect.width - positionOfRect.width) / 2 +\r\n                        'px';\r\n                } else {\r\n                    left = containerRect.width / 2 - panelRect.width / 2 + 'px';\r\n                }\r\n            } else if (position.at.startsWith('right-')) {\r\n                if (position.of) {\r\n                    left =\r\n                        positionOfRect.left -\r\n                        containerRect.left -\r\n                        parseFloat(containerStyle.borderLeftWidth) +\r\n                        (positionOfRect.width - panelRect.width / 2) +\r\n                        'px';\r\n                } else {\r\n                    left = containerRect.width - panelRect.width / 2 + 'px';\r\n                }\r\n            }\r\n        } else if (position.my.startsWith('right-')) {\r\n            if (position.at.startsWith('left-')) {\r\n                if (position.of) {\r\n                    left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) - panelRect.width + 'px';\r\n                } else {\r\n                    left = -panelRect.width + 'px';\r\n                }\r\n            } else if (position.at.startsWith('center')) {\r\n                if (position.of) {\r\n                    left =\r\n                        positionOfRect.left -\r\n                        containerRect.left -\r\n                        parseFloat(containerStyle.borderLeftWidth) -\r\n                        panelRect.width +\r\n                        positionOfRect.width / 2 +\r\n                        'px';\r\n                } else {\r\n                    left = containerRect.width / 2 - panelRect.width + 'px';\r\n                }\r\n            } else if (position.at.startsWith('right-')) {\r\n                if (position.of) {\r\n                    left =\r\n                        positionOfRect.left -\r\n                        containerRect.left -\r\n                        parseFloat(containerStyle.borderLeftWidth) +\r\n                        positionOfRect.width -\r\n                        panelRect.width +\r\n                        'px';\r\n                } else {\r\n                    left = containerRect.width - panelRect.width + 'px';\r\n                }\r\n                // correction for vertical scrollbar only needed for panels using my: 'right-*' together with at: 'right-*'\r\n                if (container !== 'window') {\r\n                    left = parseFloat(left) - scrollbarwidthsContainer.y + 'px';\r\n                }\r\n            }\r\n        }\r\n\r\n        // calc css top for @panel in regard of @position.my and @position.at\r\n        let top = '0px';\r\n        if (position.my.endsWith('-top')) {\r\n            if (position.at.endsWith('-top')) {\r\n                if (position.of) {\r\n                    top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) + 'px';\r\n                } else {\r\n                    top = '0px';\r\n                }\r\n            } else if (position.at.endsWith('center')) {\r\n                if (position.of) {\r\n                    top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) + positionOfRect.height / 2 + 'px';\r\n                } else {\r\n                    top = containerRect.height / 2 + 'px';\r\n                }\r\n            } else if (position.at.endsWith('-bottom')) {\r\n                if (position.of) {\r\n                    top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) + positionOfRect.height + 'px';\r\n                } else {\r\n                    top = containerRect.height + 'px';\r\n                }\r\n            }\r\n        } else if (position.my.endsWith('center')) {\r\n            if (position.at.endsWith('-top')) {\r\n                if (position.of) {\r\n                    top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) - panelRect.height / 2 + 'px';\r\n                } else {\r\n                    top = -panelRect.height / 2 + 'px';\r\n                }\r\n            } else if (position.at.endsWith('center')) {\r\n                if (position.of) {\r\n                    top =\r\n                        positionOfRect.top -\r\n                        containerRect.top -\r\n                        parseFloat(containerStyle.borderTopWidth) -\r\n                        panelRect.height / 2 +\r\n                        positionOfRect.height / 2 +\r\n                        'px';\r\n                } else {\r\n                    top = containerRect.height / 2 - panelRect.height / 2 + 'px';\r\n                }\r\n            } else if (position.at.endsWith('-bottom')) {\r\n                if (position.of) {\r\n                    top =\r\n                        positionOfRect.top -\r\n                        containerRect.top -\r\n                        parseFloat(containerStyle.borderTopWidth) -\r\n                        panelRect.height / 2 +\r\n                        positionOfRect.height +\r\n                        'px';\r\n                } else {\r\n                    top = containerRect.height - panelRect.height / 2 + 'px';\r\n                }\r\n            }\r\n        } else if (position.my.endsWith('-bottom')) {\r\n            if (position.at.endsWith('-top')) {\r\n                if (position.of) {\r\n                    top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) - panelRect.height + 'px';\r\n                } else {\r\n                    top = -panelRect.height + 'px';\r\n                }\r\n            } else if (position.at.endsWith('center')) {\r\n                if (position.of) {\r\n                    top =\r\n                        positionOfRect.top -\r\n                        containerRect.top -\r\n                        parseFloat(containerStyle.borderTopWidth) -\r\n                        panelRect.height +\r\n                        positionOfRect.height / 2 +\r\n                        'px';\r\n                } else {\r\n                    top = containerRect.height / 2 - panelRect.height + 'px';\r\n                }\r\n            } else if (position.at.endsWith('-bottom')) {\r\n                if (position.of) {\r\n                    top =\r\n                        positionOfRect.top -\r\n                        containerRect.top -\r\n                        parseFloat(containerStyle.borderTopWidth) -\r\n                        panelRect.height +\r\n                        positionOfRect.height +\r\n                        'px';\r\n                } else {\r\n                    top = containerRect.height - panelRect.height + 'px';\r\n                }\r\n                // correction for horizontal scrollbar only needed for panels using my: '*-bottom' together with at: '*-bottom'\r\n                if (container !== 'window') {\r\n                    top = parseFloat(top) - scrollbarwidthsContainer.x + 'px';\r\n                } else {\r\n                    top = parseFloat(top) - scrollbarwidthsWindow.x + 'px';\r\n                }\r\n            }\r\n        }\r\n        panel.style.left = scaleFactor.x === 1 ? left : parseFloat(left) / scaleFactor.x + 'px';\r\n        panel.style.top = scaleFactor.y === 1 ? top : parseFloat(top) / scaleFactor.y + 'px';\r\n        // at this point panels are correctly positioned according to the my/at values\r\n\r\n        let panelStyle = getComputedStyle(panel);\r\n        // eslint-disable-next-line no-unused-vars\r\n        let pos = { left: panelStyle.left, top: panelStyle.top };\r\n        //console.log('pos after applying my/at/of:', pos);\r\n\r\n        // apply autoposition only if ...\r\n        if (\r\n            position.autoposition &&\r\n            position.my === position.at &&\r\n            ['left-top', 'center-top', 'right-top', 'left-bottom', 'center-bottom', 'right-bottom'].indexOf(position.my) >= 0\r\n        ) {\r\n            pos = this.applyPositionAutopos(panel, pos, position);\r\n            //console.log('let pos after applying autoposition:', pos);\r\n        }\r\n\r\n        // apply position.offsetX and position.offsetY\r\n        if (position.offsetX || position.offsetY) {\r\n            pos = this.applyPositionOffset(panel, pos, position);\r\n            //console.log('pos after applying offsets:', pos);\r\n        }\r\n\r\n        // calculate and apply position.minLeft, position.minTop, position.maxLeft and position.maxTop\r\n        if (position.minLeft || position.minTop || position.maxLeft || position.maxTop) {\r\n            pos = this.applyPositionMinMax(panel, pos, position);\r\n            //console.log('pos after applying minLeft, maxLeft, maxTop, minTop:', pos);\r\n        }\r\n\r\n        // apply position.modify\r\n        // must be function returning an object with keys left/top, each with valid css length value\r\n        if (position.modify) {\r\n            // eslint-disable-next-line no-unused-vars\r\n            pos = this.applyPositionModify(panel, pos, position);\r\n            //console.log('pos after applying modify():', pos);\r\n        }\r\n\r\n        typeof panel.options.opacity === 'number' ? (panel.style.opacity = panel.options.opacity) : (panel.style.opacity = 1);\r\n\r\n        return panel;\r\n    },\r\n    applyPositionAutopos(panel, pos, position) {\r\n        // add class with position and autoposition direction\r\n        const newClass = `${position.my}-${position.autoposition.toLowerCase()}`;\r\n        panel.classList.add(newClass);\r\n\r\n        // get all panels with same class\r\n        const newClassAll = Array.prototype.slice.call(document.querySelectorAll(`.${newClass}`)),\r\n            ownIndex = newClassAll.indexOf(panel);\r\n\r\n        // if more than 1 position new panel\r\n        if (newClassAll.length > 1) {\r\n            switch (position.autoposition) {\r\n                case 'down':\r\n                    // collect heights of all elmts to calc new top position\r\n                    newClassAll.forEach((item, index) => {\r\n                        if (index > 0 && index <= ownIndex) {\r\n                            pos.top = parseFloat(pos.top) + newClassAll[--index].getBoundingClientRect().height + jsPanel.autopositionSpacing + 'px';\r\n                        }\r\n                    });\r\n                    break;\r\n                case 'up':\r\n                    newClassAll.forEach((item, index) => {\r\n                        if (index > 0 && index <= ownIndex) {\r\n                            pos.top = parseFloat(pos.top) - newClassAll[--index].getBoundingClientRect().height - jsPanel.autopositionSpacing + 'px';\r\n                        }\r\n                    });\r\n                    break;\r\n                case 'right':\r\n                    // collect widths of all elmts to calc new left position\r\n                    newClassAll.forEach((item, index) => {\r\n                        if (index > 0 && index <= ownIndex) {\r\n                            pos.left = parseFloat(pos.left) + newClassAll[--index].getBoundingClientRect().width + jsPanel.autopositionSpacing + 'px';\r\n                        }\r\n                    });\r\n                    break;\r\n                case 'left':\r\n                    newClassAll.forEach((item, index) => {\r\n                        if (index > 0 && index <= ownIndex) {\r\n                            pos.left = parseFloat(pos.left) - newClassAll[--index].getBoundingClientRect().width - jsPanel.autopositionSpacing + 'px';\r\n                        }\r\n                    });\r\n                    break;\r\n            }\r\n            panel.style.left = pos.left;\r\n            panel.style.top = pos.top;\r\n        }\r\n        return { left: pos.left, top: pos.top };\r\n    },\r\n    applyPositionOffset(panel, pos, position) {\r\n        ['offsetX', 'offsetY'].forEach((offset) => {\r\n            if (position[offset]) {\r\n                if (typeof position[offset] === 'function') {\r\n                    position[offset] = position[offset].call(pos, pos, position);\r\n                }\r\n                if (isNaN(position[offset]) === false) {\r\n                    // if an offset's value type is integer it's interpreted as pixel value\r\n                    position[offset] = `${position[offset]}px`;\r\n                } // else it's assumed offsets are strings with valid css length values\r\n            } else {\r\n                position[offset] = '0px';\r\n            }\r\n        });\r\n        panel.style.left = `calc(${panel.style.left} + ${position.offsetX})`; // offsetX\r\n        panel.style.top = `calc(${panel.style.top} + ${position.offsetY})`; // offsetY\r\n        const panelStyle = getComputedStyle(panel);\r\n        return { left: panelStyle.left, top: panelStyle.top };\r\n    },\r\n    applyPositionMinMax(panel, pos, position) {\r\n        ['minLeft', 'minTop', 'maxLeft', 'maxTop'].forEach((val) => {\r\n            if (position[val]) {\r\n                if (typeof position[val] === 'function') {\r\n                    position[val] = position[val].call(pos, pos, position);\r\n                }\r\n                if (Number.isInteger(position[val]) || position[val].match(/^\\d+$/)) {\r\n                    // if  val type is integer it's interpreted as pixel value\r\n                    position[val] = `${position[val]}px`;\r\n                } // else it's assumed val is string with valid css length value\r\n            }\r\n        });\r\n        // process minLeft\r\n        if (position.minLeft) {\r\n            // apply minLeft value in order to compare with previous left (pos.left)\r\n            panel.style.left = position.minLeft;\r\n            // now get computed css left\r\n            let left = getComputedStyle(panel).left; // returns string with pixel value\r\n            // now compare current left (minLeft) with pos.left\r\n            if (parseFloat(left) < parseFloat(pos.left)) {\r\n                // if minLeft is less than pos.left return to pos.left\r\n                panel.style.left = pos.left;\r\n            } else {\r\n                // if minLeft is greater than pos.left keep minLeft and reset pos.left to new value\r\n                pos.left = left;\r\n            }\r\n        }\r\n        // process minTop\r\n        if (position.minTop) {\r\n            panel.style.top = position.minTop;\r\n            let top = getComputedStyle(panel).top;\r\n            if (parseFloat(top) < parseFloat(pos.top)) {\r\n                panel.style.top = pos.top;\r\n            } else {\r\n                pos.top = top;\r\n            }\r\n        }\r\n        // process maxLeft\r\n        if (position.maxLeft) {\r\n            panel.style.left = position.maxLeft;\r\n            let left = getComputedStyle(panel).left;\r\n            if (parseFloat(left) > parseFloat(pos.left)) {\r\n                panel.style.left = pos.left;\r\n            } else {\r\n                pos.left = left;\r\n            }\r\n        }\r\n        // process maxTop\r\n        if (position.maxTop) {\r\n            panel.style.top = position.maxTop;\r\n            let top = getComputedStyle(panel).top;\r\n            if (parseFloat(top) > parseFloat(pos.top)) {\r\n                panel.style.top = pos.top;\r\n            } else {\r\n                pos.top = top;\r\n            }\r\n        }\r\n        const panelStyle = getComputedStyle(panel);\r\n        return { left: panelStyle.left, top: panelStyle.top };\r\n    },\r\n    applyPositionModify(panel, pos, position) {\r\n        if (position.modify && typeof position.modify === 'function') {\r\n            const modifiedPosition = position.modify.call(pos, pos, position);\r\n            panel.style.left =\r\n                Number.isInteger(modifiedPosition.left) || modifiedPosition.left.match(/^\\d+$/)\r\n                    ? `${modifiedPosition.left}px`\r\n                    : modifiedPosition.left;\r\n            panel.style.top =\r\n                Number.isInteger(modifiedPosition.top) || modifiedPosition.top.match(/^\\d+$/) ? `${modifiedPosition.top}px` : modifiedPosition.top;\r\n        }\r\n        const panelStyle = getComputedStyle(panel);\r\n        return { left: panelStyle.left, top: panelStyle.top };\r\n    },\r\n    autopositionRemaining(panel) {\r\n        let autoPos,\r\n            parent = panel.options.container;\r\n        [\r\n            'left-top-down',\r\n            'left-top-right',\r\n            'center-top-down',\r\n            'right-top-down',\r\n            'right-top-left',\r\n            'left-bottom-up',\r\n            'left-bottom-right',\r\n            'center-bottom-up',\r\n            'right-bottom-up',\r\n            'right-bottom-left',\r\n        ].forEach((item) => {\r\n            if (panel.classList.contains(item)) {\r\n                autoPos = item;\r\n            }\r\n        });\r\n        if (autoPos) {\r\n            const box = parent === 'window' ? document.body : typeof parent === 'string' ? document.querySelector(parent) : parent;\r\n            box.querySelectorAll(`.${autoPos}`).forEach((item) => {\r\n                item.reposition();\r\n            });\r\n        }\r\n    },\r\n    // ---------------------------------------------------\r\n\r\n    addScript(path, type = 'application/javascript', cb) {\r\n        if (!document.querySelector(`script[src=\"${path}\"]`)) {\r\n            const script = document.createElement('script');\r\n            if (cb) {\r\n                script.onload = cb;\r\n            }\r\n            script.src = path;\r\n            script.type = type;\r\n            document.head.appendChild(script);\r\n        }\r\n    },\r\n\r\n    ajax(ajaxConfig, panel) {\r\n        let config,\r\n            urlParts,\r\n            xhr = new XMLHttpRequest();\r\n        const configDefaults = {\r\n            method: 'GET',\r\n            async: true,\r\n            user: '',\r\n            pwd: '',\r\n            done: function () {\r\n                if (panel) {\r\n                    let res = jsPanel.strToHtml(this.responseText);\r\n                    if (config.urlSelector) {\r\n                        res = res.querySelector(config.urlSelector);\r\n                    }\r\n                    panel.contentRemove();\r\n                    panel.content.append(res);\r\n                }\r\n            },\r\n            autoresize: true,\r\n            autoreposition: true,\r\n        };\r\n\r\n        if (panel && typeof ajaxConfig === 'string') {\r\n            config = Object.assign({}, configDefaults, {\r\n                url: ajaxConfig,\r\n            });\r\n        } else if (typeof ajaxConfig === 'object' && ajaxConfig.url) {\r\n            config = Object.assign({}, configDefaults, ajaxConfig);\r\n            config.url = ajaxConfig.url;\r\n            // reset timeout to 0, withCredentials & responseType to false if request is synchronous\r\n            if (config.async === false) {\r\n                config.timeout = 0;\r\n                if (config.withCredentials) {\r\n                    config.withCredentials = undefined;\r\n                }\r\n                if (config.responseType) {\r\n                    config.responseType = undefined;\r\n                }\r\n            }\r\n        } else {\r\n            if (this.errorReporting) {\r\n                let err = 'XMLHttpRequest seems to miss the <mark>url</mark> parameter!';\r\n                jsPanel.errorpanel(err);\r\n            }\r\n            return;\r\n        }\r\n        // check url for added selector\r\n        urlParts = config.url.trim().split(/\\s+/);\r\n        config.url = encodeURI(urlParts[0]);\r\n        if (urlParts.length > 1) {\r\n            urlParts.shift();\r\n            config.urlSelector = urlParts.join(' ');\r\n        }\r\n\r\n        xhr.onreadystatechange = () => {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    panel ? config.done.call(xhr, xhr, panel) : config.done.call(xhr, xhr);\r\n                } else {\r\n                    if (config.fail) {\r\n                        panel ? config.fail.call(xhr, xhr, panel) : config.fail.call(xhr, xhr);\r\n                    }\r\n                }\r\n\r\n                if (config.always) {\r\n                    panel ? config.always.call(xhr, xhr, panel) : config.always.call(xhr, xhr);\r\n                }\r\n\r\n                // resize and/or reposition panel if either width or height is set to 'auto'\r\n                if (panel) {\r\n                    if (config.autoresize || config.autoreposition) {\r\n                        jsPanel.ajaxAutoresizeAutoreposition(panel, config);\r\n                    }\r\n                }\r\n\r\n                // allows plugins to add callback functions to the ajax always callback\r\n                if (jsPanel.ajaxAlwaysCallbacks.length) {\r\n                    jsPanel.ajaxAlwaysCallbacks.forEach((item) => {\r\n                        panel ? item.call(xhr, xhr, panel) : item.call(xhr, xhr);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        xhr.open(config.method, config.url, config.async, config.user, config.pwd);\r\n        xhr.timeout = config.timeout || 0;\r\n        if (config.withCredentials) {\r\n            xhr.withCredentials = config.withCredentials;\r\n        }\r\n        if (config.responseType) {\r\n            xhr.responseType = config.responseType;\r\n        }\r\n        if (config.beforeSend) {\r\n            panel ? config.beforeSend.call(xhr, xhr, panel) : config.beforeSend.call(xhr, xhr);\r\n        }\r\n        config.data ? xhr.send(config.data) : xhr.send(null);\r\n    },\r\n    ajaxAutoresizeAutoreposition(panel, ajaxOrFetchConfig) {\r\n        const oContentSize = panel.options.contentSize;\r\n        if (typeof oContentSize === 'string' && oContentSize.match(/auto/i)) {\r\n            const parts = oContentSize.split(' '),\r\n                sizes = Object.assign({}, { width: parts[0], height: parts[1] });\r\n            if (ajaxOrFetchConfig.autoresize) {\r\n                panel.resize(sizes);\r\n            }\r\n            if (!panel.classList.contains('jsPanel-contextmenu')) {\r\n                if (ajaxOrFetchConfig.autoreposition) {\r\n                    panel.reposition();\r\n                }\r\n            }\r\n        } else if (typeof oContentSize === 'object' && (oContentSize.width === 'auto' || oContentSize.height === 'auto')) {\r\n            const sizes = Object.assign({}, oContentSize);\r\n            if (ajaxOrFetchConfig.autoresize) {\r\n                panel.resize(sizes);\r\n            }\r\n            if (!panel.classList.contains('jsPanel-contextmenu')) {\r\n                if (ajaxOrFetchConfig.autoreposition) {\r\n                    panel.reposition();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    createPanelTemplate(dataAttr = true) {\r\n        const panel = document.createElement('div');\r\n        panel.className = 'jsPanel';\r\n        panel.style.left = '0';\r\n        panel.style.top = '0';\r\n        if (dataAttr) {\r\n            ['close', 'maximize', 'normalize', 'minimize', 'smallify'].forEach((item) => {\r\n                panel.setAttribute(`data-btn${item}`, 'enabled');\r\n            });\r\n        }\r\n        panel.innerHTML = `<div class=\"jsPanel-hdr\">\r\n                                <div class=\"jsPanel-headerbar\">\r\n                                    <div class=\"jsPanel-headerlogo\"></div>\r\n                                    <div class=\"jsPanel-titlebar\">\r\n                                        <div class=\"jsPanel-title\"></div>\r\n                                    </div>\r\n                                    <div class=\"jsPanel-controlbar\">\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-smallify\"  aria-label=\"Smallify\">${this.icons.smallify}</button>\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-minimize\"  aria-label=\"Minimize\">${this.icons.minimize}</button>\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-normalize\" aria-label=\"Normalize\">${this.icons.normalize}</button>\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-maximize\"  aria-label=\"Maximize\">${this.icons.maximize}</button>\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-close\"     aria-label=\"Close\">${this.icons.close}</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"jsPanel-hdr-toolbar\"></div>\r\n                            </div>\r\n                            <div class=\"jsPanel-progressbar\">\r\n                                <div class=\"jsPanel-progressbar-slider\"></div>\r\n                            </div>\r\n                            <div class=\"jsPanel-content\"></div>\r\n                            <div class=\"jsPanel-minimized-box\"></div>\r\n                            <div class=\"jsPanel-ftr\"></div>`;\r\n        return panel;\r\n    },\r\n    createMinimizedTemplate() {\r\n        const panel = document.createElement('div');\r\n        panel.className = 'jsPanel-replacement';\r\n        panel.innerHTML = `<div class=\"jsPanel-hdr\">\r\n                                <div class=\"jsPanel-headerbar\">\r\n                                    <div class=\"jsPanel-headerlogo\"></div>\r\n                                    <div class=\"jsPanel-titlebar\">\r\n                                        <div class=\"jsPanel-title\"></div>\r\n                                    </div>\r\n                                    <div class=\"jsPanel-controlbar\">\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-sm jsPanel-btn-normalize\" aria-label=\"Normalize\">${this.icons.normalize}</button>\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-sm jsPanel-btn-maximize\"  aria-label=\"Maximize\">${this.icons.maximize}</button>\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-sm jsPanel-btn-close\"     aria-label=\"Close\">${this.icons.close}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>`;\r\n        return panel;\r\n    },\r\n    createSnapArea(panel, pos, snapsens) {\r\n        const el = document.createElement('div'),\r\n            parent = panel.parentElement;\r\n        el.className = `jsPanel-snap-area jsPanel-snap-area-${pos}`;\r\n        if (pos === 'lt' || pos === 'rt' || pos === 'rb' || pos === 'lb') {\r\n            el.style.width = snapsens + 'px';\r\n            el.style.height = snapsens + 'px';\r\n        } else if (pos === 'ct' || pos === 'cb') {\r\n            el.style.height = snapsens + 'px';\r\n        } else if (pos === 'lc' || pos === 'rc') {\r\n            el.style.width = snapsens + 'px';\r\n        }\r\n        if (parent !== document.body) {\r\n            el.style.position = 'absolute';\r\n        }\r\n        if (!document.querySelector(`.jsPanel-snap-area.jsPanel-snap-area-${pos}`)) {\r\n            panel.parentElement.appendChild(el);\r\n        }\r\n    },\r\n\r\n    emptyNode(node) {\r\n        while (node.firstChild) {\r\n            node.removeChild(node.firstChild);\r\n        }\r\n        return node;\r\n    },\r\n\r\n    extend(obj) {\r\n        // obj needs to be a plain object (to extend the individual panel, not the global object)\r\n        if (Object.prototype.toString.call(obj) === '[object Object]') {\r\n            for (let ext in obj) {\r\n                if (Object.prototype.hasOwnProperty.call(obj, ext)) {\r\n                    this.extensions[ext] = obj[ext];\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    fetch(fetchConfig, panel) {\r\n        let config;\r\n        const configDefaults = {\r\n            bodyMethod: 'text',\r\n            autoresize: true,\r\n            autoreposition: true,\r\n            done: function (response, panel) {\r\n                if (panel) {\r\n                    let res = jsPanel.strToHtml(response);\r\n                    panel.contentRemove();\r\n                    panel.content.append(res);\r\n                }\r\n            },\r\n        };\r\n        if (panel && typeof fetchConfig === 'string') {\r\n            config = Object.assign({}, configDefaults, {\r\n                resource: encodeURI(fetchConfig),\r\n            });\r\n        } else if (typeof fetchConfig === 'object' && fetchConfig.resource) {\r\n            config = Object.assign({}, configDefaults, fetchConfig);\r\n            config.resource = encodeURI(fetchConfig.resource);\r\n        } else {\r\n            if (this.errorReporting) {\r\n                let err = 'Fetch Request seems to miss the <mark>resource</mark> parameter!';\r\n                jsPanel.errorpanel(err);\r\n            }\r\n            return;\r\n        }\r\n\r\n        const fetchInit = config.fetchInit || {};\r\n\r\n        if (config.beforeSend) {\r\n            panel ? config.beforeSend.call(fetchConfig, fetchConfig, panel) : config.beforeSend.call(fetchConfig, fetchConfig);\r\n        }\r\n\r\n        fetch(config.resource, fetchInit)\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    return response[config.bodyMethod]();\r\n                }\r\n            })\r\n            .then((response) => {\r\n                panel ? config.done.call(response, response, panel) : config.done.call(response, response);\r\n                if (panel) {\r\n                    // resize and/or reposition panel if either width or height is set to 'auto'\r\n                    if (config.autoresize || config.autoreposition) {\r\n                        jsPanel.ajaxAutoresizeAutoreposition(panel, config);\r\n                    }\r\n                }\r\n            });\r\n    },\r\n\r\n    getPanels(\r\n        condition = function () {\r\n            return this.classList.contains('jsPanel-standard');\r\n        }\r\n    ) {\r\n        return Array.prototype.slice\r\n            .call(document.querySelectorAll('.jsPanel'))\r\n            .filter((value) => {\r\n                return condition.call(value, value);\r\n            })\r\n            .sort((a, b) => {\r\n                return b.style.zIndex - a.style.zIndex;\r\n            });\r\n    },\r\n\r\n    pOcontainer(container) {\r\n        if (container === 'window') {\r\n            return document.body;\r\n        } else if (typeof container === 'string') {\r\n            let list = document.querySelectorAll(container);\r\n            // a returned list is a NodeList\r\n            return list.length && list.length > 0 ? list : false;\r\n        } else if (container.nodeType === 1) {\r\n            return container;\r\n        } else if (container.length) {\r\n            return container[0];\r\n        }\r\n        return false;\r\n    },\r\n    // normalizes the values for option.maximizedMargin and containment of dragit/resizeit\r\n    pOcontainment(arg) {\r\n        let value = arg;\r\n        if (typeof arg === 'function') {\r\n            value = arg();\r\n        }\r\n        if (typeof value === 'number') {\r\n            // value: 20 => value: [20, 20, 20, 20]\r\n            return [value, value, value, value];\r\n        } else if (Array.isArray(value)) {\r\n            if (value.length === 1) {\r\n                // value: [20] => value: [20, 20, 20, 20]\r\n                return [value[0], value[0], value[0], value[0]];\r\n            } else if (value.length === 2) {\r\n                // value: [20, 40] => value: [20, 40, 20, 40]\r\n                return value.concat(value);\r\n            } else if (value.length === 3) {\r\n                value[3] = value[1];\r\n            }\r\n        }\r\n        return value; // assumed to be array with 4 values\r\n    },\r\n    pOsize(panel, size) {\r\n        let values = size || this.defaults.contentSize;\r\n        const parent = panel.parentElement;\r\n        if (typeof values === 'string') {\r\n            const nums = values.trim().split(' ');\r\n            values = {};\r\n            values.width = nums[0];\r\n            nums.length === 2 ? (values.height = nums[1]) : (values.height = nums[0]);\r\n        } else {\r\n            if (values.width && !values.height) {\r\n                // noinspection JSSuspiciousNameCombination\r\n                values.height = values.width;\r\n            } else if (values.height && !values.width) {\r\n                // noinspection JSSuspiciousNameCombination\r\n                values.width = values.height;\r\n            }\r\n        }\r\n\r\n        if (String(values.width).match(/^[0-9.]+$/gi)) {\r\n            // if number only\r\n            values.width += 'px';\r\n        } else if (typeof values.width === 'string' && values.width.endsWith('%')) {\r\n            if (parent === document.body) {\r\n                values.width = window.innerWidth * (parseFloat(values.width) / 100) + 'px';\r\n            } else {\r\n                const prtStyles = window.getComputedStyle(parent),\r\n                    border = parseFloat(prtStyles.borderLeftWidth) + parseFloat(prtStyles.borderRightWidth);\r\n                values.width = (parseFloat(prtStyles.width) - border) * (parseFloat(values.width) / 100) + 'px';\r\n            }\r\n        } else if (typeof values.width === 'function') {\r\n            values.width = values.width.call(panel, panel);\r\n            if (typeof values.width === 'number') {\r\n                values.width += 'px';\r\n            } else if (typeof values.width === 'string' && values.width.match(/^[0-9.]+$/gi)) {\r\n                values.width += 'px';\r\n            }\r\n        }\r\n\r\n        if (String(values.height).match(/^[0-9.]+$/gi)) {\r\n            // if number only\r\n            values.height += 'px';\r\n        } else if (typeof values.height === 'string' && values.height.endsWith('%')) {\r\n            if (parent === document.body) {\r\n                values.height = window.innerHeight * (parseFloat(values.height) / 100) + 'px';\r\n            } else {\r\n                const prtStyles = window.getComputedStyle(parent),\r\n                    border = parseFloat(prtStyles.borderTopWidth) + parseFloat(prtStyles.borderBottomWidth);\r\n                values.height = (parseFloat(prtStyles.height) - border) * (parseFloat(values.height) / 100) + 'px';\r\n            }\r\n        } else if (typeof values.height === 'function') {\r\n            values.height = values.height.call(panel, panel);\r\n            if (typeof values.height === 'number') {\r\n                values.height += 'px';\r\n            } else if (typeof values.height === 'string' && values.height.match(/^[0-9.]+$/gi)) {\r\n                values.height += 'px';\r\n            }\r\n        }\r\n\r\n        return values; // return value must be an object {width: xxx, height: xxx}\r\n    },\r\n    pOborder(border) {\r\n        border = border.trim();\r\n        const values = new Array(3),\r\n            regexStyle = /\\s*(none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset)\\s*/gi,\r\n            regexWidth = /\\s*(thin|medium|thick)|(\\d*\\.?\\d+[a-zA-Z]{2,4})\\s*/gi,\r\n            borderStyle = border.match(regexStyle),\r\n            borderWidth = border.match(regexWidth);\r\n\r\n        if (borderStyle) {\r\n            values[1] = borderStyle[0].trim();\r\n            border = border.replace(values[1], '');\r\n        } else {\r\n            values[1] = 'solid';\r\n        }\r\n        if (borderWidth) {\r\n            values[0] = borderWidth[0].trim();\r\n            border = border.replace(values[0], '');\r\n        } else {\r\n            values[0] = 'medium';\r\n        }\r\n        values[2] = border.trim();\r\n        return values;\r\n    },\r\n    pOheaderControls(oHdrCtrls) {\r\n        if (typeof oHdrCtrls === 'string') {\r\n            let setting = {},\r\n                str = oHdrCtrls.toLowerCase(),\r\n                sizeMatch = str.match(/xl|lg|md|sm|xs/),\r\n                ctrlMatch = str.match(/closeonly|none/);\r\n            if (sizeMatch) {\r\n                setting.size = sizeMatch[0];\r\n            }\r\n            if (ctrlMatch) {\r\n                setting = Object.assign({}, setting, {\r\n                    maximize: 'remove',\r\n                    normalize: 'remove',\r\n                    minimize: 'remove',\r\n                    smallify: 'remove',\r\n                });\r\n                if (ctrlMatch[0] === 'none') {\r\n                    setting.close = 'remove';\r\n                }\r\n            }\r\n            return Object.assign({}, this.defaults.headerControls, setting);\r\n        } else {\r\n            return Object.assign({}, this.defaults.headerControls, oHdrCtrls);\r\n        }\r\n    },\r\n\r\n    processCallbacks(panel, arg, someOrEvery = 'some', param, param2) {\r\n        // if arg != array make it one\r\n        if (typeof arg === 'function') {\r\n            arg = [arg];\r\n        }\r\n        // some():  execute callbacks until one is found returning a truthy value\r\n        // every(): execute callbacks until one is found returning a falsy value\r\n        // truthy values are: '0' (string with single zero), 'false' (string with text false), [] (empty array), {} (empty object), function(){} (\"empty\" function)\r\n        // falsy values are: false, 0, '', \"\", null, undefined, NaN\r\n        if (someOrEvery) {\r\n            return arg[someOrEvery]((cb) => {\r\n                return cb.call(panel, panel, param, param2);\r\n            });\r\n        } else {\r\n            arg.forEach((cb) => {\r\n                cb.call(panel, panel, param, param2);\r\n            });\r\n        }\r\n    },\r\n\r\n    removeSnapAreas() {\r\n        document.querySelectorAll('.jsPanel-snap-area').forEach((el) => {\r\n            el.parentElement.removeChild(el);\r\n        });\r\n    },\r\n\r\n    resetZi() {\r\n        this.zi = ((startValue = jsPanel.ziBase) => {\r\n            let val = startValue;\r\n            return {\r\n                next: () => {\r\n                    return val++;\r\n                },\r\n            };\r\n        })();\r\n        Array.prototype.slice\r\n            .call(document.querySelectorAll('.jsPanel-standard'))\r\n            .sort((a, b) => {\r\n                return a.style.zIndex - b.style.zIndex;\r\n            })\r\n            .forEach((panel) => {\r\n                panel.style.zIndex = jsPanel.zi.next();\r\n            });\r\n    },\r\n\r\n    getScrollbarWidth(elmt = document.body) {\r\n        if (elmt === document.body) {\r\n            return {\r\n                y: window.innerWidth - document.documentElement.clientWidth,\r\n                x: window.innerHeight - document.documentElement.clientHeight,\r\n            };\r\n        } else {\r\n            let styles = getComputedStyle(elmt);\r\n            return {\r\n                y: elmt.offsetWidth - elmt.clientWidth - parseFloat(styles.borderRightWidth) - parseFloat(styles.borderLeftWidth),\r\n                x: elmt.offsetHeight - elmt.clientHeight - parseFloat(styles.borderBottomWidth) - parseFloat(styles.borderTopWidth),\r\n            };\r\n        }\r\n    },\r\n    remClass(elmt, classnames) {\r\n        classnames\r\n            .trim()\r\n            .split(/\\s+/)\r\n            .forEach((item) => elmt.classList.remove(item));\r\n        return elmt;\r\n    },\r\n    setClass(elmt, classnames) {\r\n        classnames\r\n            .trim()\r\n            .split(/\\s+/)\r\n            .forEach((item) => elmt.classList.add(item));\r\n        return elmt;\r\n    },\r\n    setStyles(elmt, stylesobject) {\r\n        // code taken from https://blissfuljs.com/docs.html#fn-style\r\n        for (let prop in stylesobject) {\r\n            if (prop in elmt.style) {\r\n                // noinspection JSUnfilteredForInLoop,JSUnfilteredForInLoop\r\n                elmt.style[prop] = stylesobject[prop];\r\n            } else {\r\n                // This way we can set CSS Variables too and use normal prop names\r\n                // noinspection JSUnfilteredForInLoop\r\n                elmt.style.setProperty(prop, stylesobject[prop]);\r\n            }\r\n        }\r\n        return elmt;\r\n    },\r\n    setStyle(elmt, stylesobject) {\r\n        return this.setStyles.call(elmt, elmt, stylesobject);\r\n    }, // alias for setStyles()\r\n    strToHtml(str) {\r\n        // TODO: add param to strip script tags from returned DocumentFragment\r\n        /* str has to be an HTMLString\r\n         * returns a DocumentFragment - https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\r\n         * after inserting executes inline script and script tags */\r\n        return document.createRange().createContextualFragment(str);\r\n    },\r\n    toggleClass(elmt, classnames) {\r\n        // IE11 doesn't support https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\r\n        classnames\r\n            .trim()\r\n            .split(/\\s+/)\r\n            .forEach((classname) => {\r\n                elmt.classList.contains(classname) ? elmt.classList.remove(classname) : elmt.classList.add(classname);\r\n            });\r\n        return elmt;\r\n    },\r\n\r\n    errorpanel(e) {\r\n        this.create({\r\n            paneltype: 'error',\r\n            dragit: false,\r\n            resizeit: false,\r\n            theme: {\r\n                bgPanel: 'white',\r\n                bgContent: 'white',\r\n                colorHeader: 'rebeccapurple',\r\n                colorContent: '#333',\r\n                border: '2px solid rebeccapurple',\r\n            },\r\n            borderRadius: '.33rem',\r\n            headerControls: 'closeonly xs',\r\n            headerTitle: '&#9888; jsPanel Error',\r\n            contentSize: { width: '50%', height: 'auto' },\r\n            position: 'center-top 0 5 down',\r\n            animateIn: 'jsPanelFadeIn',\r\n            content: `<div class=\"jsPanel-error-content-separator\"></div><p>${e}</p>`,\r\n        });\r\n    },\r\n\r\n    // METHOD CREATING THE PANEL ---------------------------------------------\r\n    create(options = {}, cb) {\r\n        // initialize z-index generator\r\n        if (!jsPanel.zi) {\r\n            jsPanel.zi = ((startValue = jsPanel.ziBase) => {\r\n                let val = startValue;\r\n                return {\r\n                    next: () => {\r\n                        return val++;\r\n                    },\r\n                };\r\n            })();\r\n        }\r\n\r\n        if (options.config) {\r\n            options = Object.assign({}, this.defaults, options.config, options);\r\n            delete options.config;\r\n        } else {\r\n            options = Object.assign({}, this.defaults, options);\r\n        }\r\n        if (!options.id) {\r\n            options.id = `jsPanel-${(jsPanel.idCounter += 1)}`;\r\n        } else if (typeof options.id === 'function') {\r\n            options.id = options.id();\r\n        }\r\n        const p = document.getElementById(options.id);\r\n        if (p !== null) {\r\n            // if a panel with passed id already exists, front it and return false\r\n            if (p.classList.contains('jsPanel')) {\r\n                p.front();\r\n            }\r\n            if (this.errorReporting) {\r\n                let err = `&#9664; COULD NOT CREATE NEW JSPANEL &#9658;<br>An element with the ID <mark>${options.id}</mark> already exists in the document.`;\r\n                jsPanel.errorpanel(err);\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // check whether container is valid -> if not return and throw error\r\n        let panelContainer = this.pOcontainer(options.container);\r\n        // panelContainer might be a NodeList, so use only first node in list\r\n        if (typeof panelContainer === 'object' && panelContainer.length && panelContainer.length > 0) {\r\n            panelContainer = panelContainer[0];\r\n        }\r\n        if (!panelContainer) {\r\n            if (this.errorReporting) {\r\n                let err = '&#9664; COULD NOT CREATE NEW JSPANEL &#9658;<br>The container to append the panel to does not exist';\r\n                jsPanel.errorpanel(err);\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // normalize on... callbacks\r\n        // these callbacks must be an array of function(s) in order to be able to dynamically add/remove callbacks (for example in extensions)\r\n        [\r\n            'onbeforeclose',\r\n            'onbeforemaximize',\r\n            'onbeforeminimize',\r\n            'onbeforenormalize',\r\n            'onbeforesmallify',\r\n            'onbeforeunsmallify',\r\n            'onclosed',\r\n            'onfronted',\r\n            'onmaximized',\r\n            'onminimized',\r\n            'onnormalized',\r\n            'onsmallified',\r\n            'onstatuschange',\r\n            'onunsmallified',\r\n        ].forEach((item) => {\r\n            if (options[item]) {\r\n                if (typeof options[item] === 'function') {\r\n                    options[item] = [options[item]];\r\n                }\r\n            } else {\r\n                options[item] = [];\r\n            }\r\n        });\r\n\r\n        const self = options.template ? options.template : this.createPanelTemplate();\r\n\r\n        // Properties\r\n        self.options = options;\r\n        self.closetimer = undefined;\r\n        self.status = 'initialized';\r\n        self.currentData = {};\r\n        self.header = self.querySelector('.jsPanel-hdr'); // complete header section\r\n        self.headerbar = self.header.querySelector('.jsPanel-headerbar'); // log, title and controls\r\n        self.titlebar = self.header.querySelector('.jsPanel-titlebar'); // div surrounding title div\r\n        self.headerlogo = self.headerbar.querySelector('.jsPanel-headerlogo'); // logo only\r\n        self.headertitle = self.headerbar.querySelector('.jsPanel-title'); // title div\r\n        self.controlbar = self.headerbar.querySelector('.jsPanel-controlbar'); // div surrounding all controls\r\n        self.headertoolbar = self.header.querySelector('.jsPanel-hdr-toolbar');\r\n        self.content = self.querySelector('.jsPanel-content');\r\n        self.footer = self.querySelector('.jsPanel-ftr');\r\n        self.snappableTo = false;\r\n        self.snapped = false;\r\n        self.droppableTo = false;\r\n        self.progressbar = self.autocloseProgressbar = self.querySelector('.jsPanel-progressbar'); // self.autocloseProgressbar kept for compatibility\r\n\r\n        // Events\r\n        const jspanelloaded = new CustomEvent('jspanelloaded', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelstatuschange = new CustomEvent('jspanelstatuschange', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelbeforenormalize = new CustomEvent('jspanelbeforenormalize', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelnormalized = new CustomEvent('jspanelnormalized', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelbeforemaximize = new CustomEvent('jspanelbeforemaximize', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelmaximized = new CustomEvent('jspanelmaximized', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelbeforeminimize = new CustomEvent('jspanelbeforeminimize', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelminimized = new CustomEvent('jspanelminimized', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelbeforesmallify = new CustomEvent('jspanelbeforesmallify', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelsmallified = new CustomEvent('jspanelsmallified', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelsmallifiedmax = new CustomEvent('jspanelsmallifiedmax', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelbeforeunsmallify = new CustomEvent('jspanelbeforeunsmallify', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelfronted = new CustomEvent('jspanelfronted', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelbeforeclose = new CustomEvent('jspanelbeforeclose', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelclosed = new CustomEvent('jspanelclosed', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelcloseduser = new CustomEvent('jspanelcloseduser', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            });\r\n        // make panel available as event object property 'panel'\r\n        [\r\n            jspanelloaded,\r\n            jspanelstatuschange,\r\n            jspanelbeforenormalize,\r\n            jspanelnormalized,\r\n            jspanelbeforemaximize,\r\n            jspanelmaximized,\r\n            jspanelbeforeminimize,\r\n            jspanelminimized,\r\n            jspanelbeforesmallify,\r\n            jspanelsmallified,\r\n            jspanelsmallifiedmax,\r\n            jspanelbeforeunsmallify,\r\n            jspanelfronted,\r\n            jspanelbeforeclose,\r\n        ].forEach((evt) => {\r\n            evt.panel = self;\r\n        });\r\n\r\n        // controls buttons\r\n        const closeBtn = self.querySelector('.jsPanel-btn-close'),\r\n            maxBtn = self.querySelector('.jsPanel-btn-maximize'),\r\n            normBtn = self.querySelector('.jsPanel-btn-normalize'),\r\n            smallBtn = self.querySelector('.jsPanel-btn-smallify'),\r\n            minBtn = self.querySelector('.jsPanel-btn-minimize');\r\n\r\n        if (closeBtn) {\r\n            jsPanel.pointerup.forEach((item) => {\r\n                closeBtn.addEventListener(item, (e) => {\r\n                    e.preventDefault();\r\n                    // disable close for all mouse buttons but left\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    self.close(null, true); // true indicates panel closed by using the close control\r\n                });\r\n            });\r\n        }\r\n        if (maxBtn) {\r\n            jsPanel.pointerup.forEach((item) => {\r\n                maxBtn.addEventListener(item, (e) => {\r\n                    e.preventDefault();\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    self.maximize();\r\n                });\r\n            });\r\n        }\r\n        if (normBtn) {\r\n            jsPanel.pointerup.forEach((item) => {\r\n                normBtn.addEventListener(item, (e) => {\r\n                    e.preventDefault();\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    self.normalize();\r\n                });\r\n            });\r\n        }\r\n        if (smallBtn) {\r\n            jsPanel.pointerup.forEach((item) => {\r\n                smallBtn.addEventListener(item, (e) => {\r\n                    e.preventDefault();\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    if (self.status === 'normalized' || self.status === 'maximized') {\r\n                        self.smallify();\r\n                    } else if (self.status === 'smallified' || self.status === 'smallifiedmax') {\r\n                        self.unsmallify();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (minBtn) {\r\n            jsPanel.pointerup.forEach((item) => {\r\n                minBtn.addEventListener(item, (e) => {\r\n                    e.preventDefault();\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    self.minimize();\r\n                });\r\n            });\r\n        }\r\n\r\n        // import extensions (extensions of the individual panel, not the global object jsPanel)\r\n        let extensions = jsPanel.extensions;\r\n        for (let ext in extensions) {\r\n            if (Object.prototype.hasOwnProperty.call(extensions, ext)) {\r\n                self[ext] = extensions[ext];\r\n            }\r\n        }\r\n\r\n        // Methods\r\n        self.clearTheme = (cb) => {\r\n            jsPanel.themes.forEach((value) => {\r\n                ['panel', `jsPanel-theme-${value}`, `panel-${value}`, `${value}-color`].forEach((item) => {\r\n                    self.classList.remove(item);\r\n                });\r\n                self.header.classList.remove(`jsPanel-theme-${value}`);\r\n            });\r\n            self.content.classList.remove('jsPanel-content-filled', 'jsPanel-content-filledlight');\r\n            self.header.classList.remove('jsPanel-hdr-light');\r\n            self.header.classList.remove('jsPanel-hdr-dark');\r\n            self.style.backgroundColor = '';\r\n            jsPanel.setStyle(self.headertoolbar, {\r\n                boxShadow: '',\r\n                width: '',\r\n                marginLeft: '',\r\n                borderTopColor: 'transparent',\r\n            });\r\n            jsPanel.setStyle(self.content, {\r\n                background: '',\r\n                borderTopColor: 'transparent',\r\n            });\r\n            self.header.style.background = '';\r\n            Array.prototype.slice\r\n                .call(self.controlbar.querySelectorAll('.jsPanel-icon'))\r\n                .concat([self.headerlogo, self.headertitle, self.headertoolbar, self.content])\r\n                .forEach((item) => {\r\n                    item.style.color = '';\r\n                });\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.getThemeDetails = (th) => {\r\n            const passedTheme = th.toLowerCase(),\r\n                theme = { color: false, colors: false, filling: false },\r\n                step1 = passedTheme.split('fill');\r\n            theme.color = step1[0].trim().replace(/\\s*/g, '');\r\n            if (step1.length === 2) {\r\n                if (step1[1].startsWith('edlight')) {\r\n                    theme.filling = 'filledlight';\r\n                } else if (step1[1].startsWith('eddark')) {\r\n                    theme.filling = 'filleddark';\r\n                } else if (step1[1].startsWith('ed')) {\r\n                    theme.filling = 'filled';\r\n                } else if (step1[1].startsWith('color')) {\r\n                    let step2 = step1[1].split('color'),\r\n                        fillcolor = step2[step2.length - 1].trim().replace(/\\s*/g, '');\r\n                    if (jsPanel.colorNames[fillcolor]) {\r\n                        fillcolor = jsPanel.colorNames[fillcolor];\r\n                    }\r\n                    if (fillcolor.match(/^([0-9a-f]{3}|[0-9a-f]{6})$/gi)) {\r\n                        fillcolor = '#' + fillcolor;\r\n                    }\r\n                    theme.filling = fillcolor;\r\n                }\r\n            }\r\n\r\n            const builtIn = jsPanel.themes.some((item) => {\r\n                return item === theme.color.split(/\\s/i)[0];\r\n            });\r\n            if (builtIn) {\r\n                let baseTheme = theme.color.split(/\\s/i)[0],\r\n                    btn = document.createElement('button');\r\n                btn.className = baseTheme + '-bg';\r\n                document.body.appendChild(btn);\r\n                theme.color = getComputedStyle(btn).backgroundColor.replace(/\\s+/gi, '');\r\n                document.body.removeChild(btn);\r\n                // noinspection JSUnusedAssignment\r\n                btn = undefined;\r\n            } else if (theme.color.startsWith('bootstrap-')) {\r\n                // works with bootstrap 3 and 4\r\n                let index = theme.color.indexOf('-'),\r\n                    btn = document.createElement('button');\r\n                btn.className = 'btn btn' + theme.color.slice(index);\r\n                document.body.appendChild(btn);\r\n                theme.color = getComputedStyle(btn).backgroundColor.replace(/\\s+/gi, '');\r\n                document.body.removeChild(btn);\r\n                // noinspection JSUnusedAssignment\r\n                btn = undefined;\r\n            } else if (theme.color.startsWith('mdb-')) {\r\n                // material design for bootstrap theme\r\n                let index = theme.color.indexOf('-') + 1,\r\n                    span = document.createElement('span'),\r\n                    testClass;\r\n                if (theme.color.endsWith('-dark')) {\r\n                    testClass = theme.color.slice(index);\r\n                    testClass = testClass.replace('-dark', '-color-dark');\r\n                } else {\r\n                    testClass = theme.color.slice(index) + '-color';\r\n                }\r\n                span.className = testClass;\r\n                document.body.appendChild(span);\r\n                theme.color = getComputedStyle(span).backgroundColor.replace(/\\s+/gi, '');\r\n                document.body.removeChild(span);\r\n                // noinspection JSUnusedAssignment\r\n                span = undefined;\r\n            }\r\n            theme.colors = jsPanel.calcColors(theme.color);\r\n            return theme;\r\n        };\r\n        self.applyColorTheme = (themeDetails) => {\r\n            self.style.backgroundColor = themeDetails.colors[0];\r\n            self.header.style.backgroundColor = themeDetails.colors[0];\r\n            self.header.style.color = themeDetails.colors[3];\r\n            ['.jsPanel-headerlogo', '.jsPanel-title', '.jsPanel-hdr-toolbar'].forEach((item) => {\r\n                self.querySelector(item).style.color = themeDetails.colors[3];\r\n            });\r\n            self.querySelectorAll('.jsPanel-controlbar .jsPanel-btn').forEach((item) => {\r\n                item.style.color = themeDetails.colors[3];\r\n            });\r\n            // apply border to content only themes 'filled'\r\n            if (typeof self.options.theme === 'string' && themeDetails.filling === 'filled') {\r\n                self.content.style.borderTop =\r\n                    themeDetails.colors[3] === '#000000' ? '1px solid rgba(0,0,0,0.15)' : '1px solid rgba(255,255,255,0.15)';\r\n            }\r\n\r\n            if (themeDetails.colors[3] === '#000000') {\r\n                self.header.classList.add('jsPanel-hdr-light');\r\n            } else {\r\n                self.header.classList.add('jsPanel-hdr-dark');\r\n            }\r\n\r\n            if (themeDetails.filling) {\r\n                switch (themeDetails.filling) {\r\n                    case 'filled':\r\n                        jsPanel.setStyle(self.content, {\r\n                            backgroundColor: themeDetails.colors[2],\r\n                            color: themeDetails.colors[3],\r\n                        });\r\n                        break;\r\n                    case 'filledlight':\r\n                        self.content.style.backgroundColor = themeDetails.colors[1];\r\n                        break;\r\n                    case 'filleddark':\r\n                        jsPanel.setStyle(self.content, {\r\n                            backgroundColor: themeDetails.colors[6],\r\n                            color: themeDetails.colors[7],\r\n                        });\r\n                        break;\r\n                    default:\r\n                        self.content.style.backgroundColor = themeDetails.filling;\r\n                        self.content.style.color =\r\n                            jsPanel.perceivedBrightness(themeDetails.filling) <= jsPanel.colorBrightnessThreshold ? '#fff' : '#000';\r\n                }\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.applyCustomTheme = (theme) => {\r\n            let defaults = {\r\n                    bgPanel: '#fff',\r\n                    bgContent: '#fff',\r\n                    colorHeader: '#000',\r\n                    colorContent: '#000',\r\n                },\r\n                passedTheme;\r\n            if (typeof theme === 'object') {\r\n                passedTheme = Object.assign(defaults, theme);\r\n            } else {\r\n                passedTheme = defaults;\r\n            }\r\n            let bgPanel = passedTheme.bgPanel,\r\n                bgContent = passedTheme.bgContent,\r\n                colorHeader = passedTheme.colorHeader,\r\n                colorContent = passedTheme.colorContent;\r\n\r\n            // set background panel/header\r\n            jsPanel.colorNames[bgPanel] ? (self.style.background = '#' + jsPanel.colorNames[bgPanel]) : (self.style.background = bgPanel);\r\n\r\n            // set font color header\r\n            if (jsPanel.colorNames[colorHeader]) {\r\n                colorHeader = '#' + jsPanel.colorNames[colorHeader];\r\n            }\r\n            ['.jsPanel-headerlogo', '.jsPanel-title', '.jsPanel-hdr-toolbar'].forEach((item) => {\r\n                self.querySelector(item).style.color = colorHeader;\r\n            });\r\n            self.querySelectorAll('.jsPanel-controlbar .jsPanel-btn').forEach((item) => {\r\n                item.style.color = colorHeader;\r\n            });\r\n\r\n            // set content background\r\n            jsPanel.colorNames[bgContent]\r\n                ? (self.content.style.background = '#' + jsPanel.colorNames[bgContent])\r\n                : (self.content.style.background = bgContent);\r\n\r\n            // set content font color\r\n            jsPanel.colorNames[colorContent]\r\n                ? (self.content.style.color = '#' + jsPanel.colorNames[colorContent])\r\n                : (self.content.style.color = colorContent);\r\n\r\n            // set border-top for header toolbar and add header class\r\n            const pbPanel = jsPanel.perceivedBrightness(colorHeader);\r\n            if (pbPanel > jsPanel.colorBrightnessThreshold) {\r\n                self.header.classList.add('jsPanel-hdr-dark');\r\n            } else {\r\n                self.header.classList.add('jsPanel-hdr-light');\r\n            }\r\n\r\n            // set border-top for content\r\n            const pbContent = jsPanel.perceivedBrightness(colorContent);\r\n            pbContent > jsPanel.colorBrightnessThreshold\r\n                ? (self.content.style.borderTop = '1px solid rgba(255,255,255,0.15)')\r\n                : (self.content.style.borderTop = '1px solid rgba(0,0,0,0.15)');\r\n\r\n            // set panel border (option.border does not work for themes using an object)\r\n            if (passedTheme.border) {\r\n                let border = passedTheme.border,\r\n                    index = border.lastIndexOf(' '),\r\n                    col = border.slice(++index);\r\n                if (jsPanel.colorNames[col]) {\r\n                    border = border.replace(col, '#' + jsPanel.colorNames[col]);\r\n                }\r\n                self.style.border = border;\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.setBorder = (val) => {\r\n            let border = jsPanel.pOborder(val);\r\n            if (!border[2].length) {\r\n                border[2] = self.style.backgroundColor;\r\n            } else if (jsPanel.colorNames[border[2]]) {\r\n                border[2] = '#' + jsPanel.colorNames[border[2]];\r\n            }\r\n            border = border.join(' ');\r\n            self.style.border = border;\r\n            self.options.border = border;\r\n            return self;\r\n        };\r\n        self.setBorderRadius = (rad) => {\r\n            if (typeof rad === 'number') {\r\n                rad += 'px';\r\n            }\r\n            self.style.borderRadius = rad;\r\n            const br = getComputedStyle(self);\r\n            // set border-radius of either header or content section depending on presence of header\r\n            if (self.options.header) {\r\n                self.header.style.borderTopLeftRadius = br.borderTopLeftRadius;\r\n                self.header.style.borderTopRightRadius = br.borderTopRightRadius;\r\n            } else {\r\n                self.content.style.borderTopLeftRadius = br.borderTopLeftRadius;\r\n                self.content.style.borderTopRightRadius = br.borderTopRightRadius;\r\n            }\r\n            // set border-radius of either footer or content section depending on presence of footer\r\n            if (self.options.footerToolbar) {\r\n                self.footer.style.borderBottomRightRadius = br.borderBottomRightRadius;\r\n                self.footer.style.borderBottomLeftRadius = br.borderBottomLeftRadius;\r\n            } else {\r\n                self.content.style.borderBottomRightRadius = br.borderBottomRightRadius;\r\n                self.content.style.borderBottomLeftRadius = br.borderBottomLeftRadius;\r\n            }\r\n            return self;\r\n        };\r\n        self.setTheme = (theme = options.theme, cb) => {\r\n            // if panel is minimized normalize it for theme change\r\n            let minimized;\r\n            if (self.status === 'minimized') {\r\n                minimized = true;\r\n                self.normalize();\r\n            }\r\n            // first remove all theme related styles\r\n            self.clearTheme();\r\n            if (typeof theme === 'object') {\r\n                options.border = undefined;\r\n                self.applyCustomTheme(theme);\r\n            } else {\r\n                if (theme === 'none') {\r\n                    theme = 'white';\r\n                }\r\n                let themeDetails = self.getThemeDetails(theme);\r\n                self.applyColorTheme(themeDetails);\r\n            }\r\n            // minimize again if panel was minimized prior theme change\r\n            if (minimized) {\r\n                self.minimize();\r\n            }\r\n\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.remove = (id, closedBy, cb) => {\r\n            // self.remove() is just a helper func used in self.close()\r\n            self.parentElement.removeChild(self);\r\n            if (!document.getElementById(id)) {\r\n                self.removeMinimizedReplacement();\r\n                self.status = 'closed';\r\n                if (closedBy) {\r\n                    document.dispatchEvent(jspanelcloseduser);\r\n                }\r\n                document.dispatchEvent(jspanelclosed);\r\n                if (self.options.onclosed) {\r\n                    jsPanel.processCallbacks(self, self.options.onclosed, 'every', closedBy);\r\n                }\r\n                jsPanel.autopositionRemaining(self);\r\n                if (cb) {\r\n                    cb.call(id, id);\r\n                }\r\n            } else {\r\n                if (cb) {\r\n                    cb.call(self, id, self);\r\n                }\r\n            }\r\n            window.removeEventListener('resize', self.windowResizeHandler);\r\n            document.removeEventListener('jspanelresize', self.parentResizeHandler);\r\n        };\r\n        self.close = (cb, closedByUser) => {\r\n            // if panel does not exist return\r\n            if (!self.parentElement) {return;}\r\n\r\n            if (self.closetimer) {\r\n                window.clearInterval(self.closetimer);\r\n            }\r\n            document.dispatchEvent(jspanelbeforeclose);\r\n            self.statusBefore = self.status;\r\n\r\n            if (\r\n                self.options.onbeforeclose &&\r\n                self.options.onbeforeclose.length > 0 &&\r\n                !jsPanel.processCallbacks(self, self.options.onbeforeclose, 'some', self.status, closedByUser)\r\n            ) {\r\n                return self;\r\n            }\r\n            if (self.options.animateOut) {\r\n                if (self.options.animateIn) {\r\n                    jsPanel.remClass(self, self.options.animateIn);\r\n                }\r\n                jsPanel.setClass(self, self.options.animateOut);\r\n                self.addEventListener('animationend', (e) => {\r\n                    e.stopPropagation();\r\n                    self.remove(self.id, closedByUser, cb);\r\n                });\r\n            } else {\r\n                self.remove(self.id, closedByUser, cb);\r\n            }\r\n        };\r\n        self.maximize = (cb, donotfront) => {\r\n            // Note: do not disable maximize method for already maximized panels -> onContainerResize wouldn't work\r\n            self.statusBefore = self.status;\r\n            if (\r\n                options.onbeforemaximize &&\r\n                options.onbeforemaximize.length > 0 &&\r\n                !jsPanel.processCallbacks(self, options.onbeforemaximize, 'some', self.statusBefore)\r\n            ) {\r\n                return self;\r\n            }\r\n\r\n            document.dispatchEvent(jspanelbeforemaximize);\r\n\r\n            const parent = self.parentElement,\r\n                margins = jsPanel.pOcontainment(options.maximizedMargin); // normalize maximizedMargin\r\n\r\n            if (parent === document.body) {\r\n                // maximize within window\r\n                /*\r\n                   When clientHeight is used on the root element (the <html> element), (or on <body> if the document is in quirks mode),\r\n                   the viewport's height (excluding any scrollbar) is returned. This is a special case of clientHeight.\r\n                   See https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\r\n                   document.documentElement in the code below returns the <html> element\r\n                */\r\n                self.style.width = document.documentElement.clientWidth - margins[1] - margins[3] + 'px';\r\n                self.style.height = document.documentElement.clientHeight - margins[0] - margins[2] + 'px';\r\n                self.style.left = margins[3] + 'px';\r\n                self.style.top = margins[0] + 'px';\r\n            } else {\r\n                // maximize within parentElement\r\n                self.style.width = parent.clientWidth - margins[1] - margins[3] + 'px';\r\n                self.style.height = parent.clientHeight - margins[0] - margins[2] + 'px';\r\n                self.style.left = margins[3] + 'px';\r\n                self.style.top = margins[0] + 'px';\r\n            }\r\n\r\n            smallBtn.style.transform = 'unset';\r\n            self.removeMinimizedReplacement();\r\n            self.status = 'maximized';\r\n            self.setControls(['.jsPanel-btn-maximize']);\r\n            if (!donotfront) {\r\n                self.front();\r\n            }\r\n            document.dispatchEvent(jspanelmaximized);\r\n            document.dispatchEvent(jspanelstatuschange);\r\n\r\n            if (options.onstatuschange) {\r\n                jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\r\n            }\r\n\r\n            if (cb) {\r\n                cb.call(self, self, self.statusBefore);\r\n            }\r\n\r\n            if (options.onmaximized) {\r\n                jsPanel.processCallbacks(self, options.onmaximized, 'every', self.statusBefore);\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.minimize = (cb) => {\r\n            if (self.status === 'minimized') {\r\n                return self;\r\n            }\r\n            self.statusBefore = self.status;\r\n\r\n            if (\r\n                options.onbeforeminimize &&\r\n                options.onbeforeminimize.length > 0 &&\r\n                !jsPanel.processCallbacks(self, options.onbeforeminimize, 'some', self.statusBefore)\r\n            ) {\r\n                return self;\r\n            }\r\n\r\n            document.dispatchEvent(jspanelbeforeminimize);\r\n\r\n            // create container for minimized replacements if not already there\r\n            if (!document.getElementById('jsPanel-replacement-container')) {\r\n                const replacementContainer = document.createElement('div');\r\n                replacementContainer.id = 'jsPanel-replacement-container';\r\n                document.body.append(replacementContainer);\r\n            }\r\n\r\n            self.style.left = '-9999px';\r\n            self.status = 'minimized';\r\n            document.dispatchEvent(jspanelminimized);\r\n            document.dispatchEvent(jspanelstatuschange);\r\n\r\n            if (options.onstatuschange) {\r\n                jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\r\n            }\r\n\r\n            if (options.minimizeTo) {\r\n                let replacement = self.createMinimizedReplacement(),\r\n                    container,\r\n                    parent,\r\n                    list;\r\n                switch (options.minimizeTo) {\r\n                    case 'default':\r\n                        document.getElementById('jsPanel-replacement-container').append(replacement);\r\n                        break;\r\n                    case 'parentpanel':\r\n                        parent = self.closest('.jsPanel-content').parentElement;\r\n                        list = parent.querySelectorAll('.jsPanel-minimized-box');\r\n                        container = list[list.length - 1];\r\n                        container.append(replacement);\r\n                        break;\r\n                    case 'parent':\r\n                        parent = self.parentElement;\r\n                        container = parent.querySelector('.jsPanel-minimized-container');\r\n                        if (!container) {\r\n                            container = document.createElement('div');\r\n                            container.className = 'jsPanel-minimized-container';\r\n                            parent.append(container);\r\n                        }\r\n                        container.append(replacement);\r\n                        break;\r\n                    default:\r\n                        // all other strings are assumed to be selector strings returning a single element to append the min replacement to\r\n                        document.querySelector(options.minimizeTo).append(replacement);\r\n                }\r\n            }\r\n\r\n            if (cb) {\r\n                cb.call(self, self, self.statusBefore);\r\n            }\r\n\r\n            if (options.onminimized) {\r\n                jsPanel.processCallbacks(self, options.onminimized, 'every', self.statusBefore);\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.normalize = (cb) => {\r\n            if (self.status === 'normalized') {\r\n                return self;\r\n            }\r\n            self.statusBefore = self.status;\r\n            // ensure smallify/unsmallify transition is turned off when resizing begins\r\n            //self.style.transition = 'unset';\r\n\r\n            if (\r\n                options.onbeforenormalize &&\r\n                options.onbeforenormalize.length > 0 &&\r\n                !jsPanel.processCallbacks(self, options.onbeforenormalize, 'some', self.statusBefore)\r\n            ) {\r\n                return self;\r\n            }\r\n\r\n            document.dispatchEvent(jspanelbeforenormalize);\r\n            self.style.width = self.currentData.width;\r\n            self.style.height = self.currentData.height;\r\n            if (self.snapped) {\r\n                // if panel is snapped before minimizing restore snapped position\r\n                self.snap(self.snapped, true);\r\n            } else {\r\n                self.style.left = self.currentData.left;\r\n                self.style.top = self.currentData.top;\r\n            }\r\n            smallBtn.style.transform = 'unset';\r\n            self.removeMinimizedReplacement();\r\n            self.status = 'normalized';\r\n            self.setControls(['.jsPanel-btn-normalize']);\r\n            self.front();\r\n            document.dispatchEvent(jspanelnormalized);\r\n            document.dispatchEvent(jspanelstatuschange);\r\n\r\n            if (options.onstatuschange) {\r\n                jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\r\n            }\r\n\r\n            if (cb) {\r\n                cb.call(self, self, self.statusBefore);\r\n            }\r\n\r\n            if (options.onnormalized) {\r\n                jsPanel.processCallbacks(self, options.onnormalized, 'every', self.statusBefore);\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.smallify = (cb) => {\r\n            if (self.status === 'smallified' || self.status === 'smallifiedmax') {\r\n                return self;\r\n            }\r\n            self.statusBefore = self.status;\r\n\r\n            if (\r\n                options.onbeforesmallify &&\r\n                options.onbeforesmallify.length > 0 &&\r\n                !jsPanel.processCallbacks(self, options.onbeforesmallify, 'some', self.statusBefore)\r\n            ) {\r\n                return self;\r\n            }\r\n\r\n            document.dispatchEvent(jspanelbeforesmallify);\r\n\r\n            self.style.overflow = 'hidden';\r\n            const selfStyles = window.getComputedStyle(self),\r\n                selfHeaderHeight = parseFloat(window.getComputedStyle(self.headerbar).height);\r\n            self.style.height = parseFloat(selfStyles.borderTopWidth) + parseFloat(selfStyles.borderBottomWidth) + selfHeaderHeight + 'px';\r\n\r\n            smallBtn.style.transform = 'rotate(180deg)';\r\n\r\n            if (self.status === 'normalized') {\r\n                self.setControls(['.jsPanel-btn-normalize']);\r\n                self.status = 'smallified';\r\n                document.dispatchEvent(jspanelsmallified);\r\n                document.dispatchEvent(jspanelstatuschange);\r\n                if (options.onstatuschange) {\r\n                    jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\r\n                }\r\n            } else if (self.status === 'maximized') {\r\n                self.setControls(['.jsPanel-btn-maximize']);\r\n                self.status = 'smallifiedmax';\r\n                document.dispatchEvent(jspanelsmallifiedmax);\r\n                document.dispatchEvent(jspanelstatuschange);\r\n                if (options.onstatuschange) {\r\n                    jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\r\n                }\r\n            }\r\n\r\n            const minBoxes = self.querySelectorAll('.jsPanel-minimized-box');\r\n            minBoxes[minBoxes.length - 1].style.display = 'none';\r\n\r\n            if (cb) {\r\n                cb.call(self, self, self.statusBefore);\r\n            }\r\n\r\n            if (options.onsmallified) {\r\n                jsPanel.processCallbacks(self, options.onsmallified, 'every', self.statusBefore);\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.unsmallify = (cb) => {\r\n            self.statusBefore = self.status;\r\n\r\n            if (self.status === 'smallified' || self.status === 'smallifiedmax') {\r\n                if (\r\n                    options.onbeforeunsmallify &&\r\n                    options.onbeforeunsmallify.length > 0 &&\r\n                    !jsPanel.processCallbacks(self, options.onbeforeunsmallify, 'some', self.statusBefore)\r\n                ) {\r\n                    return self;\r\n                }\r\n\r\n                document.dispatchEvent(jspanelbeforeunsmallify);\r\n                self.style.overflow = 'visible';\r\n                self.front();\r\n\r\n                if (self.status === 'smallified') {\r\n                    self.style.height = self.currentData.height;\r\n                    self.setControls(['.jsPanel-btn-normalize']);\r\n                    self.status = 'normalized';\r\n                    document.dispatchEvent(jspanelnormalized);\r\n                    document.dispatchEvent(jspanelstatuschange);\r\n                    if (options.onstatuschange) {\r\n                        jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\r\n                    }\r\n                } else if (self.status === 'smallifiedmax') {\r\n                    self.maximize();\r\n                } else if (self.status === 'minimized') {\r\n                    self.normalize();\r\n                }\r\n                smallBtn.style.transform = 'rotate(0deg)';\r\n\r\n                const minBoxes = self.querySelectorAll('.jsPanel-minimized-box');\r\n                minBoxes[minBoxes.length - 1].style.display = 'flex';\r\n\r\n                if (cb) {\r\n                    cb.call(self, self, self.statusBefore);\r\n                }\r\n\r\n                if (options.onunsmallified) {\r\n                    jsPanel.processCallbacks(self, options.onunsmallified, 'every', self.statusBefore);\r\n                }\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.front = (callback, execOnFrontedCallbacks = true) => {\r\n            if (self.status === 'minimized') {\r\n                self.statusBefore === 'maximized' ? self.maximize() : self.normalize();\r\n            } else {\r\n                const newArr = Array.prototype.slice.call(document.querySelectorAll('.jsPanel-standard')).map((panel) => {\r\n                    return panel.style.zIndex;\r\n                });\r\n                if (Math.max(...newArr) > self.style.zIndex) {\r\n                    self.style.zIndex = jsPanel.zi.next();\r\n                }\r\n                jsPanel.resetZi();\r\n            }\r\n            document.dispatchEvent(jspanelfronted);\r\n            if (callback) {\r\n                callback.call(self, self);\r\n            }\r\n            if (options.onfronted && execOnFrontedCallbacks) {\r\n                jsPanel.processCallbacks(self, options.onfronted, 'every', self.status);\r\n            }\r\n            return self;\r\n        };\r\n        self.snap = (pos, alreadySnapped = false) => {\r\n            // store panel size before it snaps, only if not snapped already\r\n            if (!alreadySnapped) {\r\n                self.currentData.beforeSnap = {\r\n                    width: self.currentData.width,\r\n                    height: self.currentData.height,\r\n                };\r\n            }\r\n            // snap panel\r\n            if (pos && typeof pos === 'function' && !alreadySnapped) {\r\n                pos.call(self, self, self.snappableTo);\r\n            } else if (pos !== false) {\r\n                let offsets = [0, 0];\r\n                if (self.options.dragit.snap.containment) {\r\n                    if (self.options.dragit.containment) {\r\n                        const containment = jsPanel.pOcontainment(self.options.dragit.containment),\r\n                            position = self.snappableTo;\r\n                        if (position.startsWith('left')) {\r\n                            offsets[0] = containment[3];\r\n                        } else if (position.startsWith('right')) {\r\n                            offsets[0] = -containment[1];\r\n                        }\r\n                        if (position.endsWith('top')) {\r\n                            offsets[1] = containment[0];\r\n                        } else if (position.endsWith('bottom')) {\r\n                            offsets[1] = -containment[2];\r\n                        }\r\n                    }\r\n                }\r\n                self.reposition(`${self.snappableTo} ${offsets[0]} ${offsets[1]}`);\r\n            }\r\n            if (!alreadySnapped) {\r\n                self.snapped = self.snappableTo;\r\n            }\r\n        };\r\n        self.move = (target, cb) => {\r\n            let overlaps = self.overlaps(target, 'paddingbox'),\r\n                source = self.parentElement;\r\n            target.appendChild(self);\r\n            self.options.container = target;\r\n            self.style.left = overlaps.left + 'px';\r\n            self.style.top = overlaps.top + 'px';\r\n            self.saveCurrentDimensions();\r\n            self.saveCurrentPosition();\r\n            self.calcSizeFactors(); // important for option.onContainerResize\r\n            if (cb) {\r\n                cb.call(self, self, target, source);\r\n            }\r\n            return self;\r\n        };\r\n\r\n        self.closeChildpanels = (cb) => {\r\n            self.getChildpanels().forEach((item) => item.close());\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.getChildpanels = (cb) => {\r\n            const childpanels = self.content.querySelectorAll('.jsPanel');\r\n            if (cb) {\r\n                childpanels.forEach((panel, index, list) => {\r\n                    cb.call(panel, panel, index, list);\r\n                });\r\n            }\r\n            return childpanels;\r\n        };\r\n        self.isChildpanel = (cb) => {\r\n            const pp = self.closest('.jsPanel-content'),\r\n                parentpanel = pp ? pp.parentElement : null;\r\n            if (cb) {\r\n                cb.call(self, self, parentpanel);\r\n            }\r\n            // if panel is childpanel of another panel returns parentpanel, otherwise false\r\n            return pp ? parentpanel : false;\r\n        };\r\n        self.contentRemove = (cb) => {\r\n            jsPanel.emptyNode(self.content);\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.createMinimizedReplacement = () => {\r\n            const tpl = jsPanel.createMinimizedTemplate(),\r\n                color = window.getComputedStyle(self.headertitle).color,\r\n                selfStyles = window.getComputedStyle(self),\r\n                font = options.iconfont,\r\n                controlbar = tpl.querySelector('.jsPanel-controlbar');\r\n\r\n            // if panel background is an image (that includes gradients) instead of a color value\r\n            if (self.options.header !== 'auto-show-hide') {\r\n                jsPanel.setStyle(tpl, {\r\n                    backgroundColor: selfStyles.backgroundColor,\r\n                    backgroundPositionX: selfStyles.backgroundPositionX,\r\n                    backgroundPositionY: selfStyles.backgroundPositionY,\r\n                    backgroundRepeat: selfStyles.backgroundRepeat,\r\n                    backgroundAttachment: selfStyles.backgroundAttachment,\r\n                    backgroundImage: selfStyles.backgroundImage,\r\n                    backgroundSize: selfStyles.backgroundSize,\r\n                    backgroundOrigin: selfStyles.backgroundOrigin,\r\n                    backgroundClip: selfStyles.backgroundClip,\r\n                });\r\n            } else {\r\n                tpl.style.backgroundColor = window.getComputedStyle(self.header).backgroundColor;\r\n            }\r\n\r\n            tpl.id = self.id + '-min';\r\n            tpl.querySelector('.jsPanel-headerbar').replaceChild(self.headerlogo.cloneNode(true), tpl.querySelector('.jsPanel-headerlogo'));\r\n            tpl.querySelector('.jsPanel-titlebar').replaceChild(self.headertitle.cloneNode(true), tpl.querySelector('.jsPanel-title'));\r\n            tpl.querySelector('.jsPanel-titlebar').setAttribute('title', self.headertitle.textContent);\r\n            tpl.querySelector('.jsPanel-title').style.color = color;\r\n            controlbar.style.color = color;\r\n\r\n            controlbar.querySelectorAll('button').forEach((btn) => {\r\n                btn.style.color = color;\r\n            });\r\n\r\n            ['jsPanel-hdr-dark', 'jsPanel-hdr-light'].forEach((item) => {\r\n                if (self.header.classList.contains(item)) {\r\n                    tpl.querySelector('.jsPanel-hdr').classList.add(item);\r\n                }\r\n            });\r\n\r\n            // set iconfont\r\n            self.setIconfont(font, tpl);\r\n\r\n            if (self.dataset.btnnormalize === 'enabled') {\r\n                jsPanel.pointerup.forEach((evt) => {\r\n                    tpl.querySelector('.jsPanel-btn-normalize').addEventListener(evt, (e) => {\r\n                        e.preventDefault();\r\n                        if (e.button && e.button > 0) {\r\n                            return false;\r\n                        }\r\n                        self.normalize();\r\n                    });\r\n                });\r\n            } else {\r\n                controlbar.querySelector('.jsPanel-btn-normalize').style.display = 'none';\r\n            }\r\n            if (self.dataset.btnmaximize === 'enabled') {\r\n                jsPanel.pointerup.forEach((evt) => {\r\n                    tpl.querySelector('.jsPanel-btn-maximize').addEventListener(evt, (e) => {\r\n                        e.preventDefault();\r\n                        if (e.button && e.button > 0) {\r\n                            return false;\r\n                        }\r\n                        self.maximize();\r\n                    });\r\n                });\r\n            } else {\r\n                controlbar.querySelector('.jsPanel-btn-maximize').style.display = 'none';\r\n            }\r\n            if (self.dataset.btnclose === 'enabled') {\r\n                jsPanel.pointerup.forEach((evt) => {\r\n                    tpl.querySelector('.jsPanel-btn-close').addEventListener(evt, (e) => {\r\n                        e.preventDefault();\r\n                        if (e.button && e.button > 0) {\r\n                            return false;\r\n                        }\r\n                        self.close(null, true);\r\n                    });\r\n                });\r\n            } else {\r\n                controlbar.querySelector('.jsPanel-btn-close').style.display = 'none';\r\n            }\r\n\r\n            return tpl;\r\n        };\r\n        self.removeMinimizedReplacement = () => {\r\n            const elmt = document.getElementById(`${self.id}-min`);\r\n            if (elmt) {\r\n                elmt.parentElement.removeChild(elmt);\r\n            }\r\n        };\r\n\r\n        self.drag = (options = {}) => {\r\n            let dragstarted, dragElmt, opts;\r\n            const jspaneldragstart = new CustomEvent('jspaneldragstart', { detail: self.id }),\r\n                jspaneldrag = new CustomEvent('jspaneldrag', { detail: self.id }),\r\n                jspaneldragstop = new CustomEvent('jspaneldragstop', { detail: self.id });\r\n\r\n            // make panel available as event object property 'panel'\r\n            [jspaneldragstart, jspaneldrag, jspaneldragstop].forEach((evt) => {\r\n                evt.panel = self;\r\n            });\r\n\r\n            const camelcase = (string) => {\r\n                // 'left-top' converted to 'snapLeftTop'\r\n                let str = string.split('-');\r\n                str.forEach((word, index) => {\r\n                    str[index] = word.charAt(0).toUpperCase() + word.slice(1);\r\n                });\r\n                return 'snap' + str.join('');\r\n            };\r\n            function windowListener(e) {\r\n                if (e.relatedTarget === null) {\r\n                    jsPanel.pointermove.forEach((evt) => {\r\n                        document.removeEventListener(evt, dragElmt, false);\r\n                        self.style.opacity = 1;\r\n                    });\r\n                }\r\n            }\r\n            // attach handler to each drag handle\r\n            let handles = options.handles || jsPanel.defaults.dragit.handles;\r\n            let cursor = options.cursor || jsPanel.defaults.dragit.cursor;\r\n\r\n            function pointerUpHandlerDragit(e) {\r\n                jsPanel.pointermove.forEach((e) => {\r\n                    document.removeEventListener(e, dragElmt);\r\n                });\r\n                jsPanel.removeSnapAreas();\r\n                if (dragstarted) {\r\n                    self.style.opacity = 1;\r\n                    dragstarted = undefined;\r\n                    if (opts.snap) {\r\n                        switch (self.snappableTo) {\r\n                            case 'left-top':\r\n                                self.snap(opts.snap.snapLeftTop);\r\n                                break;\r\n                            case 'center-top':\r\n                                self.snap(opts.snap.snapCenterTop);\r\n                                break;\r\n                            case 'right-top':\r\n                                self.snap(opts.snap.snapRightTop);\r\n                                break;\r\n                            case 'right-center':\r\n                                self.snap(opts.snap.snapRightCenter);\r\n                                break;\r\n                            case 'right-bottom':\r\n                                self.snap(opts.snap.snapRightBottom);\r\n                                break;\r\n                            case 'center-bottom':\r\n                                self.snap(opts.snap.snapCenterBottom);\r\n                                break;\r\n                            case 'left-bottom':\r\n                                self.snap(opts.snap.snapLeftBottom);\r\n                                break;\r\n                            case 'left-center':\r\n                                self.snap(opts.snap.snapLeftCenter);\r\n                                break;\r\n                        }\r\n\r\n                        if (opts.snap.callback && self.snappableTo && typeof opts.snap.callback === 'function') {\r\n                            opts.snap.callback.call(self, self);\r\n                            if (opts.snap.repositionOnSnap && opts.snap[camelcase(self.snappableTo)] !== false) {\r\n                                self.repositionOnSnap(self.snappableTo);\r\n                            }\r\n                        }\r\n                        if (self.snappableTo && opts.snap.repositionOnSnap && opts.snap[camelcase(self.snappableTo)]) {\r\n                            self.repositionOnSnap(self.snappableTo);\r\n                        }\r\n                    }\r\n                    // opts.drop\r\n                    if (self.droppableTo && self.droppableTo) {\r\n                        let sourceContainer = self.parentElement;\r\n                        self.move(self.droppableTo);\r\n                        if (opts.drop.callback) {\r\n                            opts.drop.callback.call(self, self, self.droppableTo, sourceContainer);\r\n                        }\r\n                    }\r\n                    document.dispatchEvent(jspaneldragstop);\r\n                    if (opts.stop.length) {\r\n                        let stopStyles = window.getComputedStyle(self),\r\n                            paneldata = {\r\n                                left: parseFloat(stopStyles.left),\r\n                                top: parseFloat(stopStyles.top),\r\n                                width: parseFloat(stopStyles.width),\r\n                                height: parseFloat(stopStyles.height),\r\n                            };\r\n                        jsPanel.processCallbacks(self, opts.stop, false, paneldata, e);\r\n                    }\r\n                    self.saveCurrentPosition();\r\n                    self.calcSizeFactors(); // important for options onwindowresize/onparentresize\r\n                }\r\n                self.controlbar.style.pointerEvents = 'inherit';\r\n                self.content.style.pointerEvents = 'inherit';\r\n                // restore other panel's css pointer-events\r\n                document.querySelectorAll('iframe').forEach((frame) => {\r\n                    frame.style.pointerEvents = 'auto';\r\n                });\r\n                document.removeEventListener(e, pointerUpHandlerDragit);\r\n            }\r\n\r\n            self.querySelectorAll(handles).forEach((handle) => {\r\n                handle.style.touchAction = 'none';\r\n                handle.style.cursor = cursor;\r\n\r\n                jsPanel.pointerdown.forEach((evt) => {\r\n                    handle.addEventListener(evt, (e) => {\r\n                        // disable dragging for all mouse buttons but left\r\n                        if (e.button && e.button > 0) {\r\n                            return false;\r\n                        }\r\n\r\n                        // setup and normalize dragit options\r\n                        opts = Object.assign({}, jsPanel.defaults.dragit, options);\r\n\r\n                        if (opts.disableOnMaximized && self.status === 'maximized') {\r\n                            return false;\r\n                        }\r\n\r\n                        if (opts.containment || opts.containment === 0) {\r\n                            opts.containment = jsPanel.pOcontainment(opts.containment);\r\n                        }\r\n\r\n                        if (opts.grid) {\r\n                            if (Array.isArray(opts.grid)) {\r\n                                if (opts.grid.length === 1) {\r\n                                    opts.grid[1] = opts.grid[0];\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (opts.snap) {\r\n                            if (typeof opts.snap === 'object') {\r\n                                opts.snap = Object.assign({}, jsPanel.defaultSnapConfig, opts.snap);\r\n                            } else {\r\n                                opts.snap = jsPanel.defaultSnapConfig;\r\n                            }\r\n                        }\r\n\r\n                        // footer elmts with the class \"jsPanel-ftr-btn\" don't drag a panel\r\n                        // do not compare e.target with e.currentTarget because there might be footer elmts supposed to drag the panel\r\n                        // noinspection JSUnresolvedFunction\r\n                        if (e.target.closest('.jsPanel-ftr-btn')) {\r\n                            return;\r\n                        }\r\n\r\n                        self.controlbar.style.pointerEvents = 'none';\r\n                        self.content.style.pointerEvents = 'none'; // without this code handler might not be unbound when content has iframe or object tag\r\n                        // prevents iframes in other panel from interfering with drag action of dragged panel\r\n                        document.querySelectorAll('iframe').forEach((frame) => {\r\n                            frame.style.pointerEvents = 'none';\r\n                        });\r\n\r\n                        let startStyles = window.getComputedStyle(self),\r\n                            startLeft = parseFloat(startStyles.left),\r\n                            startTop = parseFloat(startStyles.top),\r\n                            startWidth = parseFloat(startStyles.width),\r\n                            startHeight = parseFloat(startStyles.height),\r\n                            psx = e.touches ? e.touches[0].clientX : e.clientX, // pointer x on mousedown (don't use pageX, doesn't work on FF for Android)\r\n                            psy = e.touches ? e.touches[0].clientY : e.clientY, // same as above\r\n                            parent = self.parentElement,\r\n                            parentRect = parent.getBoundingClientRect(),\r\n                            parentStyles = window.getComputedStyle(parent),\r\n                            scaleFactor = self.getScaleFactor(),\r\n                            startLeftCorrection = 0,\r\n                            scrollbarwidths = jsPanel.getScrollbarWidth(parent);\r\n\r\n                        // function actually dragging the elmt\r\n                        dragElmt = (e) => {\r\n                            e.preventDefault();\r\n\r\n                            if (!dragstarted) {\r\n                                document.dispatchEvent(jspaneldragstart);\r\n                                self.style.opacity = opts.opacity;\r\n                                // if configured restore panel size to values before snap and reposition reasonable before drag actually starts\r\n                                if (self.snapped && opts.snap.resizeToPreSnap && self.currentData.beforeSnap) {\r\n                                    self.resize(self.currentData.beforeSnap.width + ' ' + self.currentData.beforeSnap.height);\r\n                                    self.setControls(['.jsPanel-btn-normalize']);\r\n                                    let intermediateStyles = self.getBoundingClientRect(),\r\n                                        delta = psx - (intermediateStyles.left + intermediateStyles.width),\r\n                                        wHalf = intermediateStyles.width / 2;\r\n                                    if (delta > -wHalf) {\r\n                                        startLeftCorrection = delta + wHalf;\r\n                                    }\r\n                                }\r\n\r\n                                self.front();\r\n                                self.snapped = false;\r\n\r\n                                // panel is maximized on dragstart\r\n                                if (self.status === 'maximized') {\r\n                                    self.setControls(['.jsPanel-btn-normalize']);\r\n                                    self.status = 'normalized';\r\n                                }\r\n\r\n                                // opts.drop\r\n                                if (opts.drop && opts.drop.dropZones) {\r\n                                    //opts.drop.dropZones = opts.drop.dropZones.map(zone => jsPanel.pOcontainer(zone));\r\n                                    let dropzones = opts.drop.dropZones.map((zone) => jsPanel.pOcontainer(zone)); // -> array where each item is a NodeList\r\n                                    let dropzonelist = [];\r\n                                    dropzones.forEach(function (nodelist) {\r\n                                        if (nodelist.length) {\r\n                                            // an element node does not have a length property\r\n                                            nodelist.forEach(function (node) {\r\n                                                dropzonelist.push(node);\r\n                                            });\r\n                                        } else {\r\n                                            dropzonelist.push(nodelist);\r\n                                        }\r\n                                    });\r\n                                    // filter list to have only unique values\r\n                                    dropzonelist = dropzonelist.filter(function (value, index, self) {\r\n                                        return self.indexOf(value) === index;\r\n                                    });\r\n                                    opts.drop.dropZones = dropzonelist;\r\n                                }\r\n\r\n                                // dragstart callback\r\n                                if (opts.start.length) {\r\n                                    jsPanel.processCallbacks(\r\n                                        self,\r\n                                        opts.start,\r\n                                        false,\r\n                                        {\r\n                                            left: startLeft,\r\n                                            top: startTop,\r\n                                            width: startWidth,\r\n                                            height: startHeight,\r\n                                        },\r\n                                        e\r\n                                    );\r\n                                }\r\n                            }\r\n                            dragstarted = 1;\r\n                            let elmtL, elmtL2, elmtT, elmtT2, elmtR, elmtR2, elmtB, elmtB2, right, bottom;\r\n                            let pmx = e.touches ? e.touches[0].clientX : e.clientX, // current pointer x while pointer moves (don't use pageX, doesn't work on FF for Android)\r\n                                pmy = e.touches ? e.touches[0].clientY : e.clientY, // current pointer y while pointer moves (don't use pageY, doesn't work on FF for Android)\r\n                                dragStyles = window.getComputedStyle(self), // get current styles while dragging\r\n                                overlaps;\r\n\r\n                            // EDGE reports \"auto\" instead of pixel value using getComputedStyle(), so some values need to be calculated different\r\n                            // this whole block of code could be removed if EDGE not based on Chromium doesn't need to be supported\r\n                            if (parent === document.body) {\r\n                                let elmtRect = self.getBoundingClientRect();\r\n                                right =\r\n                                    window.innerWidth -\r\n                                    parseInt(parentStyles.borderLeftWidth, 10) -\r\n                                    parseInt(parentStyles.borderRightWidth, 10) -\r\n                                    (elmtRect.left + elmtRect.width);\r\n                                bottom =\r\n                                    window.innerHeight -\r\n                                    parseInt(parentStyles.borderTopWidth, 10) -\r\n                                    parseInt(parentStyles.borderBottomWidth, 10) -\r\n                                    (elmtRect.top + elmtRect.height);\r\n                            } else {\r\n                                right =\r\n                                    parseInt(parentStyles.width, 10) -\r\n                                    parseInt(parentStyles.borderLeftWidth, 10) -\r\n                                    parseInt(parentStyles.borderRightWidth, 10) -\r\n                                    (parseInt(dragStyles.left, 10) + parseInt(dragStyles.width, 10));\r\n                                bottom =\r\n                                    parseInt(parentStyles.height, 10) -\r\n                                    parseInt(parentStyles.borderTopWidth, 10) -\r\n                                    parseInt(parentStyles.borderBottomWidth, 10) -\r\n                                    (parseInt(dragStyles.top, 10) + parseInt(dragStyles.height, 10));\r\n                            }\r\n                            // -- -- --\r\n\r\n                            elmtL = parseFloat(dragStyles.left);\r\n                            elmtT = parseFloat(dragStyles.top);\r\n                            elmtR = right; // replace line with parseFloat(dragStyles.right); if EDGE code block above is removed\r\n                            elmtB = bottom; // replace line with parseFloat(dragStyles.bottom); if EDGE code block above is removed\r\n\r\n                            if (opts.snap) {\r\n                                if (opts.snap.trigger === 'panel') {\r\n                                    elmtL2 = elmtL ** 2;\r\n                                    elmtT2 = elmtT ** 2;\r\n                                    elmtR2 = elmtR ** 2;\r\n                                    elmtB2 = elmtB ** 2;\r\n                                } else if (opts.snap.trigger === 'pointer') {\r\n                                    if (self.options.container === 'window') {\r\n                                        elmtL = pmx;\r\n                                        elmtT = pmy;\r\n                                        elmtR = window.innerWidth - pmx;\r\n                                        elmtB = window.innerHeight - pmy;\r\n                                        elmtL2 = pmx ** 2;\r\n                                        elmtT2 = elmtT ** 2;\r\n                                        elmtR2 = elmtR ** 2;\r\n                                        elmtB2 = elmtB ** 2;\r\n                                    } else {\r\n                                        overlaps = self.overlaps(parent, 'paddingbox', e);\r\n                                        elmtL = overlaps.pointer.left;\r\n                                        elmtT = overlaps.pointer.top;\r\n                                        elmtR = overlaps.pointer.right;\r\n                                        elmtB = overlaps.pointer.bottom;\r\n                                        elmtL2 = overlaps.pointer.left ** 2;\r\n                                        elmtT2 = overlaps.pointer.top ** 2;\r\n                                        elmtR2 = overlaps.pointer.right ** 2;\r\n                                        elmtB2 = overlaps.pointer.bottom ** 2;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            let lefttopVectorDrag = Math.sqrt(elmtL2 + elmtT2),\r\n                                leftbottomVectorDrag = Math.sqrt(elmtL2 + elmtB2),\r\n                                righttopVectorDrag = Math.sqrt(elmtR2 + elmtT2),\r\n                                rightbottomVectorDrag = Math.sqrt(elmtR2 + elmtB2),\r\n                                horizontalDeltaDrag = Math.abs(elmtL - elmtR) / 2,\r\n                                verticalDeltaDrag = Math.abs(elmtT - elmtB) / 2,\r\n                                leftVectorDrag = Math.sqrt(elmtL2 + verticalDeltaDrag ** 2),\r\n                                topVectorDrag = Math.sqrt(elmtT2 + horizontalDeltaDrag ** 2),\r\n                                rightVectorDrag = Math.sqrt(elmtR2 + verticalDeltaDrag ** 2),\r\n                                bottomVectorDrag = Math.sqrt(elmtB2 + horizontalDeltaDrag ** 2);\r\n\r\n                            // prevent selections while dragging\r\n                            window.getSelection().removeAllRanges();\r\n\r\n                            // trigger drag permanently while dragging\r\n                            document.dispatchEvent(jspaneldrag);\r\n\r\n                            // move elmt and apply axis option\r\n                            if (!opts.axis || opts.axis === 'x') {\r\n                                self.style.left = startLeft + (pmx - psx) / scaleFactor.x + startLeftCorrection + 'px'; // set new css left of elmt depending on opts.axis\r\n                            }\r\n                            if (!opts.axis || opts.axis === 'y') {\r\n                                self.style.top = startTop + (pmy - psy) / scaleFactor.y + 'px'; // set new css top of elmt depending on opts.axis\r\n                            }\r\n\r\n                            // apply grid option\r\n                            if (opts.grid) {\r\n                                let grid = opts.grid,\r\n                                    axis = opts.axis;\r\n                                // formula rounds to nearest multiple of grid\r\n                                // https://www.webveteran.com/blog/web-coding/javascript-round-to-any-multiple-of-a-specific-number/\r\n                                let x = grid[0] * Math.round((startLeft + (pmx - psx)) / grid[0]),\r\n                                    y = grid[1] * Math.round((startTop + (pmy - psy)) / grid[1]);\r\n                                if (!axis || axis === 'x') {\r\n                                    self.style.left = `${x}px`;\r\n                                }\r\n                                if (!axis || axis === 'y') {\r\n                                    self.style.top = `${y}px`;\r\n                                }\r\n                            }\r\n\r\n                            // apply containment option\r\n                            if (opts.containment || opts.containment === 0) {\r\n                                let containment = opts.containment;\r\n                                let maxLeft, maxTop;\r\n                                // calc maxLeft and maxTop (minLeft and MinTop is equal to containment setting)\r\n                                if (self.options.container === 'window') {\r\n                                    maxLeft = window.innerWidth - parseFloat(dragStyles.width) - containment[1] - scrollbarwidths.y;\r\n                                    maxTop = window.innerHeight - parseFloat(dragStyles.height) - containment[2] - scrollbarwidths.x;\r\n                                } else {\r\n                                    let xCorr = parseFloat(parentStyles.borderLeftWidth) + parseFloat(parentStyles.borderRightWidth),\r\n                                        yCorr = parseFloat(parentStyles.borderTopWidth) + parseFloat(parentStyles.borderBottomWidth);\r\n                                    maxLeft =\r\n                                        parentRect.width / scaleFactor.x - parseFloat(dragStyles.width) - containment[1] - xCorr - scrollbarwidths.y;\r\n                                    maxTop =\r\n                                        parentRect.height / scaleFactor.y -\r\n                                        parseFloat(dragStyles.height) -\r\n                                        containment[2] -\r\n                                        yCorr -\r\n                                        scrollbarwidths.x;\r\n                                }\r\n\r\n                                if (parseFloat(self.style.left) <= containment[3]) {\r\n                                    self.style.left = containment[3] + 'px';\r\n                                }\r\n                                if (parseFloat(self.style.top) <= containment[0]) {\r\n                                    self.style.top = containment[0] + 'px';\r\n                                }\r\n                                if (parseFloat(self.style.left) >= maxLeft) {\r\n                                    self.style.left = maxLeft + 'px';\r\n                                }\r\n                                if (parseFloat(self.style.top) >= maxTop) {\r\n                                    self.style.top = maxTop + 'px';\r\n                                }\r\n                            }\r\n\r\n                            // callback while dragging\r\n                            if (opts.drag.length) {\r\n                                let paneldata = {\r\n                                    left: elmtL,\r\n                                    top: elmtT,\r\n                                    right: elmtR,\r\n                                    bottom: elmtB,\r\n                                    width: parseFloat(dragStyles.width),\r\n                                    height: parseFloat(dragStyles.height),\r\n                                };\r\n                                jsPanel.processCallbacks(self, opts.drag, false, paneldata, e);\r\n                            }\r\n\r\n                            // apply snap options\r\n                            if (opts.snap) {\r\n                                let snapSens = opts.snap.sensitivity,\r\n                                    topSensAreaLength = parent === document.body ? window.innerWidth / 8 : parentRect.width / 8,\r\n                                    sideSensAreaLength = parent === document.body ? window.innerHeight / 8 : parentRect.height / 8;\r\n                                self.snappableTo = false;\r\n                                jsPanel.removeSnapAreas();\r\n\r\n                                if (lefttopVectorDrag < snapSens) {\r\n                                    if (opts.snap.snapLeftTop !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'left-top';\r\n                                            jsPanel.createSnapArea(self, 'lt', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.left > 0 && overlaps.pointer.top > 0) {\r\n                                                self.snappableTo = 'left-top';\r\n                                                jsPanel.createSnapArea(self, 'lt', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (leftbottomVectorDrag < snapSens) {\r\n                                    if (opts.snap.snapLeftBottom !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'left-bottom';\r\n                                            jsPanel.createSnapArea(self, 'lb', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.left > 0 && overlaps.pointer.bottom > 0) {\r\n                                                self.snappableTo = 'left-bottom';\r\n                                                jsPanel.createSnapArea(self, 'lb', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (righttopVectorDrag < snapSens) {\r\n                                    if (opts.snap.snapRightTop !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'right-top';\r\n                                            jsPanel.createSnapArea(self, 'rt', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.right > 0 && overlaps.pointer.top > 0) {\r\n                                                self.snappableTo = 'right-top';\r\n                                                jsPanel.createSnapArea(self, 'rt', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (rightbottomVectorDrag < snapSens) {\r\n                                    if (opts.snap.snapRightBottom !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'right-bottom';\r\n                                            jsPanel.createSnapArea(self, 'rb', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.right > 0 && overlaps.pointer.bottom > 0) {\r\n                                                self.snappableTo = 'right-bottom';\r\n                                                jsPanel.createSnapArea(self, 'rb', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (elmtT < snapSens && topVectorDrag < topSensAreaLength) {\r\n                                    if (opts.snap.snapCenterTop !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'center-top';\r\n                                            jsPanel.createSnapArea(self, 'ct', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.top > 0) {\r\n                                                self.snappableTo = 'center-top';\r\n                                                jsPanel.createSnapArea(self, 'ct', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (elmtL < snapSens && leftVectorDrag < sideSensAreaLength) {\r\n                                    if (opts.snap.snapLeftCenter !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'left-center';\r\n                                            jsPanel.createSnapArea(self, 'lc', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.left > 0) {\r\n                                                self.snappableTo = 'left-center';\r\n                                                jsPanel.createSnapArea(self, 'lc', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (elmtR < snapSens && rightVectorDrag < sideSensAreaLength) {\r\n                                    if (opts.snap.snapRightCenter !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'right-center';\r\n                                            jsPanel.createSnapArea(self, 'rc', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.right > 0) {\r\n                                                self.snappableTo = 'right-center';\r\n                                                jsPanel.createSnapArea(self, 'rc', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (elmtB < snapSens && bottomVectorDrag < topSensAreaLength) {\r\n                                    if (opts.snap.snapCenterBottom !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'center-bottom';\r\n                                            jsPanel.createSnapArea(self, 'cb', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.bottom > 0) {\r\n                                                self.snappableTo = 'center-bottom';\r\n                                                jsPanel.createSnapArea(self, 'cb', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            // opts.drop\r\n                            if (opts.drop && opts.drop.dropZones) {\r\n                                // IE doesn't offer document.elementsFromPoint() but document.msElementsFromPoint()\r\n                                let elementsFromPoint = jsPanel.isIE ? 'msElementsFromPoint' : 'elementsFromPoint';\r\n                                let elementsFrom = document[elementsFromPoint](e.clientX, e.clientY);\r\n                                // document.msElementsFromPoint() returns a nodeList -> convert to array\r\n                                if (!Array.isArray(elementsFrom)) {\r\n                                    elementsFrom = Array.prototype.slice.call(elementsFrom);\r\n                                }\r\n                                opts.drop.dropZones.forEach((zone) => {\r\n                                    // Array.prototype.includes() needs polyfill in IE\r\n                                    if (elementsFrom.includes(zone)) {\r\n                                        self.droppableTo = zone;\r\n                                    }\r\n                                });\r\n                                // do not include following if statement in this.options.dragit.drop.dropZones.forEach !!!!\r\n                                if (!elementsFrom.includes(self.droppableTo)) {\r\n                                    self.droppableTo = false;\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                        jsPanel.pointermove.forEach((e) => {\r\n                            document.addEventListener(e, dragElmt);\r\n                        });\r\n\r\n                        // remove drag handler when mouse leaves browser window (mouseleave doesn't work)\r\n                        window.addEventListener('mouseout', windowListener, false);\r\n                    });\r\n                });\r\n\r\n                jsPanel.pointerup.forEach((event) => {\r\n                    document.addEventListener(event, pointerUpHandlerDragit);\r\n                    window.removeEventListener('mouseout', windowListener);\r\n                });\r\n\r\n                // dragit is initialized - now disable if set\r\n                if (options.disable) {\r\n                    handle.style.pointerEvents = 'none';\r\n                }\r\n            });\r\n\r\n            return self;\r\n        };\r\n        self.dragit = (string) => {\r\n            const dragitOptions = Object.assign({}, jsPanel.defaults.dragit, options.dragit),\r\n                handles = self.querySelectorAll(dragitOptions.handles);\r\n            if (string === 'disable') {\r\n                handles.forEach((handle) => {\r\n                    handle.style.pointerEvents = 'none';\r\n                });\r\n            } else {\r\n                handles.forEach((handle) => {\r\n                    handle.style.pointerEvents = 'auto';\r\n                });\r\n            }\r\n            return self;\r\n        };\r\n\r\n        self.sizeit = (options = {}) => {\r\n            const jspanelresizestart = new CustomEvent('jspanelresizestart', { detail: self.id }),\r\n                jspanelresize = new CustomEvent('jspanelresize', { detail: self.id }),\r\n                jspanelresizestop = new CustomEvent('jspanelresizestop', { detail: self.id });\r\n            // make panel available as event object property 'panel'\r\n            [jspanelresizestart, jspanelresize, jspanelresizestop].forEach((evt) => {\r\n                evt.panel = self;\r\n            });\r\n            let opts = {},\r\n                resizePanel,\r\n                resizestarted,\r\n                w,\r\n                h,\r\n                startWidth,\r\n                startHeight;\r\n\r\n            opts.handles = options.handles || jsPanel.defaults.resizeit.handles;\r\n            opts.handles.split(',').forEach((item) => {\r\n                const node = document.createElement('DIV');\r\n                node.className = `jsPanel-resizeit-handle jsPanel-resizeit-${item.trim()}`;\r\n                //node.style.zIndex = 90;\r\n                self.append(node);\r\n            });\r\n            // cache option aspectRatio of original resizeit configuration (is restored on pointerup)\r\n            let cachedOptionAspectRatio = options.aspectRatio ? options.aspectRatio : false;\r\n\r\n            function windowListener(e) {\r\n                if (e.relatedTarget === null) {\r\n                    jsPanel.pointermove.forEach((evt) => {\r\n                        document.removeEventListener(evt, resizePanel, false);\r\n                    });\r\n                }\r\n            }\r\n\r\n            function pointerUpHandlerResizeit(e) {\r\n                jsPanel.pointermove.forEach((evt) => {\r\n                    document.removeEventListener(evt, resizePanel, false);\r\n                });\r\n                if (e.target.classList && e.target.classList.contains('jsPanel-resizeit-handle')) {\r\n                    let isLeftChange,\r\n                        isTopChange,\r\n                        cl = e.target.className;\r\n                    if (cl.match(/jsPanel-resizeit-nw|jsPanel-resizeit-w|jsPanel-resizeit-sw/i)) {\r\n                        isLeftChange = true;\r\n                    }\r\n                    if (cl.match(/jsPanel-resizeit-nw|jsPanel-resizeit-n|jsPanel-resizeit-ne/i)) {\r\n                        isTopChange = true;\r\n                    }\r\n\r\n                    // snap panel to grid (doesn't work that well if inside function resizePanel)\r\n                    if (opts.grid && Array.isArray(opts.grid)) {\r\n                        if (opts.grid.length === 1) {\r\n                            opts.grid[1] = opts.grid[0];\r\n                        }\r\n                        const cw = parseFloat(self.style.width),\r\n                            ch = parseFloat(self.style.height),\r\n                            modW = cw % opts.grid[0],\r\n                            modH = ch % opts.grid[1],\r\n                            cx = parseFloat(self.style.left),\r\n                            cy = parseFloat(self.style.top),\r\n                            modX = cx % opts.grid[0],\r\n                            modY = cy % opts.grid[1];\r\n\r\n                        if (modW < opts.grid[0] / 2) {\r\n                            self.style.width = cw - modW + 'px';\r\n                        } else {\r\n                            self.style.width = cw + (opts.grid[0] - modW) + 'px';\r\n                        }\r\n                        if (modH < opts.grid[1] / 2) {\r\n                            self.style.height = ch - modH + 'px';\r\n                        } else {\r\n                            self.style.height = ch + (opts.grid[1] - modH) + 'px';\r\n                        }\r\n\r\n                        if (isLeftChange) {\r\n                            if (modX < opts.grid[0] / 2) {\r\n                                self.style.left = cx - modX + 'px';\r\n                            } else {\r\n                                self.style.left = cx + (opts.grid[0] - modX) + 'px';\r\n                            }\r\n                        }\r\n                        if (isTopChange) {\r\n                            if (modY < opts.grid[1] / 2) {\r\n                                self.style.top = cy - modY + 'px';\r\n                            } else {\r\n                                self.style.top = cy + (opts.grid[1] - modY) + 'px';\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (resizestarted) {\r\n                    self.content.style.pointerEvents = 'inherit';\r\n                    resizestarted = undefined;\r\n                    self.saveCurrentDimensions();\r\n                    self.saveCurrentPosition();\r\n                    self.calcSizeFactors();\r\n                    let smallifyBtn = self.controlbar.querySelector('.jsPanel-btn-smallify');\r\n                    let elmtRect = self.getBoundingClientRect();\r\n                    if (smallifyBtn && elmtRect.height > startHeight + 5) {\r\n                        smallifyBtn.style.transform = 'rotate(0deg)';\r\n                    }\r\n                    document.dispatchEvent(jspanelresizestop);\r\n\r\n                    if (opts.stop.length) {\r\n                        let stopStyles = window.getComputedStyle(self),\r\n                            paneldata = {\r\n                                left: parseFloat(stopStyles.left),\r\n                                top: parseFloat(stopStyles.top),\r\n                                width: parseFloat(stopStyles.width),\r\n                                height: parseFloat(stopStyles.height),\r\n                            };\r\n                        jsPanel.processCallbacks(self, opts.stop, false, paneldata, e);\r\n                    }\r\n                }\r\n                self.content.style.pointerEvents = 'inherit';\r\n                // restore other panel's css pointer-events\r\n                document.querySelectorAll('iframe').forEach((frame) => {\r\n                    frame.style.pointerEvents = 'auto';\r\n                });\r\n                // restore option aspectRatio to original configuration\r\n                opts.aspectRatio = cachedOptionAspectRatio;\r\n                document.removeEventListener(e, pointerUpHandlerResizeit);\r\n            }\r\n\r\n            self.querySelectorAll('.jsPanel-resizeit-handle').forEach((handle) => {\r\n                handle.style.touchAction = 'none';\r\n\r\n                jsPanel.pointerdown.forEach((event) => {\r\n                    handle.addEventListener(event, (e) => {\r\n                        // prevent window scroll while resizing elmt\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        // disable resizing for all mouse buttons but left\r\n                        if (e.button && e.button > 0) {\r\n                            return false;\r\n                        }\r\n                        // factor is needed only for the modifier key Shift feature\r\n                        let factor = 1;\r\n                        // setup and normalize resizeit options\r\n                        opts = Object.assign({}, jsPanel.defaults.resizeit, options);\r\n                        if (opts.containment || opts.containment === 0) {\r\n                            opts.containment = jsPanel.pOcontainment(opts.containment);\r\n                        }\r\n                        // legacy line: aspectRatio should be either 'panel' or 'content', not just true\r\n                        if (opts.aspectRatio && opts.aspectRatio === true) {\r\n                            opts.aspectRatio = 'panel';\r\n                        }\r\n                        // set aspectRatio according to modifier key\r\n                        if (jsPanel.modifier) {\r\n                            let modifier = jsPanel.modifier;\r\n                            if (modifier.altKey) {\r\n                                opts.aspectRatio = 'content';\r\n                            } else if (modifier.ctrlKey) {\r\n                                opts.aspectRatio = 'panel';\r\n                            } else if (modifier.shiftKey) {\r\n                                opts.aspectRatio = false;\r\n                                factor = 2; // does work only with 2 as value\r\n                            }\r\n                        }\r\n\r\n                        // noinspection JSUnresolvedFunction\r\n                        let maxWidth = typeof opts.maxWidth === 'function' ? opts.maxWidth() : opts.maxWidth || 10000,\r\n                            maxHeight = typeof opts.maxHeight === 'function' ? opts.maxHeight() : opts.maxHeight || 10000,\r\n                            minWidth = typeof opts.minWidth === 'function' ? opts.minWidth() : opts.minWidth,\r\n                            minHeight = typeof opts.minHeight === 'function' ? opts.minHeight() : opts.minHeight;\r\n\r\n                        self.content.style.pointerEvents = 'none';\r\n                        // prevents iframes in other panel from interfering with resize action of dragged panel\r\n                        document.querySelectorAll('iframe').forEach((frame) => {\r\n                            frame.style.pointerEvents = 'none';\r\n                        });\r\n\r\n                        // noinspection JSUnresolvedVariable\r\n                        const elmtParent = self.parentElement,\r\n                            elmtParentTagName = elmtParent.tagName.toLowerCase(),\r\n                            elmtRect = self.getBoundingClientRect(),\r\n                            elmtParentRect = elmtParent.getBoundingClientRect(),\r\n                            elmtParentStyles = window.getComputedStyle(elmtParent, null),\r\n                            elmtParentBLW = parseInt(elmtParentStyles.borderLeftWidth, 10),\r\n                            elmtParentBTW = parseInt(elmtParentStyles.borderTopWidth, 10),\r\n                            elmtParentPosition = elmtParentStyles.getPropertyValue('position'),\r\n                            startX = (e.clientX || e.clientX === 0) || e.touches[0].clientX,\r\n                            startY = (e.clientY || e.clientY === 0) || e.touches[0].clientY,\r\n                            startRatio = startX / startY,\r\n                            resizeHandleClassList = e.target.classList,\r\n                            scaleFactor = self.getScaleFactor(),\r\n                            aspectRatio = elmtRect.width / elmtRect.height,\r\n                            elmtContentRect = self.content.getBoundingClientRect(),\r\n                            aspectRatioContent = elmtContentRect.width / elmtContentRect.height,\r\n                            hdrHeight = self.header.getBoundingClientRect().height, // needed in aspectRatio\r\n                            ftrHeight = self.footer.getBoundingClientRect().height || 0; // needed in aspectRatio\r\n                        let startLeft = elmtRect.left,\r\n                            startTop = elmtRect.top,\r\n                            maxWidthEast = 10000,\r\n                            maxWidthWest = 10000,\r\n                            maxHeightSouth = 10000,\r\n                            maxHeightNorth = 10000;\r\n\r\n                        startWidth = elmtRect.width;\r\n                        startHeight = elmtRect.height;\r\n\r\n                        if (elmtParentTagName !== 'body') {\r\n                            startLeft = elmtRect.left - elmtParentRect.left + elmtParent.scrollLeft;\r\n                            startTop = elmtRect.top - elmtParentRect.top + elmtParent.scrollTop;\r\n                        }\r\n\r\n                        // calc min/max left/top values if containment is set - code from jsDraggable\r\n                        if (elmtParentTagName === 'body' && opts.containment) {\r\n                            maxWidthEast = document.documentElement.clientWidth - elmtRect.left;\r\n                            maxHeightSouth = document.documentElement.clientHeight - elmtRect.top;\r\n                            maxWidthWest = elmtRect.width + elmtRect.left;\r\n                            maxHeightNorth = elmtRect.height + elmtRect.top;\r\n                        } else {\r\n                            // if panel is NOT in body\r\n                            if (opts.containment) {\r\n                                if (elmtParentPosition === 'static') {\r\n                                    maxWidthEast = elmtParentRect.width - elmtRect.left + elmtParentBLW;\r\n                                    maxHeightSouth = elmtParentRect.height + elmtParentRect.top - elmtRect.top + elmtParentBTW;\r\n                                    maxWidthWest = elmtRect.width + (elmtRect.left - elmtParentRect.left) - elmtParentBLW;\r\n                                    maxHeightNorth = elmtRect.height + (elmtRect.top - elmtParentRect.top) - elmtParentBTW;\r\n                                } else {\r\n                                    maxWidthEast = elmtParent.clientWidth - (elmtRect.left - elmtParentRect.left) / scaleFactor.x + elmtParentBLW;\r\n                                    maxHeightSouth = elmtParent.clientHeight - (elmtRect.top - elmtParentRect.top) / scaleFactor.y + elmtParentBTW;\r\n                                    maxWidthWest = (elmtRect.width + elmtRect.left - elmtParentRect.left) / scaleFactor.x - elmtParentBLW;\r\n                                    maxHeightNorth = self.clientHeight + (elmtRect.top - elmtParentRect.top) / scaleFactor.y - elmtParentBTW;\r\n                                }\r\n                            }\r\n                        }\r\n                        // if original opts.containment is array\r\n                        if (opts.containment) {\r\n                            maxWidthWest -= opts.containment[3];\r\n                            maxHeightNorth -= opts.containment[0];\r\n                            maxWidthEast -= opts.containment[1];\r\n                            maxHeightSouth -= opts.containment[2];\r\n                        }\r\n\r\n                        // calculate corrections for rotated panels\r\n                        const computedStyle = window.getComputedStyle(self),\r\n                            wDif = parseFloat(computedStyle.width) - elmtRect.width,\r\n                            hDif = parseFloat(computedStyle.height) - elmtRect.height;\r\n                        let xDif = parseFloat(computedStyle.left) - elmtRect.left,\r\n                            yDif = parseFloat(computedStyle.top) - elmtRect.top;\r\n                        if (elmtParent !== document.body) {\r\n                            xDif += elmtParentRect.left;\r\n                            yDif += elmtParentRect.top;\r\n                        }\r\n                        // used in aspectRatio code\r\n                        let borderTopWidth = parseInt(computedStyle.borderTopWidth, 10),\r\n                            borderRightWidth = parseInt(computedStyle.borderRightWidth, 10),\r\n                            borderBottomWidth = parseInt(computedStyle.borderBottomWidth, 10),\r\n                            borderLeftWidth = parseInt(computedStyle.borderLeftWidth, 10);\r\n\r\n                        resizePanel = (evt) => {\r\n                            evt.preventDefault();\r\n                            // trigger resizestarted only once per resize\r\n                            if (!resizestarted) {\r\n                                document.dispatchEvent(jspanelresizestart);\r\n                                if (opts.start.length) {\r\n                                    jsPanel.processCallbacks(\r\n                                        self,\r\n                                        opts.start,\r\n                                        false,\r\n                                        {\r\n                                            width: startWidth,\r\n                                            height: startHeight,\r\n                                            left: startLeft,\r\n                                            top: startTop,\r\n                                        },\r\n                                        evt\r\n                                    );\r\n                                }\r\n                                self.front();\r\n                                if (elmtRect.height > startHeight + 5) {\r\n                                    self.status = 'normalized';\r\n                                    self.setControls(['.jsPanel-btn-normalize']);\r\n                                }\r\n                            }\r\n                            resizestarted = 1;\r\n                            // trigger resize permanently while resizing\r\n                            document.dispatchEvent(jspanelresize);\r\n\r\n                            // possibly updated while resizing\r\n                            let eventX = evt.touches ? evt.touches[0].clientX : evt.clientX,\r\n                                eventY = evt.touches ? evt.touches[0].clientY : evt.clientY,\r\n                                overlaps;\r\n\r\n                            if (resizeHandleClassList.contains('jsPanel-resizeit-e')) {\r\n                                //w = startWidth + (eventX - startX) / scaleFactor.x + wDif;\r\n                                w = startWidth + ((eventX - startX) * factor) / scaleFactor.x + wDif; // needs left adjust, for width and height adjust factor may be either 1 (no adjust) or 2\r\n                                if (w >= maxWidthEast) {\r\n                                    w = maxWidthEast;\r\n                                }\r\n                                if (w >= maxWidth) {\r\n                                    w = maxWidth;\r\n                                }\r\n                                if (w <= minWidth) {\r\n                                    w = minWidth;\r\n                                }\r\n                                self.style.width = w + 'px';\r\n                                if (factor === 2) {\r\n                                    // factor works only with value of 2 when adjusting left or top\r\n                                    self.style.left = startLeft - (eventX - startX) + 'px';\r\n                                }\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.height =\r\n                                        (w - borderRightWidth - borderLeftWidth) / aspectRatioContent +\r\n                                        hdrHeight +\r\n                                        ftrHeight +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.bottom <= opts.containment[2]) {\r\n                                            self.style.height = maxHeightSouth + 'px';\r\n                                            self.style.width = maxHeightSouth * aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.height = w / aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.bottom <= opts.containment[2]) {\r\n                                            self.style.height = maxHeightSouth + 'px';\r\n                                            self.style.width = maxHeightSouth * aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-s')) {\r\n                                //h = startHeight + (eventY - startY) / scaleFactor.y + hDif;\r\n                                h = startHeight + ((eventY - startY) * factor) / scaleFactor.y + hDif; // needs top adjust\r\n                                if (h >= maxHeightSouth) {\r\n                                    h = maxHeightSouth;\r\n                                }\r\n                                if (h >= maxHeight) {\r\n                                    h = maxHeight;\r\n                                }\r\n                                if (h <= minHeight) {\r\n                                    h = minHeight;\r\n                                }\r\n                                self.style.height = h + 'px';\r\n                                if (factor === 2) {\r\n                                    self.style.top = startTop - (eventY - startY) + 'px';\r\n                                }\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.width =\r\n                                        (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.width = h * aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-w')) {\r\n                                //w = startWidth + (startX - eventX) / scaleFactor.x + wDif;\r\n                                w = startWidth + ((startX - eventX) * factor) / scaleFactor.x + wDif; // doesn't need left adjust\r\n                                if (w <= maxWidth && w >= minWidth && w <= maxWidthWest) {\r\n                                    self.style.left = startLeft + (eventX - startX) / scaleFactor.x + xDif + 'px';\r\n                                }\r\n                                if (w >= maxWidthWest) {\r\n                                    w = maxWidthWest;\r\n                                }\r\n                                if (w >= maxWidth) {\r\n                                    w = maxWidth;\r\n                                }\r\n                                if (w <= minWidth) {\r\n                                    w = minWidth;\r\n                                }\r\n                                self.style.width = w + 'px';\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.height =\r\n                                        (w - borderRightWidth - borderLeftWidth) / aspectRatioContent +\r\n                                        hdrHeight +\r\n                                        ftrHeight +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.bottom <= opts.containment[2]) {\r\n                                            self.style.height = maxHeightSouth + 'px';\r\n                                            self.style.width = maxHeightSouth * aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.height = w / aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.bottom <= opts.containment[2]) {\r\n                                            self.style.height = maxHeightSouth + 'px';\r\n                                            self.style.width = maxHeightSouth * aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-n')) {\r\n                                //h = startHeight + (startY - eventY) / scaleFactor.y + hDif;\r\n                                h = startHeight + ((startY - eventY) * factor) / scaleFactor.y + hDif; // doesn't need top adjust\r\n                                if (h <= maxHeight && h >= minHeight && h <= maxHeightNorth) {\r\n                                    self.style.top = startTop + (eventY - startY) / scaleFactor.y + yDif + 'px';\r\n                                }\r\n                                if (h >= maxHeightNorth) {\r\n                                    h = maxHeightNorth;\r\n                                }\r\n                                if (h >= maxHeight) {\r\n                                    h = maxHeight;\r\n                                }\r\n                                if (h <= minHeight) {\r\n                                    h = minHeight;\r\n                                }\r\n                                self.style.height = h + 'px';\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.width =\r\n                                        (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.width = h * aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-se')) {\r\n                                //w = startWidth + (eventX - startX) / scaleFactor.x + wDif;\r\n                                w = startWidth + ((eventX - startX) * factor) / scaleFactor.x + wDif; // needs left adjust\r\n                                if (w >= maxWidthEast) {\r\n                                    w = maxWidthEast;\r\n                                }\r\n                                if (w >= maxWidth) {\r\n                                    w = maxWidth;\r\n                                }\r\n                                if (w <= minWidth) {\r\n                                    w = minWidth;\r\n                                }\r\n                                self.style.width = w + 'px';\r\n                                if (factor === 2) {\r\n                                    self.style.left = startLeft - (eventX - startX) + 'px';\r\n                                }\r\n                                if (opts.aspectRatio) {\r\n                                    self.style.height = w / aspectRatio + 'px';\r\n                                }\r\n\r\n                                //h = startHeight + (eventY - startY) / scaleFactor.y + hDif;\r\n                                h = startHeight + ((eventY - startY) * factor) / scaleFactor.y + hDif; // needs top adjust\r\n                                if (h >= maxHeightSouth) {\r\n                                    h = maxHeightSouth;\r\n                                }\r\n                                if (h >= maxHeight) {\r\n                                    h = maxHeight;\r\n                                }\r\n                                if (h <= minHeight) {\r\n                                    h = minHeight;\r\n                                }\r\n                                self.style.height = h + 'px';\r\n                                if (factor === 2) {\r\n                                    self.style.top = startTop - (eventY - startY) + 'px';\r\n                                }\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.width =\r\n                                        (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.width = h * aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-sw')) {\r\n                                //h = startHeight + (eventY - startY) / scaleFactor.y + hDif;\r\n                                h = startHeight + ((eventY - startY) * factor) / scaleFactor.y + hDif; // needs top adjust\r\n                                if (h >= maxHeightSouth) {\r\n                                    h = maxHeightSouth;\r\n                                }\r\n                                if (h >= maxHeight) {\r\n                                    h = maxHeight;\r\n                                }\r\n                                if (h <= minHeight) {\r\n                                    h = minHeight;\r\n                                }\r\n                                self.style.height = h + 'px';\r\n                                if (factor === 2) {\r\n                                    self.style.top = startTop - (eventY - startY) + 'px';\r\n                                }\r\n                                if (opts.aspectRatio) {\r\n                                    self.style.width = h * aspectRatio + 'px';\r\n                                }\r\n\r\n                                //w = startWidth + (startX - eventX) / scaleFactor.x + wDif;\r\n                                w = startWidth + ((startX - eventX) * factor) / scaleFactor.x + wDif; // doesn't need left adjust\r\n                                if (w <= maxWidth && w >= minWidth && w <= maxWidthWest) {\r\n                                    self.style.left = startLeft + (eventX - startX) / scaleFactor.x + xDif + 'px';\r\n                                }\r\n                                if (w >= maxWidthWest) {\r\n                                    w = maxWidthWest;\r\n                                }\r\n                                if (w >= maxWidth) {\r\n                                    w = maxWidth;\r\n                                }\r\n                                if (w <= minWidth) {\r\n                                    w = minWidth;\r\n                                }\r\n                                self.style.width = w + 'px';\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.height =\r\n                                        (w - borderRightWidth - borderLeftWidth) / aspectRatioContent +\r\n                                        hdrHeight +\r\n                                        ftrHeight +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.bottom <= opts.containment[2]) {\r\n                                            self.style.height = maxHeightSouth + 'px';\r\n                                            self.style.width = maxHeightSouth * aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.height = w / aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.bottom <= opts.containment[2]) {\r\n                                            self.style.height = maxHeightSouth + 'px';\r\n                                            self.style.width = maxHeightSouth * aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-ne')) {\r\n                                //w = startWidth + (eventX - startX) / scaleFactor.x + wDif;\r\n                                w = startWidth + ((eventX - startX) * factor) / scaleFactor.x + wDif; // needs left adjust\r\n                                if (w >= maxWidthEast) {\r\n                                    w = maxWidthEast;\r\n                                }\r\n                                if (w >= maxWidth) {\r\n                                    w = maxWidth;\r\n                                }\r\n                                if (w <= minWidth) {\r\n                                    w = minWidth;\r\n                                }\r\n                                self.style.width = w + 'px';\r\n                                if (factor === 2) {\r\n                                    self.style.left = startLeft - (eventX - startX) + 'px';\r\n                                }\r\n                                if (opts.aspectRatio) {\r\n                                    self.style.height = w / aspectRatio + 'px';\r\n                                }\r\n\r\n                                //h = startHeight + (startY - eventY) / scaleFactor.y + hDif;\r\n                                h = startHeight + ((startY - eventY) * factor) / scaleFactor.y + hDif; // doesn't need top adjust\r\n                                if (h <= maxHeight && h >= minHeight && h <= maxHeightNorth) {\r\n                                    self.style.top = startTop + (eventY - startY) / scaleFactor.y + yDif + 'px';\r\n                                }\r\n                                if (h >= maxHeightNorth) {\r\n                                    h = maxHeightNorth;\r\n                                }\r\n                                if (h >= maxHeight) {\r\n                                    h = maxHeight;\r\n                                }\r\n                                if (h <= minHeight) {\r\n                                    h = minHeight;\r\n                                }\r\n                                self.style.height = h + 'px';\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.width =\r\n                                        (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.width = h * aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-nw')) {\r\n                                if (opts.aspectRatio && resizeHandleClassList.contains('jsPanel-resizeit-nw')) {\r\n                                    eventX = eventY * startRatio;\r\n                                    eventY = eventX / startRatio;\r\n                                }\r\n                                //w = startWidth + (startX - eventX) / scaleFactor.x + wDif;\r\n                                w = startWidth + ((startX - eventX) * factor) / scaleFactor.x + wDif; // doesn't need left adjust\r\n                                if (w <= maxWidth && w >= minWidth && w <= maxWidthWest) {\r\n                                    self.style.left = startLeft + (eventX - startX) / scaleFactor.x + xDif + 'px';\r\n                                }\r\n                                if (w >= maxWidthWest) {\r\n                                    w = maxWidthWest;\r\n                                }\r\n                                if (w >= maxWidth) {\r\n                                    w = maxWidth;\r\n                                }\r\n                                if (w <= minWidth) {\r\n                                    w = minWidth;\r\n                                }\r\n                                self.style.width = w + 'px';\r\n                                if (opts.aspectRatio) {\r\n                                    self.style.height = w / aspectRatio + 'px';\r\n                                }\r\n\r\n                                //h = startHeight + (startY - eventY) / scaleFactor.y + hDif;\r\n                                h = startHeight + ((startY - eventY) * factor) / scaleFactor.y + hDif; // doesn't need top adjust\r\n                                if (h <= maxHeight && h >= minHeight && h <= maxHeightNorth) {\r\n                                    self.style.top = startTop + (eventY - startY) / scaleFactor.y + yDif + 'px';\r\n                                }\r\n                                if (h >= maxHeightNorth) {\r\n                                    h = maxHeightNorth;\r\n                                }\r\n                                if (h >= maxHeight) {\r\n                                    h = maxHeight;\r\n                                }\r\n                                if (h <= minHeight) {\r\n                                    h = minHeight;\r\n                                }\r\n                                self.style.height = h + 'px';\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.width =\r\n                                        (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.width = h * aspectRatio + 'px';\r\n                                }\r\n                            }\r\n\r\n                            window.getSelection().removeAllRanges();\r\n\r\n                            // get current position and size values while resizing\r\n                            const styles = window.getComputedStyle(self),\r\n                                values = {\r\n                                    left: parseFloat(styles.left),\r\n                                    top: parseFloat(styles.top),\r\n                                    right: parseFloat(styles.right),\r\n                                    bottom: parseFloat(styles.bottom),\r\n                                    width: parseFloat(styles.width),\r\n                                    height: parseFloat(styles.height),\r\n                                };\r\n\r\n                            // callback while resizing\r\n                            if (opts.resize.length) {\r\n                                jsPanel.processCallbacks(self, opts.resize, false, values, evt);\r\n                            }\r\n                        };\r\n\r\n                        jsPanel.pointermove.forEach((event) => {\r\n                            document.addEventListener(event, resizePanel, false);\r\n                        });\r\n\r\n                        // remove resize handler when mouse leaves browser window (mouseleave doesn't work)\r\n                        window.addEventListener('mouseout', windowListener, false);\r\n                    });\r\n                });\r\n\r\n                jsPanel.pointerup.forEach(function (event) {\r\n                    document.addEventListener(event, pointerUpHandlerResizeit);\r\n                    window.removeEventListener('mouseout', windowListener);\r\n                });\r\n\r\n                // resizeit is initialized - now disable if set\r\n                if (options.disable) {\r\n                    handle.style.pointerEvents = 'none';\r\n                }\r\n            });\r\n\r\n            return self;\r\n        };\r\n        self.resizeit = (string) => {\r\n            const handles = self.querySelectorAll('.jsPanel-resizeit-handle');\r\n            if (string === 'disable') {\r\n                handles.forEach((handle) => {\r\n                    handle.style.pointerEvents = 'none';\r\n                });\r\n            } else {\r\n                handles.forEach((handle) => {\r\n                    handle.style.pointerEvents = 'auto';\r\n                });\r\n            }\r\n            return self;\r\n        };\r\n\r\n        self.getScaleFactor = () => {\r\n            const rect = self.getBoundingClientRect();\r\n            return {\r\n                x: rect.width / self.offsetWidth,\r\n                y: rect.height / self.offsetHeight,\r\n            };\r\n        };\r\n        self.calcSizeFactors = () => {\r\n            const styles = window.getComputedStyle(self);\r\n            if (options.container === 'window') {\r\n                self.hf = parseFloat(styles.left) / (window.innerWidth - parseFloat(styles.width));\r\n                self.vf = parseFloat(styles.top) / (window.innerHeight - parseFloat(styles.height));\r\n            } else {\r\n                if (self.parentElement) {\r\n                    let parentStyles = self.parentElement.getBoundingClientRect();\r\n                    self.hf = parseFloat(styles.left) / (parentStyles.width - parseFloat(styles.width));\r\n                    self.vf = parseFloat(styles.top) / (parentStyles.height - parseFloat(styles.height));\r\n                }\r\n            }\r\n        };\r\n        self.saveCurrentDimensions = (setStyleHeight = false) => {\r\n            const normData = window.getComputedStyle(self);\r\n            self.currentData.width = normData.width;\r\n            if (self.status === 'normalized') {\r\n                self.currentData.height = normData.height;\r\n            }\r\n            if (setStyleHeight) {\r\n                self.style.height = normData.height;\r\n            }\r\n        };\r\n        self.saveCurrentPosition = () => {\r\n            const normData = window.getComputedStyle(self);\r\n            self.currentData.left = normData.left;\r\n            self.currentData.top = normData.top;\r\n        };\r\n        self.reposition = (...params) => {\r\n            let pos = options.position,\r\n                updateCache = true,\r\n                callback;\r\n            params.forEach((value) => {\r\n                if (typeof value === 'string' || typeof value === 'object') {\r\n                    pos = value;\r\n                } else if (typeof value === 'boolean') {\r\n                    updateCache = value;\r\n                } else if (typeof value === 'function') {\r\n                    callback = value;\r\n                }\r\n            });\r\n\r\n            jsPanel.position(self, pos);\r\n\r\n            // check whether self has docked panels -> reposition docked panels as well\r\n            if (self.slaves && self.slaves.size > 0) {\r\n                self.slaves.forEach((slave) => {\r\n                    slave.reposition();\r\n                });\r\n            }\r\n\r\n            if (updateCache) {\r\n                self.saveCurrentPosition();\r\n            }\r\n            if (callback) {\r\n                callback.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.repositionOnSnap = (pos) => {\r\n            let offsetX = '0',\r\n                offsetY = '0',\r\n                margins = jsPanel.pOcontainment(options.dragit.containment);\r\n            // calculate offsets\r\n            if (options.dragit.snap.containment) {\r\n                switch (pos) {\r\n                    case 'left-top':\r\n                        offsetX = margins[3];\r\n                        offsetY = margins[0];\r\n                        break;\r\n                    case 'right-top':\r\n                        offsetX = -margins[1];\r\n                        offsetY = margins[0];\r\n                        break;\r\n                    case 'right-bottom':\r\n                        offsetX = -margins[1];\r\n                        offsetY = -margins[2];\r\n                        break;\r\n                    case 'left-bottom':\r\n                        offsetX = margins[3];\r\n                        offsetY = -margins[2];\r\n                        break;\r\n                    case 'center-top':\r\n                        offsetX = margins[3] / 2 - margins[1] / 2;\r\n                        offsetY = margins[0];\r\n                        break;\r\n                    case 'center-bottom':\r\n                        offsetX = margins[3] / 2 - margins[1] / 2;\r\n                        offsetY = -margins[2];\r\n                        break;\r\n                    case 'left-center':\r\n                        offsetX = margins[3];\r\n                        offsetY = margins[0] / 2 - margins[2] / 2;\r\n                        break;\r\n                    case 'right-center':\r\n                        offsetX = -margins[1];\r\n                        offsetY = margins[0] / 2 - margins[2] / 2;\r\n                        break;\r\n                }\r\n            }\r\n            /* jsPanel.position(self, `${pos} ${offsetX} ${offsetY}`);\r\n               For some reason I could not find the line above does not work (pos and offsets in one string), but only when\r\n               center-bottom is used with different settings for left/right margin.\r\n            */\r\n            jsPanel.position(self, pos);\r\n            jsPanel.setStyle(self, {\r\n                left: `calc(${self.style.left} + ${offsetX}px)`,\r\n                top: `calc(${self.style.top} + ${offsetY}px)`,\r\n            });\r\n        };\r\n        self.overlaps = (reference, elmtBox, event) => {\r\n            let panelRect = self.getBoundingClientRect(),\r\n                parentStyle = getComputedStyle(self.parentElement),\r\n                scaleFactor = self.getScaleFactor(),\r\n                parentBorderWidth = { top: 0, right: 0, bottom: 0, left: 0 },\r\n                referenceRect,\r\n                evtX = 0,\r\n                evtY = 0,\r\n                evtXparent = 0,\r\n                evtYparent = 0;\r\n\r\n            if (self.options.container !== 'window' && elmtBox === 'paddingbox') {\r\n                parentBorderWidth.top = parseInt(parentStyle.borderTopWidth, 10) * scaleFactor.y;\r\n                parentBorderWidth.right = parseInt(parentStyle.borderRightWidth, 10) * scaleFactor.x;\r\n                parentBorderWidth.bottom = parseInt(parentStyle.borderBottomWidth, 10) * scaleFactor.y;\r\n                parentBorderWidth.left = parseInt(parentStyle.borderLeftWidth, 10) * scaleFactor.x;\r\n            }\r\n\r\n            if (typeof reference === 'string') {\r\n                if (reference === 'window') {\r\n                    referenceRect = {\r\n                        left: 0,\r\n                        top: 0,\r\n                        right: window.innerWidth,\r\n                        bottom: window.innerHeight,\r\n                    };\r\n                } else if (reference === 'parent') {\r\n                    referenceRect = self.parentElement.getBoundingClientRect();\r\n                } else {\r\n                    referenceRect = document.querySelector(reference).getBoundingClientRect();\r\n                }\r\n            } else {\r\n                referenceRect = reference.getBoundingClientRect();\r\n            }\r\n\r\n            if (event) {\r\n                evtX = event.touches ? event.touches[0].clientX : event.clientX;\r\n                evtY = event.touches ? event.touches[0].clientY : event.clientY;\r\n                evtXparent = evtX - referenceRect.left;\r\n                evtYparent = evtY - referenceRect.top;\r\n            }\r\n\r\n            let overlapsX = panelRect.left < referenceRect.right && panelRect.right > referenceRect.left,\r\n                overlapsY = panelRect.top < referenceRect.bottom && panelRect.bottom > referenceRect.top,\r\n                overlaps = overlapsX && overlapsY;\r\n\r\n            return {\r\n                overlaps: overlaps,\r\n                top: panelRect.top - referenceRect.top - parentBorderWidth.top,\r\n                right: referenceRect.right - panelRect.right - parentBorderWidth.right,\r\n                bottom: referenceRect.bottom - panelRect.bottom - parentBorderWidth.bottom,\r\n                left: panelRect.left - referenceRect.left - parentBorderWidth.left,\r\n                parentBorderWidth: parentBorderWidth,\r\n                panelRect: panelRect,\r\n                referenceRect: referenceRect,\r\n                pointer: {\r\n                    // pointer coords relative to window and reference\r\n                    clientX: evtX,\r\n                    clientY: evtY,\r\n                    left: evtXparent - parentBorderWidth.left,\r\n                    top: evtYparent - parentBorderWidth.top,\r\n                    right: referenceRect.width - evtXparent - parentBorderWidth.right,\r\n                    bottom: referenceRect.height - evtYparent - parentBorderWidth.bottom,\r\n                },\r\n            };\r\n        };\r\n        self.setSize = () => {\r\n            if (options.panelSize) {\r\n                const values = jsPanel.pOsize(self, options.panelSize);\r\n                self.style.width = values.width;\r\n                self.style.height = values.height;\r\n            } else if (options.contentSize) {\r\n                const values = jsPanel.pOsize(self, options.contentSize);\r\n                self.content.style.width = values.width;\r\n                self.content.style.height = values.height;\r\n                self.style.width = values.width; // explicitly assign current width/height to panel\r\n                self.content.style.width = '100%';\r\n            }\r\n            return self;\r\n        };\r\n        self.resize = (...params) => {\r\n            let dimensions = window.getComputedStyle(self),\r\n                size = { width: dimensions.width, height: dimensions.height },\r\n                updateCache = true,\r\n                callback;\r\n            params.forEach((value) => {\r\n                if (typeof value === 'string') {\r\n                    size = value;\r\n                } else if (typeof value === 'object') {\r\n                    size = Object.assign(size, value);\r\n                } else if (typeof value === 'boolean') {\r\n                    updateCache = value;\r\n                } else if (typeof value === 'function') {\r\n                    callback = value;\r\n                }\r\n            });\r\n\r\n            let values = jsPanel.pOsize(self, size);\r\n            self.style.width = values.width;\r\n            self.style.height = values.height;\r\n\r\n            // check whether self has docked panels -> reposition docked panels\r\n            if (self.slaves && self.slaves.size > 0) {\r\n                self.slaves.forEach((slave) => {\r\n                    slave.reposition();\r\n                });\r\n            }\r\n\r\n            if (updateCache) {\r\n                self.saveCurrentDimensions();\r\n            }\r\n            self.status = 'normalized';\r\n            let smallifyBtn = self.controlbar.querySelector('.jsPanel-btn-smallify');\r\n            if (smallifyBtn) {\r\n                smallifyBtn.style.transform = 'rotate(0deg)';\r\n            }\r\n            if (callback) {\r\n                callback.call(self, self);\r\n            }\r\n            self.calcSizeFactors();\r\n            return self;\r\n        };\r\n        self.windowResizeHandler = (e) => {\r\n            if (e.target === window) {\r\n                // see https://bugs.jqueryui.com/ticket/7514\r\n                let status = self.status,\r\n                    onWindowResize = options.onwindowresize,\r\n                    left,\r\n                    top;\r\n                if (status === 'maximized' && onWindowResize) {\r\n                    self.maximize(false, true);\r\n                } else if (self.snapped && status !== 'minimized') {\r\n                    self.snap(self.snapped, true);\r\n                } else if (status === 'normalized' || status === 'smallified' || status === 'maximized') {\r\n                    let settingType = typeof onWindowResize;\r\n                    if (settingType === 'boolean') {\r\n                        left = (window.innerWidth - self.offsetWidth) * self.hf;\r\n                        self.style.left = left <= 0 ? 0 : left + 'px';\r\n                        top = (window.innerHeight - self.offsetHeight) * self.vf;\r\n                        self.style.top = top <= 0 ? 0 : top + 'px';\r\n                    } else if (settingType === 'function') {\r\n                        onWindowResize.call(self, e, self);\r\n                    } else if (settingType === 'object') {\r\n                        // { preset: boolean, callback: function(event, panel){} }\r\n                        if (onWindowResize.preset === true) {\r\n                            left = (window.innerWidth - self.offsetWidth) * self.hf;\r\n                            self.style.left = left <= 0 ? 0 : left + 'px';\r\n                            top = (window.innerHeight - self.offsetHeight) * self.vf;\r\n                            self.style.top = top <= 0 ? 0 : top + 'px';\r\n                            onWindowResize.callback.call(self, e, self);\r\n                        } else {\r\n                            onWindowResize.callback.call(self, e, self);\r\n                        }\r\n                    }\r\n                } else if (status === 'smallifiedmax' && onWindowResize) {\r\n                    self.maximize(false, true).smallify();\r\n                }\r\n                // check whether self has docked panels -> reposition docked panels as well\r\n                if (self.slaves && self.slaves.size > 0) {\r\n                    self.slaves.forEach((slave) => {\r\n                        slave.reposition();\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        self.setControls = (sel, cb) => {\r\n            self.header.querySelectorAll('.jsPanel-btn').forEach((item) => {\r\n                const btnClass = item.className.split('-'),\r\n                    btn = btnClass[btnClass.length - 1];\r\n                if (self.getAttribute(`data-btn${btn}`) !== 'hidden') {\r\n                    item.style.display = 'block';\r\n                }\r\n            });\r\n            sel.forEach((item) => {\r\n                const btn = self.controlbar.querySelector(item);\r\n                if (btn) {\r\n                    btn.style.display = 'none';\r\n                }\r\n            });\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.setControlStatus = (ctrl, action = 'enable', cb) => {\r\n            const btn = self.controlbar.querySelector(`.jsPanel-btn-${ctrl}`);\r\n            switch (action) {\r\n                case 'disable':\r\n                    if (self.getAttribute(`data-btn${ctrl}`) !== 'removed') {\r\n                        self.setAttribute(`data-btn${ctrl}`, 'disabled');\r\n                        btn.style.pointerEvents = 'none';\r\n                        btn.style.opacity = 0.4;\r\n                        btn.style.cursor = 'default';\r\n                    }\r\n                    break;\r\n                case 'hide':\r\n                    if (self.getAttribute(`data-btn${ctrl}`) !== 'removed') {\r\n                        self.setAttribute(`data-btn${ctrl}`, 'hidden');\r\n                        btn.style.display = 'none';\r\n                    }\r\n                    break;\r\n                case 'show':\r\n                    if (self.getAttribute(`data-btn${ctrl}`) !== 'removed') {\r\n                        self.setAttribute(`data-btn${ctrl}`, 'enabled');\r\n                        btn.style.display = 'block';\r\n                        btn.style.pointerEvents = 'auto';\r\n                        btn.style.opacity = 1;\r\n                        btn.style.cursor = 'pointer';\r\n                    }\r\n                    break;\r\n                case 'enable':\r\n                    if (self.getAttribute(`data-btn${ctrl}`) !== 'removed') {\r\n                        if (self.getAttribute(`data-btn${ctrl}`) === 'hidden') {\r\n                            btn.style.display = 'block';\r\n                        }\r\n                        self.setAttribute(`data-btn${ctrl}`, 'enabled');\r\n                        btn.style.pointerEvents = 'auto';\r\n                        btn.style.opacity = 1;\r\n                        btn.style.cursor = 'pointer';\r\n                    }\r\n                    break;\r\n                case 'remove':\r\n                    self.controlbar.removeChild(btn);\r\n                    self.setAttribute(`data-btn${ctrl}`, 'removed');\r\n                    break;\r\n            }\r\n\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.setControlSize = (ctrlSize) => {\r\n            // does not work with Font Awesome webfont (only svg/js)\r\n            const size = ctrlSize.toLowerCase(),\r\n                icons = self.controlbar.querySelectorAll('.jsPanel-btn');\r\n            icons.forEach((icon) => {\r\n                ['jsPanel-btn-xl', 'jsPanel-btn-lg', 'jsPanel-btn-md', 'jsPanel-btn-sm', 'jsPanel-btn-xs'].forEach((item) => {\r\n                    icon.classList.remove(item);\r\n                });\r\n                icon.classList.add(`jsPanel-btn-${size}`);\r\n            });\r\n            // adjust font-size of title\r\n            if (size === 'xl') {\r\n                self.titlebar.style.fontSize = '1.5rem';\r\n            } else if (size === 'lg') {\r\n                self.titlebar.style.fontSize = '1.25rem';\r\n            } else if (size === 'md') {\r\n                self.titlebar.style.fontSize = '1.05rem';\r\n            } else if (size === 'sm') {\r\n                self.titlebar.style.fontSize = '.9rem';\r\n            } else if (size === 'xs') {\r\n                self.titlebar.style.fontSize = '.8rem';\r\n            }\r\n        };\r\n        self.setHeaderControls = (cb) => {\r\n            // add custom controls\r\n            if (self.options.headerControls.add) {\r\n                let customControls = self.options.headerControls.add;\r\n                if (!Array.isArray(customControls)) {\r\n                    // if options.addControls is not an array make it one\r\n                    customControls = [customControls];\r\n                }\r\n                customControls.forEach((ctrl) => {\r\n                    self.addControl(ctrl);\r\n                });\r\n            }\r\n            // get all control names including controls added with option.addControls\r\n            let controls = [],\r\n                ctrls = self.controlbar.querySelectorAll('.jsPanel-btn');\r\n            ctrls.forEach((ctrl) => {\r\n                let match = ctrl.className.match(/jsPanel-btn-[a-z0-9]{3,}/i),\r\n                    ctrlName = match[0].substring(12);\r\n                controls.push(ctrlName);\r\n            });\r\n            // normalize option headerControls and reset it accordingly\r\n            const option = jsPanel.pOheaderControls(options.headerControls);\r\n            options.headerControls = option;\r\n            // set status of controls\r\n            controls.forEach((item) => {\r\n                if (option[item]) {\r\n                    self.setControlStatus(item, option[item]);\r\n                }\r\n            });\r\n            // set size of controls\r\n            self.setControlSize(option.size);\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.setHeaderLogo = (logo, cb) => {\r\n            let logos = [self.headerlogo],\r\n                minPanel = document.querySelector('#' + self.id + '-min');\r\n            if (minPanel) {\r\n                logos.push(minPanel.querySelector('.jsPanel-headerlogo'));\r\n            }\r\n\r\n            if (typeof logo === 'string') {\r\n                if (logo.substr(0, 1) !== '<') {\r\n                    // is assumed to be an img url\r\n                    logos.forEach((item) => {\r\n                        jsPanel.emptyNode(item);\r\n                        let img = document.createElement('img');\r\n                        img.src = logo;\r\n                        item.append(img);\r\n                    });\r\n                } else {\r\n                    logos.forEach((item) => {\r\n                        item.innerHTML = logo;\r\n                    });\r\n                }\r\n            } else {\r\n                // assumed to be a node object\r\n                logos.forEach((item) => {\r\n                    jsPanel.emptyNode(item);\r\n                    item.append(logo);\r\n                });\r\n            }\r\n            // images must not be draggable, otherwise dragit interactions locks\r\n            self.headerlogo.childNodes.forEach((logo) => {\r\n                if (logo.nodeName && logo.nodeName === 'IMG') {\r\n                    logo.setAttribute('draggable', 'false');\r\n                }\r\n            });\r\n\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.setHeaderRemove = (cb) => {\r\n            self.removeChild(self.header);\r\n            self.content.classList.add('jsPanel-content-noheader');\r\n            ['close', 'maximize', 'normalize', 'minimize', 'smallify'].forEach((item) => {\r\n                self.setAttribute(`data-btn${item}`, 'removed');\r\n            });\r\n\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.setHeaderTitle = (hdrTitle, cb) => {\r\n            let titles = [self.headertitle],\r\n                minPanel = document.querySelector('#' + self.id + '-min');\r\n            if (minPanel) {\r\n                titles.push(minPanel.querySelector('.jsPanel-title'));\r\n            }\r\n            if (typeof hdrTitle === 'string') {\r\n                titles.forEach((item) => {\r\n                    item.innerHTML = hdrTitle;\r\n                });\r\n            } else if (typeof hdrTitle === 'function') {\r\n                titles.forEach((item) => {\r\n                    jsPanel.emptyNode(item);\r\n                    item.innerHTML = hdrTitle();\r\n                });\r\n            } else {\r\n                // assumed to be a node object\r\n                titles.forEach((item) => {\r\n                    jsPanel.emptyNode(item);\r\n                    item.append(hdrTitle);\r\n                });\r\n            }\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.setIconfont = (font, panel = self, cb) => {\r\n            if (font) {\r\n                let classArray, textArray;\r\n                if (font === 'fa' || font === 'far' || font === 'fal' || font === 'fas' || font === 'fad') {\r\n                    classArray = [\r\n                        `${font} fa-window-close`,\r\n                        `${font} fa-window-maximize`,\r\n                        `${font} fa-window-restore`,\r\n                        `${font} fa-window-minimize`,\r\n                        `${font} fa-chevron-up`,\r\n                    ];\r\n                } else if (font === 'material-icons') {\r\n                    classArray = [font, font, font, font, font, font];\r\n                    textArray = ['close', 'fullscreen', 'fullscreen_exit', 'call_received', 'expand_less'];\r\n                } else if (Array.isArray(font)) {\r\n                    classArray = [\r\n                        `custom-control-icon ${font[4]}`,\r\n                        `custom-control-icon ${font[3]}`,\r\n                        `custom-control-icon ${font[2]}`,\r\n                        `custom-control-icon ${font[1]}`,\r\n                        `custom-control-icon ${font[0]}`,\r\n                    ];\r\n                } else if (font === 'bootstrap' || font === 'glyphicon') {\r\n                    classArray = [\r\n                        'glyphicon glyphicon-remove',\r\n                        'glyphicon glyphicon-fullscreen',\r\n                        'glyphicon glyphicon-resize-full',\r\n                        'glyphicon glyphicon-minus',\r\n                        'glyphicon glyphicon-chevron-up',\r\n                    ];\r\n                } else {\r\n                    return panel;\r\n                }\r\n                panel.querySelectorAll('.jsPanel-controlbar .jsPanel-btn').forEach((item) => {\r\n                    jsPanel.emptyNode(item).innerHTML = '<span></span>';\r\n                });\r\n                Array.prototype.slice\r\n                    .call(panel.querySelectorAll('.jsPanel-controlbar .jsPanel-btn > span'))\r\n                    .reverse()\r\n                    .forEach((item, i) => {\r\n                        item.className = classArray[i];\r\n                        if (font === 'material-icons') {\r\n                            item.textContent = textArray[i];\r\n                        }\r\n                    });\r\n            }\r\n            if (cb) {\r\n                cb.call(panel, panel);\r\n            }\r\n            return panel;\r\n        };\r\n        self.addToolbar = (place, tb, cb) => {\r\n            if (place === 'header') {\r\n                place = self.headertoolbar;\r\n            } else if (place === 'footer') {\r\n                place = self.footer;\r\n            }\r\n\r\n            if (typeof tb === 'string') {\r\n                place.innerHTML = tb;\r\n            } else if (Array.isArray(tb)) {\r\n                tb.forEach((item) => {\r\n                    if (typeof item === 'string') {\r\n                        place.innerHTML += item;\r\n                    } else {\r\n                        place.append(item);\r\n                    }\r\n                });\r\n            } else if (typeof tb === 'function') {\r\n                let tool = tb.call(self, self);\r\n                if (typeof tool === 'string') {\r\n                    place.innerHTML = tool;\r\n                } else {\r\n                    place.append(tool);\r\n                }\r\n            } else {\r\n                place.append(tb);\r\n            }\r\n\r\n            place.classList.add('active');\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.addCloseControl = () => {\r\n            let ctrl = document.createElement('button'),\r\n                colorContent = self.content.style.color;\r\n            ctrl.classList.add('jsPanel-addCloseCtrl');\r\n            ctrl.innerHTML = jsPanel.icons.close;\r\n            ctrl.style.color = colorContent;\r\n            if (self.options.rtl) {\r\n                ctrl.classList.add('rtl');\r\n            }\r\n            self.appendChild(ctrl);\r\n            jsPanel.pointerup.forEach((evt) => {\r\n                ctrl.addEventListener(evt, (e) => {\r\n                    e.preventDefault();\r\n                    // disable close for all mouse buttons but left\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    self.close(null, true);\r\n                });\r\n            });\r\n            // pointerdown handler needed to prevent side effect with resize handles\r\n            jsPanel.pointerdown.forEach((evt) => {\r\n                ctrl.addEventListener(evt, (e) => {\r\n                    e.preventDefault();\r\n                });\r\n            });\r\n            return self;\r\n        };\r\n        self.addControl = (obj) => {\r\n            // obj.name - string, the name of the control, results for example in \"jsPanel-btn jsPanel-btn-menu\"\r\n            // obj.html - string, the html of the control to add, for example \"<span class='fa fa-menu'></span>\"\r\n            // obj.handler - function(panel, control), the event handler to assign to the new control\r\n            // obj.position - number, the position within the controlbar where the control is to be added\r\n            if (!obj.html) {\r\n                return self;\r\n            }\r\n            if (!obj.position) {\r\n                obj.position = 1;\r\n            }\r\n\r\n            const count = self.controlbar.querySelectorAll('.jsPanel-btn').length;\r\n            let control = document.createElement('button');\r\n            control.innerHTML = obj.html;\r\n            control.className = `jsPanel-btn jsPanel-btn-${obj.name} jsPanel-btn-${options.headerControls.size}`;\r\n            control.style.color = self.header.style.color;\r\n            if (obj.position > count) {\r\n                // new control is the first from right (default ltr text-direction) or the first from left (if option rtl is used)\r\n                self.controlbar.append(control);\r\n            } else {\r\n                self.controlbar.insertBefore(control, self.querySelector(`.jsPanel-controlbar .jsPanel-btn:nth-child(${obj.position})`));\r\n            }\r\n            const ariaLabel = obj.ariaLabel || obj.name;\r\n            if (ariaLabel) {\r\n                control.setAttribute('aria-label', ariaLabel);\r\n            }\r\n\r\n            jsPanel.pointerup.forEach((evt) => {\r\n                control.addEventListener(evt, (e) => {\r\n                    e.preventDefault();\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    obj.handler.call(self, self, control);\r\n                });\r\n            });\r\n            if (obj.afterInsert) {\r\n                obj.afterInsert.call(control, control);\r\n            }\r\n            return self;\r\n        };\r\n        self.setRtl = () => {\r\n            [self.header, self.content, self.footer].forEach((item) => {\r\n                item.dir = 'rtl';\r\n                if (options.rtl.lang) {\r\n                    item.lang = options.rtl.lang;\r\n                }\r\n            });\r\n        };\r\n\r\n        // option.id\r\n        self.id = options.id;\r\n        // option.paneltype classname\r\n        self.classList.add('jsPanel-' + options.paneltype);\r\n\r\n        // set z-index and paneltype class\r\n        if (options.paneltype === 'standard') {\r\n            self.style.zIndex = this.zi.next();\r\n        }\r\n\r\n        // option.container\r\n        panelContainer.append(self);\r\n        self.front(false, false); // just to ensure iframe code in self.front() works for very first panel as well, second false prevents onfronted callbacks to be executed\r\n        // option.theme\r\n        self.setTheme(options.theme);\r\n\r\n        // option.boxShadow\r\n        if (options.boxShadow) {\r\n            self.classList.add(`jsPanel-depth-${options.boxShadow}`);\r\n        }\r\n\r\n        /* option.header, option.iconfont, option.headerControls, option.headerLogo, option.headerTitle */\r\n        if (options.header) {\r\n            if (options.headerLogo) {\r\n                self.setHeaderLogo(options.headerLogo);\r\n            }\r\n            self.setIconfont(options.iconfont);\r\n            self.setHeaderTitle(options.headerTitle);\r\n            self.setHeaderControls(); // now handles controls added with option addControls as well\r\n\r\n            // compatibility code for IE11 due to flex bug - https://caniuse.com/#feat=flexbox\r\n            if (jsPanel.isIE) {\r\n                let bars = [self.headerbar, self.controlbar];\r\n                switch (self.options.headerControls.size) {\r\n                    case 'md':\r\n                        bars.forEach((bar) => {\r\n                            bar.style.height = '34px';\r\n                        });\r\n                        break;\r\n                    case 'xs':\r\n                        bars.forEach((bar) => {\r\n                            bar.style.height = '26px';\r\n                        });\r\n                        break;\r\n                    case 'sm':\r\n                        bars.forEach((bar) => {\r\n                            bar.style.height = '30px';\r\n                        });\r\n                        break;\r\n                    case 'lg':\r\n                        bars.forEach((bar) => {\r\n                            bar.style.height = '38px';\r\n                        });\r\n                        break;\r\n                    case 'xl':\r\n                        bars.forEach((bar) => {\r\n                            bar.style.height = '42px';\r\n                        });\r\n                        break;\r\n                }\r\n            }\r\n            // end - - - - - - - - -\r\n\r\n            if (options.header === 'auto-show-hide') {\r\n                let boxShadow = 'jsPanel-depth-' + options.boxShadow;\r\n                self.header.style.opacity = 0;\r\n                self.style.backgroundColor = 'transparent';\r\n                this.remClass(self, boxShadow);\r\n                this.setClass(self.content, boxShadow);\r\n                self.header.addEventListener('mouseenter', () => {\r\n                    self.header.style.opacity = 1;\r\n                    jsPanel.setClass(self, boxShadow);\r\n                    jsPanel.remClass(self.content, boxShadow);\r\n                });\r\n                self.header.addEventListener('mouseleave', () => {\r\n                    self.header.style.opacity = 0;\r\n                    jsPanel.remClass(self, boxShadow);\r\n                    jsPanel.setClass(self.content, boxShadow);\r\n                });\r\n            }\r\n        } else {\r\n            self.setHeaderRemove();\r\n            if (options.addCloseControl) {\r\n                self.addCloseControl();\r\n            }\r\n        }\r\n\r\n        // option.headerToolbar\r\n        if (options.headerToolbar) {\r\n            self.addToolbar(self.headertoolbar, options.headerToolbar);\r\n        }\r\n        // option.footerToolbar\r\n        if (options.footerToolbar) {\r\n            self.addToolbar(self.footer, options.footerToolbar);\r\n        }\r\n\r\n        // option.border\r\n        if (options.border) {\r\n            self.setBorder(options.border);\r\n        }\r\n        // option.borderRadius\r\n        if (options.borderRadius) {\r\n            self.setBorderRadius(options.borderRadius);\r\n        }\r\n\r\n        // option.content\r\n        if (options.content) {\r\n            if (typeof options.content === 'function') {\r\n                options.content.call(self, self);\r\n            } else if (typeof options.content === 'string') {\r\n                self.content.innerHTML = options.content;\r\n            } else {\r\n                self.content.append(options.content);\r\n            }\r\n        }\r\n\r\n        // option.contentAjax\r\n        if (options.contentAjax) {\r\n            this.ajax(options.contentAjax, self);\r\n        }\r\n\r\n        // option.contentFetch\r\n        if (options.contentFetch) {\r\n            this.fetch(options.contentFetch, self);\r\n        }\r\n\r\n        // option.contentOverflow\r\n        if (options.contentOverflow) {\r\n            const value = options.contentOverflow.split(' ');\r\n            if (value.length === 1) {\r\n                self.content.style.overflow = value[0];\r\n            } else if (value.length === 2) {\r\n                self.content.style.overflowX = value[0];\r\n                self.content.style.overflowY = value[1];\r\n            }\r\n        }\r\n\r\n        // option.autoclose -- should be before option.size\r\n        if (options.autoclose) {\r\n            if (typeof options.autoclose === 'number') {\r\n                options.autoclose = { time: options.autoclose + 'ms' };\r\n            } else if (typeof options.autoclose === 'string') {\r\n                options.autoclose = { time: options.autoclose };\r\n            }\r\n            let autoclose = Object.assign({}, jsPanel.defaultAutocloseConfig, options.autoclose);\r\n            if (autoclose.time && typeof autoclose.time === 'number') {\r\n                autoclose.time += 'ms';\r\n            }\r\n            let slider = self.progressbar.querySelector('div');\r\n            slider.addEventListener('animationend', (e) => {\r\n                e.stopPropagation();\r\n                self.progressbar.classList.remove('active');\r\n                self.close();\r\n            });\r\n            if (autoclose.progressbar) {\r\n                self.progressbar.classList.add('active');\r\n                if (autoclose.background) {\r\n                    if (jsPanel.themes.indexOf(autoclose.background) > -1) {\r\n                        self.progressbar.classList.add(autoclose.background + '-bg');\r\n                    } else if (jsPanel.colorNames[autoclose.background]) {\r\n                        self.progressbar.style.background = '#' + jsPanel.colorNames[autoclose.background];\r\n                    } else {\r\n                        self.progressbar.style.background = autoclose.background;\r\n                    }\r\n                } else {\r\n                    self.progressbar.classList.add('success-bg'); // default background for progressbar\r\n                }\r\n            }\r\n            slider.style.animation = `${autoclose.time} progressbar`;\r\n        }\r\n\r\n        // option.rtl\r\n        if (options.rtl) {\r\n            self.setRtl();\r\n        }\r\n        // option.size -- should be after option.theme\r\n        self.setSize();\r\n\r\n        // option.position\r\n        self.status = 'normalized';\r\n        // if option.position evaluates to false panel will not be positioned at all\r\n        if (options.position) {\r\n            this.position(self, options.position);\r\n        } else {\r\n            self.style.opacity = 1;\r\n        }\r\n        document.dispatchEvent(jspanelnormalized);\r\n        self.calcSizeFactors();\r\n\r\n        // option.animateIn\r\n        if (options.animateIn) {\r\n            // remove class again on animationend, otherwise opacity doesn't change when panel is dragged\r\n            self.addEventListener('animationend', () => {\r\n                this.remClass(self, options.animateIn);\r\n            });\r\n            this.setClass(self, options.animateIn);\r\n        }\r\n\r\n        // option.dragit AND option.resizeit AND option.syncMargins\r\n        if (options.syncMargins) {\r\n            let containment = this.pOcontainment(options.maximizedMargin);\r\n            if (options.dragit) {\r\n                options.dragit.containment = containment;\r\n                if (options.dragit.snap === true) {\r\n                    // options.dragit.snap must be object in order to set options.dragit.snap.containment = true;\r\n                    options.dragit.snap = jsPanel.defaultSnapConfig;\r\n                    options.dragit.snap.containment = true;\r\n                } else if (options.dragit.snap) {\r\n                    options.dragit.snap.containment = true;\r\n                }\r\n            }\r\n            if (options.resizeit) {\r\n                options.resizeit.containment = containment;\r\n            }\r\n        }\r\n\r\n        if (options.dragit) {\r\n            // callbacks must be array of function(s) in order to be able to dynamically add/remove callbacks (for example in extensions)\r\n            ['start', 'drag', 'stop'].forEach((item) => {\r\n                if (options.dragit[item]) {\r\n                    if (typeof options.dragit[item] === 'function') {\r\n                        options.dragit[item] = [options.dragit[item]];\r\n                    }\r\n                } else {\r\n                    options.dragit[item] = [];\r\n                }\r\n            });\r\n            self.drag(options.dragit);\r\n            // do not use self.options.dragit.stop.push() !!!\r\n            self.addEventListener(\r\n                'jspaneldragstop',\r\n                (e) => {\r\n                    if (e.panel === self) {\r\n                        self.calcSizeFactors();\r\n                    }\r\n                },\r\n                false\r\n            );\r\n        } else {\r\n            self.titlebar.style.cursor = 'default';\r\n        }\r\n\r\n        if (options.resizeit) {\r\n            // callbacks must be array of function(s) in order to be able to dynamically add/remove callbacks (for example in extensions)\r\n            ['start', 'resize', 'stop'].forEach((item) => {\r\n                if (options.resizeit[item]) {\r\n                    if (typeof options.resizeit[item] === 'function') {\r\n                        options.resizeit[item] = [options.resizeit[item]];\r\n                    }\r\n                } else {\r\n                    options.resizeit[item] = [];\r\n                }\r\n            });\r\n            self.sizeit(options.resizeit);\r\n            let startstatus = void 0;\r\n            // do not use self.options.resizeit.start.push() !!!\r\n            self.addEventListener(\r\n                'jspanelresizestart',\r\n                (e) => {\r\n                    if (e.panel === self) {\r\n                        startstatus = self.status;\r\n                    }\r\n                },\r\n                false\r\n            );\r\n            // do not use self.options.resizeit.stop.push() !!!\r\n            self.addEventListener(\r\n                'jspanelresizestop',\r\n                (e) => {\r\n                    if (e.panel === self) {\r\n                        if (\r\n                            (startstatus === 'smallified' || startstatus === 'smallifiedmax' || startstatus === 'maximized') &&\r\n                            parseFloat(self.style.height) > parseFloat(window.getComputedStyle(self.header).height)\r\n                        ) {\r\n                            self.setControls(['.jsPanel-btn-normalize']);\r\n                            self.status = 'normalized';\r\n                            document.dispatchEvent(jspanelnormalized);\r\n                            document.dispatchEvent(jspanelstatuschange);\r\n                            if (options.onstatuschange) {\r\n                                jsPanel.processCallbacks(self, options.onstatuschange, 'every');\r\n                            }\r\n                            self.calcSizeFactors();\r\n                        }\r\n                    }\r\n                },\r\n                false\r\n            );\r\n        }\r\n\r\n        // initialize self.currentData - must be after options position & size\r\n        self.saveCurrentDimensions(true);\r\n        self.saveCurrentPosition();\r\n\r\n        // option.setStatus\r\n        if (options.setStatus) {\r\n            if (options.setStatus === 'smallifiedmax') {\r\n                self.maximize().smallify();\r\n            } else if (options.setStatus === 'smallified') {\r\n                self.smallify();\r\n            } else {\r\n                // remove the char 'd' from end of string to get function name to call\r\n                self[options.setStatus.substr(0, options.setStatus.length - 1)]();\r\n            }\r\n        }\r\n\r\n        // front panel on mousedown\r\n        this.pointerdown.forEach((item) => {\r\n            self.addEventListener(\r\n                item,\r\n                (e) => {\r\n                    if (!e.target.closest('.jsPanel-btn-close') && !e.target.closest('.jsPanel-btn-minimize') && options.paneltype === 'standard') {\r\n                        self.front();\r\n                    }\r\n                },\r\n                false\r\n            );\r\n        });\r\n\r\n        // option onwindowresize\r\n        if (options.onwindowresize) {\r\n            // if container is 'window'\r\n            if (self.options.container === 'window') {\r\n                window.addEventListener('resize', self.windowResizeHandler, false);\r\n            }\r\n        }\r\n\r\n        // option onparentresize\r\n        if (options.onparentresize) {\r\n            let onResize = options.onparentresize,\r\n                settingType = typeof onResize,\r\n                parentPanel = self.isChildpanel();\r\n            if (parentPanel) {\r\n                const parentContainer = parentPanel.content;\r\n                let parentContainerSize = [];\r\n                self.parentResizeHandler = (e) => {\r\n                    // if resized panel is the parent panel of the one whose option onContentResize is set to true\r\n                    if (e.panel === parentPanel) {\r\n                        // get dimensions of parent panel's content section\r\n                        parentContainerSize[0] = parentContainer.offsetWidth;\r\n                        parentContainerSize[1] = parentContainer.offsetHeight;\r\n                        let status = self.status,\r\n                            left,\r\n                            top;\r\n                        if (status === 'maximized' && onResize) {\r\n                            self.maximize();\r\n                        } else if (self.snapped && status !== 'minimized') {\r\n                            self.snap(self.snapped, true);\r\n                        } else if (status === 'normalized' || status === 'smallified' || status === 'maximized') {\r\n                            if (settingType === 'function') {\r\n                                onResize.call(self, self, {\r\n                                    width: parentContainerSize[0],\r\n                                    height: parentContainerSize[1],\r\n                                });\r\n                            } else if (settingType === 'object' && onResize.preset === true) {\r\n                                left = (parentContainerSize[0] - self.offsetWidth) * self.hf;\r\n                                self.style.left = left <= 0 ? 0 : left + 'px';\r\n                                top = (parentContainerSize[1] - self.offsetHeight) * self.vf;\r\n                                self.style.top = top <= 0 ? 0 : top + 'px';\r\n                                onResize.callback.call(self, self, {\r\n                                    width: parentContainerSize[0],\r\n                                    height: parentContainerSize[1],\r\n                                });\r\n                            } else if (settingType === 'boolean') {\r\n                                left = (parentContainerSize[0] - self.offsetWidth) * self.hf;\r\n                                self.style.left = left <= 0 ? 0 : left + 'px';\r\n                                top = (parentContainerSize[1] - self.offsetHeight) * self.vf;\r\n                                self.style.top = top <= 0 ? 0 : top + 'px';\r\n                            }\r\n                        } else if (status === 'smallifiedmax' && onResize) {\r\n                            self.maximize().smallify();\r\n                        }\r\n                    }\r\n                };\r\n                document.addEventListener('jspanelresize', self.parentResizeHandler, false);\r\n            }\r\n        }\r\n\r\n        // global callbacks\r\n        if (this.globalCallbacks) {\r\n            if (Array.isArray(this.globalCallbacks)) {\r\n                this.globalCallbacks.forEach((item) => {\r\n                    item.call(self, self);\r\n                });\r\n            } else {\r\n                this.globalCallbacks.call(self, self);\r\n            }\r\n        }\r\n\r\n        // option.callback\r\n        if (options.callback) {\r\n            if (Array.isArray(options.callback)) {\r\n                options.callback.forEach((item) => {\r\n                    item.call(self, self);\r\n                });\r\n            } else {\r\n                options.callback.call(self, self);\r\n            }\r\n        }\r\n\r\n        // constructor callback\r\n        if (cb) {\r\n            cb.call(self, self);\r\n        }\r\n\r\n        document.dispatchEvent(jspanelloaded);\r\n        return self;\r\n    },\r\n};\r\n","import { jsPanel } from '../node_modules/jspanel4/es6module/jspanel.js';\n\n/**\n * Wraps jsPanel4 and exposes a small subset of it as web component.\n *\n * JinnWindow provides a slot 'icon' to plugin an icon acting as button\n * for opening the window. Note that the 'open' marker attribute should not\n * be present in this case.\n *\n * Current limitations:\n * due to limited functionality with '::slotted' selector currently only\n * 'img' and 'svg' elements are supported.\n */\nexport class JinnWindow extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n  }\n\n  connectedCallback() {\n    const style = `\n          :host {\n            display: block;\n            background: transparent;\n          }\n          .container{\n            position:fixed;\n            left:0;\n            top:0;\n            z-index:-1;\n            width:100vw;\n            height:100vh;\n          }\n          #default{\n            display:none;\n          }\n          \n          button{\n            background:transparent;\n            border:none;\n            cursor:pointer;\n          }\n          \n          ::slotted(*){\n            max-width:128px;\n            max-height:128px;\n            display: none;\n          }\n          \n          slot[name=icon]::slotted(*){\n            display:inline-block;\n          }\n        `;\n\n    const html = `\n          <button id=\"iconBtn\"><slot name=\"icon\"></slot></button> \n          <div class=\"container\">\n            <slot></slot>\n          </div>\n        `;\n\n    this.shadowRoot.innerHTML = `\n            <style>\n                ${style}\n            </style>\n            ${html}\n        `;\n\n    /**\n     * title of window to show on window handle\n     * @type {string|null}\n     */\n    this.title = this.hasAttribute('title') ? this.getAttribute('title') : null;\n    /**\n     * name of window for referral\n     * @type {string|null}\n     */\n    this.name = this.hasAttribute('name') ? this.getAttribute('name') : null;\n    /**\n     * position of window in viewport. Defaults to 'center'\n     * @type {string|string}\n     */\n    this.position = this.hasAttribute('position')\n      ? this.getAttribute('position')\n      : 'center';\n    /**\n     * wether or not to snap windows to corners and border centers\n     * @type {string|string}\n     */\n    this.snap = this.hasAttribute('snap') ? this.getAttribute('snap') : 'true';\n    /**\n     * the set of header icons to display.\n     * @type {string|string}\n     */\n    this.headercontrols = this.hasAttribute('headercontrols')\n      ? this.getAttribute('headercontrols')\n      : 'minimize smallify close normalize';\n    /**\n     * sizing the window with space-separated X,Y values\n     * @type {string|string}\n     */\n    this.size = this.hasAttribute('size') ? this.getAttribute('size') : 'auto';\n    this.panel = null;\n\n    const iconBtn = this.shadowRoot.getElementById('iconBtn');\n    iconBtn.addEventListener('click', () => {\n      this.open();\n    });\n\n    if (this.hasAttribute('open') && !this.panel) {\n      this.open();\n    }\n\n    document.addEventListener('jspanelclosed',ev => {\n      this.panel = null;\n    }, false);\n  }\n\n  open() {\n    if (this.panel) {\n      return;\n    }\n\n    // ### grabbing the content from the default slot which is second in template\n    const template = this.querySelector('template');\n    if (!template) {\n      console.error('no template specified');\n      return;\n    }\n    const clone = document.importNode(template.content, true);\n\n    // ### create wrapper div to hold content\n    const result = document.createElement('div');\n    result.appendChild(clone);\n    this.panel = jsPanel.create({\n      headerTitle: this.title,\n      theme: 'light',\n      contentSize: this.size,\n      position: this.position,\n      dragit: {\n        snap: this.snap,\n      },\n      headerControls: {\n        minimize: this.headercontrols.includes('minimize') ? 'true' : 'remove',\n        smallify: this.headercontrols.includes('smallify') ? 'true' : 'remove',\n        close: this.headercontrols.includes('close') ? 'true' : 'remove',\n        maximize: this.headercontrols.includes('maximize') ? 'true' : 'remove',\n        normalize: this.headercontrols.includes('normalize')\n          ? 'true'\n          : 'remove',\n      },\n      content: result,\n    });\n\n    const event = new CustomEvent('window-opened', {\n      composed: true,\n      bubbles: true,\n      detail: { title: this.title, name: this.name , content:result},\n    });\n\n    this.dispatchEvent(event);\n  }\n\n}\nif (!customElements.get('jinn-window')) {\n  customElements.define('jinn-window', JinnWindow);\n}\n\n"],"names":["jsPanel","version","date","ajaxAlwaysCallbacks","autopositionSpacing","closeOnEscape","document","addEventListener","e","key","code","getPanels","panel","classList","contains","some","item","options","call","close","defaults","boxShadow","container","contentSize","width","height","dragit","cursor","handles","opacity","disableOnMaximized","header","headerTitle","headerControls","size","iconfont","undefined","maximizedMargin","minimizeTo","paneltype","position","my","at","resizeit","minWidth","minHeight","theme","defaultAutocloseConfig","time","progressbar","defaultSnapConfig","sensitivity","trigger","active","extensions","globalCallbacks","icons","maximize","normalize","minimize","smallify","idCounter","isIE","navigator","appVersion","match","pointerdown","window","pointermove","pointerup","polyfills","Object","assign","defineProperty","enumerable","configurable","writable","value","target","TypeError","to","i","arguments","length","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","NodeList","prototype","forEach","callback","thisArg","this","Element","Document","DocumentFragment","append","argArr","Array","slice","docFrag","createDocumentFragment","argItem","isNode","Node","appendChild","createTextNode","String","closest","s","matches","ownerDocument","querySelectorAll","el","parentElement","CustomEvent","event","params","bubbles","cancelable","detail","evt","createEvent","initCustomEvent","Event","endsWith","searchStr","Position","substr","startsWith","searchString","includes","search","start","indexOf","Number","isInteger","isFinite","Math","floor","searchElement","fromIndex","o","n","k","max","abs","x","y","isNaN","themes","ziBase","colorFilledLight","colorFilledDark","colorFilled","colorBrightnessThreshold","colorNames","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","grey50","grey100","grey200","grey300","grey400","grey500","grey600","grey700","grey800","grey900","gray50","gray100","gray200","gray300","gray400","gray500","gray600","gray700","gray800","gray900","bluegrey50","bluegrey100","bluegrey200","bluegrey300","bluegrey400","bluegrey500","bluegrey600","bluegrey700","bluegrey800","bluegrey900","bluegray50","bluegray100","bluegray200","bluegray300","bluegray400","bluegray500","bluegray600","bluegray700","bluegray800","bluegray900","red50","red100","red200","red300","red400","red500","red600","red700","red800","red900","reda100","reda200","reda400","reda700","pink50","pink100","pink200","pink300","pink400","pink500","pink600","pink700","pink800","pink900","pinka100","pinka200","pinka400","pinka700","purple50","purple100","purple200","purple300","purple400","purple500","purple600","purple700","purple800","purple900","purplea100","purplea200","purplea400","purplea700","deeppurple50","deeppurple100","deeppurple200","deeppurple300","deeppurple400","deeppurple500","deeppurple600","deeppurple700","deeppurple800","deeppurple900","deeppurplea100","deeppurplea200","deeppurplea400","deeppurplea700","indigo50","indigo100","indigo200","indigo300","indigo400","indigo500","indigo600","indigo700","indigo800","indigo900","indigoa100","indigoa200","indigoa400","indigoa700","blue50","blue100","blue200","blue300","blue400","blue500","blue600","blue700","blue800","blue900","bluea100","bluea200","bluea400","bluea700","lightblue50","lightblue100","lightblue200","lightblue300","lightblue400","lightblue500","lightblue600","lightblue700","lightblue800","lightblue900","lightbluea100","lightbluea200","lightbluea400","lightbluea700","cyan50","cyan100","cyan200","cyan300","cyan400","cyan500","cyan600","cyan700","cyan800","cyan900","cyana100","cyana200","cyana400","cyana700","teal50","teal100","teal200","teal300","teal400","teal500","teal600","teal700","teal800","teal900","teala100","teala200","teala400","teala700","green50","green100","green200","green300","green400","green500","green600","green700","green800","green900","greena100","greena200","greena400","greena700","lightgreen50","lightgreen100","lightgreen200","lightgreen300","lightgreen400","lightgreen500","lightgreen600","lightgreen700","lightgreen800","lightgreen900","lightgreena100","lightgreena200","lightgreena400","lightgreena700","lime50","lime100","lime200","lime300","lime400","lime500","lime600","lime700","lime800","lime900","limea100","limea200","limea400","limea700","yellow50","yellow100","yellow200","yellow300","yellow400","yellow500","yellow600","yellow700","yellow800","yellow900","yellowa100","yellowa200","yellowa400","yellowa700","amber50","amber100","amber200","amber300","amber400","amber500","amber600","amber700","amber800","amber900","ambera100","ambera200","ambera400","ambera700","orange50","orange100","orange200","orange300","orange400","orange500","orange600","orange700","orange800","orange900","orangea100","orangea200","orangea400","orangea700","deeporange50","deeporange100","deeporange200","deeporange300","deeporange400","deeporange500","deeporange600","deeporange700","deeporange800","deeporange900","deeporangea100","deeporangea200","deeporangea400","deeporangea700","brown50","brown100","brown200","brown300","brown400","brown500","brown600","brown700","brown800","brown900","errorReporting","modifier","helper","usePointerEvents","use","color","val","r","g","b","h","l","channels","hsl","toLowerCase","result","RGBAPattern","HSLAPattern","namedColors","replace","rgb","parseInt","hex","rgbToHsl","css","exec","rgbToHex","hslToRgb","calcColors","primaryColor","threshold","primeColor","filledlightColor","lighten","filledColor","darken","fontColorForPrimary","perceivedBrightness","fontColorFilledlight","fontColorFilled","filleddarkColor","fontColorFilleddark","amount","parseFloat","lnew","round","hue2rgb","p","q","t","min","d","toString","pOposition","positionshorthand","pos","trim","split","auto","filter","autoposition","splice","my_at","offsets","offsetX","offsetY","of","join","style","querySelector","getPrototypeOf","jquery","panelRect","getBoundingClientRect","containerDomRect","containerRect","left","top","documentElement","clientWidth","innerHeight","scaleFactor","offsetWidth","offsetHeight","containerStyle","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","getComputedStyle","positionOfRect","scrollbarwidthsWindow","getScrollbarWidth","body","scrollbarwidthsContainer","panelStyle","applyPositionAutopos","applyPositionOffset","minLeft","minTop","maxLeft","maxTop","applyPositionMinMax","modify","applyPositionModify","newClass","add","newClassAll","ownIndex","index","offset","modifiedPosition","autopositionRemaining","autoPos","parent","reposition","addScript","path","type","cb","script","createElement","onload","src","head","ajax","ajaxConfig","config","urlParts","xhr","XMLHttpRequest","configDefaults","method","async","user","pwd","done","res","strToHtml","responseText","urlSelector","contentRemove","content","autoresize","autoreposition","url","err","errorpanel","timeout","withCredentials","responseType","encodeURI","shift","onreadystatechange","readyState","status","fail","always","ajaxAutoresizeAutoreposition","open","beforeSend","data","send","ajaxOrFetchConfig","oContentSize","parts","sizes","resize","createPanelTemplate","dataAttr","className","setAttribute","innerHTML","createMinimizedTemplate","createSnapArea","snapsens","emptyNode","node","firstChild","removeChild","extend","obj","ext","hasOwnProperty","fetch","fetchConfig","bodyMethod","response","resource","fetchInit","then","ok","condition","sort","a","zIndex","pOcontainer","list","nodeType","pOcontainment","arg","isArray","concat","pOsize","values","nums","innerWidth","prtStyles","border","pOborder","borderStyle","borderWidth","pOheaderControls","oHdrCtrls","setting","str","sizeMatch","ctrlMatch","processCallbacks","someOrEvery","param","param2","removeSnapAreas","resetZi","zi","startValue","next","elmt","clientHeight","styles","remClass","classnames","remove","setClass","setStyles","stylesobject","prop","setProperty","setStyle","createRange","createContextualFragment","toggleClass","classname","create","bgPanel","bgContent","colorHeader","colorContent","borderRadius","animateIn","id","getElementById","front","panelContainer","self","template","closetimer","currentData","headerbar","titlebar","headerlogo","headertitle","controlbar","headertoolbar","footer","snappableTo","snapped","droppableTo","autocloseProgressbar","jspanelloaded","jspanelstatuschange","jspanelbeforenormalize","jspanelnormalized","jspanelbeforemaximize","jspanelmaximized","jspanelbeforeminimize","jspanelminimized","jspanelbeforesmallify","jspanelsmallified","jspanelsmallifiedmax","jspanelbeforeunsmallify","jspanelfronted","jspanelbeforeclose","jspanelclosed","jspanelcloseduser","closeBtn","maxBtn","normBtn","smallBtn","minBtn","preventDefault","button","unsmallify","clearTheme","backgroundColor","marginLeft","borderTopColor","background","getThemeDetails","th","passedTheme","colors","filling","step1","step2","fillcolor","baseTheme","btn","testClass","span","applyColorTheme","themeDetails","borderTop","applyCustomTheme","lastIndexOf","col","setBorder","setBorderRadius","rad","br","borderTopLeftRadius","borderTopRightRadius","footerToolbar","borderBottomRightRadius","borderBottomLeftRadius","setTheme","minimized","closedBy","removeMinimizedReplacement","dispatchEvent","onclosed","removeEventListener","windowResizeHandler","parentResizeHandler","closedByUser","clearInterval","statusBefore","onbeforeclose","animateOut","stopPropagation","donotfront","onbeforemaximize","margins","transform","setControls","onstatuschange","onmaximized","onbeforeminimize","replacementContainer","replacement","createMinimizedReplacement","onminimized","onbeforenormalize","snap","onnormalized","onbeforesmallify","overflow","selfStyles","selfHeaderHeight","minBoxes","display","onsmallified","onbeforeunsmallify","onunsmallified","execOnFrontedCallbacks","newArr","map","onfronted","alreadySnapped","beforeSnap","containment","move","overlaps","source","saveCurrentDimensions","saveCurrentPosition","calcSizeFactors","closeChildpanels","getChildpanels","childpanels","isChildpanel","pp","parentpanel","tpl","font","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundAttachment","backgroundImage","backgroundSize","backgroundOrigin","backgroundClip","replaceChild","cloneNode","textContent","setIconfont","dataset","btnnormalize","btnmaximize","btnclose","drag","dragstarted","dragElmt","opts","jspaneldragstart","jspaneldrag","jspaneldragstop","camelcase","string","word","charAt","toUpperCase","windowListener","relatedTarget","pointerUpHandlerDragit","snapLeftTop","snapCenterTop","snapRightTop","snapRightCenter","snapRightBottom","snapCenterBottom","snapLeftBottom","snapLeftCenter","repositionOnSnap","sourceContainer","drop","stop","stopStyles","paneldata","pointerEvents","frame","handle","touchAction","grid","startStyles","startLeft","startTop","startWidth","startHeight","psx","touches","clientX","psy","clientY","parentRect","parentStyles","getScaleFactor","startLeftCorrection","scrollbarwidths","resizeToPreSnap","intermediateStyles","delta","wHalf","dropZones","dropzones","zone","dropzonelist","nodelist","push","elmtL","elmtL2","elmtT","elmtT2","elmtR","elmtR2","elmtB","elmtB2","right","bottom","pmx","pmy","dragStyles","elmtRect","pointer","lefttopVectorDrag","sqrt","leftbottomVectorDrag","righttopVectorDrag","rightbottomVectorDrag","horizontalDeltaDrag","verticalDeltaDrag","leftVectorDrag","topVectorDrag","rightVectorDrag","bottomVectorDrag","getSelection","removeAllRanges","axis","xCorr","yCorr","snapSens","topSensAreaLength","sideSensAreaLength","elementsFromPoint","elementsFrom","disable","dragitOptions","sizeit","jspanelresizestart","jspanelresize","jspanelresizestop","resizePanel","resizestarted","w","cachedOptionAspectRatio","aspectRatio","pointerUpHandlerResizeit","isLeftChange","isTopChange","cl","cw","ch","modW","modH","cx","cy","modX","modY","smallifyBtn","factor","altKey","ctrlKey","shiftKey","maxWidth","maxHeight","elmtParent","elmtParentTagName","tagName","elmtParentRect","elmtParentStyles","elmtParentBLW","elmtParentBTW","elmtParentPosition","getPropertyValue","startX","startY","startRatio","resizeHandleClassList","elmtContentRect","aspectRatioContent","hdrHeight","ftrHeight","maxWidthEast","maxWidthWest","maxHeightSouth","maxHeightNorth","scrollLeft","scrollTop","computedStyle","wDif","hDif","xDif","yDif","eventX","eventY","rect","hf","vf","setStyleHeight","normData","updateCache","slaves","slave","reference","elmtBox","referenceRect","parentStyle","parentBorderWidth","evtX","evtY","evtXparent","evtYparent","overlapsX","overlapsY","setSize","panelSize","dimensions","onWindowResize","onwindowresize","settingType","preset","sel","btnClass","getAttribute","setControlStatus","ctrl","action","setControlSize","ctrlSize","icon","fontSize","setHeaderControls","customControls","addControl","controls","ctrlName","substring","option","setHeaderLogo","logo","logos","minPanel","img","childNodes","nodeName","setHeaderRemove","setHeaderTitle","hdrTitle","titles","classArray","textArray","reverse","addToolbar","place","tb","tool","addCloseControl","rtl","html","count","control","name","insertBefore","ariaLabel","handler","afterInsert","setRtl","dir","lang","headerLogo","bars","bar","headerToolbar","contentAjax","contentFetch","contentOverflow","overflowX","overflowY","autoclose","slider","animation","syncMargins","startstatus","setStatus","onparentresize","onResize","parentPanel","parentContainer","parentContainerSize","JinnWindow","HTMLElement","constructor","super","attachShadow","mode","connectedCallback","shadowRoot","title","hasAttribute","headercontrols","ev","clone","importNode","composed","customElements","get","define"],"mappings":"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"}